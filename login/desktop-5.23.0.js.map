{"version":3,"file":"desktop-5.23.0.js","sources":["../../../connect-desktop-client/node_modules/@glue42/core/src/metrics/const/metric-types.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/metrics/protocols/gw3/serializer.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/metrics/protocols/gw3/gw3.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/metrics/helpers.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/metrics/metrics/base.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/metrics/metrics/number.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/metrics/metrics/object.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/metrics/metrics/string.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/metrics/metrics/timestamp.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/metrics/system.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/metrics/repository.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/metrics/protocols/null/null.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/metrics/pertTracker.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/metrics/main.ts","../../../connect-desktop-client/node_modules/@glue42/core/node_modules/callback-registry/lib/index.js","../../../connect-desktop-client/node_modules/@glue42/core/src/connection/transports/inProc.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/connection/transports/worker.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/utils/utils.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/utils/pw.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/utils/timer.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/connection/transports/ws.ts","../../../connect-desktop-client/node_modules/@glue42/core/node_modules/shortid/lib/random/random-from-seed.js","../../../connect-desktop-client/node_modules/@glue42/core/node_modules/shortid/lib/alphabet.js","../../../connect-desktop-client/node_modules/@glue42/core/node_modules/shortid/lib/random/random-byte-browser.js","../../../connect-desktop-client/node_modules/@glue42/core/node_modules/shortid/node_modules/nanoid/format.browser.js","../../../connect-desktop-client/node_modules/@glue42/core/node_modules/shortid/lib/generate.js","../../../connect-desktop-client/node_modules/@glue42/core/node_modules/shortid/lib/build.js","../../../connect-desktop-client/node_modules/@glue42/core/node_modules/shortid/lib/is-valid.js","../../../connect-desktop-client/node_modules/@glue42/core/node_modules/shortid/lib/index.js","../../../connect-desktop-client/node_modules/@glue42/core/node_modules/shortid/index.js","../../../connect-desktop-client/node_modules/@glue42/core/src/connection/protocols/gw3Domain.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/connection/protocols/gw3.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/connection/replayer.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/utils/promise-plus.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/connection/transports/webPlatform.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/utils/wait-for.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/utils/sequelizer.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/connection/connection.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/logger/logger.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/contexts/bridges/gw3/messages.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/contexts/contextMessageReplaySpec.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/config.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/contexts/bridges/gw3/contextData.ts","../../../connect-desktop-client/node_modules/@glue42/core/node_modules/lodash.clonedeep/index.js","../../../connect-desktop-client/node_modules/@glue42/core/src/contexts/helpers.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/contexts/bridges/gw3/bridge.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/contexts/contextsModule.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/helpers/promisify.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/helpers/promiseHelpers.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/client/client.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/server/subscription.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/server/request.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/server/streaming.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/server/branch.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/server/stream.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/server/server.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/instance.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/client/repository.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/server/repository.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/protocols/gw3/server-streaming.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/protocols/gw3/server.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/protocols/gw3/subscription.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/utils/timed-cache.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/protocols/gw3/client-streaming.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/protocols/gw3/client.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/protocols/gw3/factory.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/interop/interop.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/bus/main.ts","../../../connect-desktop-client/node_modules/@glue42/core/src/index.ts","../../../connect-desktop-client/src/activity/entities/activityEntity.ts","../../../connect-desktop-client/src/activity/helpers/util.ts","../../../connect-desktop-client/src/activity/entities/activityType.ts","../../../connect-desktop-client/src/activity/entities/windowType.ts","../../../connect-desktop-client/src/activity/contracts/entityEvent.ts","../../../connect-desktop-client/src/activity/core/activityAGM.ts","../../../connect-desktop-client/src/activity/entities/attachedActivityDescriptor.ts","../../../connect-desktop-client/src/activity/helpers/promiseExtensions.ts","../../../connect-desktop-client/src/activity/entities/activity.ts","../../../connect-desktop-client/src/activity/helpers/logger.ts","../../../connect-desktop-client/src/activity/entities/activityWindow.ts","../../../connect-desktop-client/src/activity/contracts/activityStatus.ts","../../../connect-desktop-client/src/activity/bridges/gw3Bridge.ts","../../../connect-desktop-client/src/activity/API/activityMyAPI.ts","../../../connect-desktop-client/src/activity/helpers/readyMarker.ts","../../../connect-desktop-client/src/activity/helpers/entityObservableCollection.ts","../../../connect-desktop-client/src/activity/core/activityManager.ts","../../../connect-desktop-client/src/activity/API/activityManagementAPI.ts","../../../connect-desktop-client/src/activity/API/activityAPI.ts","../../../connect-desktop-client/src/activity/activityModule.ts","../../../connect-desktop-client/src/app-manager/const/agm-names.ts","../../../connect-desktop-client/node_modules/callback-registry/lib/index.js","../../../connect-desktop-client/src/app-manager/helper.ts","../../../connect-desktop-client/src/app-manager/application.ts","../../../connect-desktop-client/src/app-manager/instance.ts","../../../connect-desktop-client/src/app-manager/app-manager.ts","../../../connect-desktop-client/src/app-manager/entitlements.ts","../../../connect-desktop-client/src/app-manager/snapshot.ts","../../../connect-desktop-client/src/app-manager/const/event-names.ts","../../../connect-desktop-client/src/app-manager/data-subscription.ts","../../../connect-desktop-client/src/app-manager/in-memory.ts","../../../connect-desktop-client/src/app-manager/main.ts","../../../connect-desktop-client/node_modules/shortid/lib/random/random-from-seed.js","../../../connect-desktop-client/node_modules/shortid/lib/alphabet.js","../../../connect-desktop-client/node_modules/shortid/lib/random/random-byte-browser.js","../../../connect-desktop-client/node_modules/shortid/lib/encode.js","../../../connect-desktop-client/node_modules/shortid/lib/decode.js","../../../connect-desktop-client/node_modules/shortid/lib/build.js","../../../connect-desktop-client/node_modules/shortid/lib/is-valid.js","../../../connect-desktop-client/node_modules/shortid/lib/index.js","../../../connect-desktop-client/node_modules/shortid/index.js","../../../connect-desktop-client/src/windows/jumpList/manager.ts","../../../connect-desktop-client/src/windows/store.ts","../../../connect-desktop-client/src/utils.ts","../../../connect-desktop-client/src/windows/jumpList/actions.ts","../../../connect-desktop-client/src/windows/jumpList/categories.ts","../../../connect-desktop-client/src/windows/jumpList/main.ts","../../../connect-desktop-client/src/windows/window.ts","../../../connect-desktop-client/src/windows/environment/helpers.ts","../../../connect-desktop-client/src/windows/environment/gd/executor.ts","../../../connect-desktop-client/src/windows/environment/gd/gd.ts","../../../connect-desktop-client/src/windows/environment/detector.ts","../../../connect-desktop-client/src/windows/group.ts","../../../connect-desktop-client/src/windows/groups.ts","../../../connect-desktop-client/src/windows/main.ts","../../../connect-desktop-client/src/layouts/store.ts","../../../connect-desktop-client/src/layouts/contextProvider.ts","../../../connect-desktop-client/src/layouts/transform.ts","../../../connect-desktop-client/src/layouts/layout.ts","../../../connect-desktop-client/src/layouts/layouts.ts","../../../connect-desktop-client/src/layouts/stream/acsStream.ts","../../../connect-desktop-client/src/layouts/stream/nullStream.ts","../../../connect-desktop-client/src/layouts/main.ts","../../../connect-desktop-client/src/displays/displayManager.ts","../../../connect-desktop-client/src/channels/agm.ts","../../../connect-desktop-client/src/channels/contexts.ts","../../../connect-desktop-client/src/channels/channels.ts","../../../connect-desktop-client/src/channels/main.ts","../../../connect-desktop-client/src/hotkeys/hotkeys.ts","../../../connect-desktop-client/src/hotkeys/main.ts","../../../connect-desktop-client/src/config.ts","../../../connect-desktop-client/src/notifications/notification.ts","../../../connect-desktop-client/src/notifications/panel.ts","../../../connect-desktop-client/src/notifications/main.ts","../../../connect-desktop-client/src/themes/themes.ts","../../../connect-desktop-client/src/themes/main.ts","../../../connect-desktop-client/src/intents/constants.ts","../../../connect-desktop-client/src/intents/common.ts","../../../connect-desktop-client/src/intents/intents.ts","../../../connect-desktop-client/src/factoryCallInfo.ts","../../../connect-desktop-client/src/prefs/index.ts","../../../connect-desktop-client/src/cookies/index.ts","../../../connect-desktop-client/src/cookies/main.ts","../../../connect-desktop-client/src/eventsDispatcher.ts","../../../connect-desktop-client/src/glue.ts","../../../connect-desktop-client/src/index.ts"],"sourcesContent":["export default {\n    STRING: 1,\n    NUMBER: 2,\n    TIMESTAMP: 3,\n    OBJECT: 4\n};\n","import { Glue42Core } from \"../../../../glue\";\nimport MetricTypes from \"../../const/metric-types\";\n\nfunction getMetricTypeByValue(metric: Glue42Core.Metrics.Metric): string {\n\n    if (metric.type === MetricTypes.TIMESTAMP) {\n        return \"timestamp\";\n    } else if (metric.type === MetricTypes.NUMBER) {\n        return \"number\";\n    } else if (metric.type === MetricTypes.STRING) {\n        return \"string\";\n    } else if (metric.type === MetricTypes.OBJECT) {\n        return \"object\";\n    }\n\n    return \"unknown\";\n}\n\nfunction getTypeByValue(value: any): string {\n\n    if (value.constructor === Date) {\n        return \"timestamp\";\n    } else if (typeof value === \"number\") {\n        return \"number\";\n    } else if (typeof value === \"string\") {\n        return \"string\";\n    } else if (typeof value === \"object\") {\n        return \"object\";\n    } else {\n        return \"string\";\n    }\n}\n\nfunction serializeMetric(metric: Glue42Core.Metrics.Metric): any {\n\n    const serializedMetrics: any = {};\n    const type = getMetricTypeByValue(metric);\n    if (type === \"object\") {\n        const values = Object.keys(metric.value).reduce((memo: any, key: any) => {\n            const innerType = getTypeByValue(metric.value[key]);\n            if (innerType === \"object\") {\n                const composite = defineNestedComposite(metric.value[key]);\n                memo[key] = {\n                    type: \"object\",\n                    description: \"\",\n                    context: {},\n                    composite,\n                };\n            } else {\n                memo[key] = {\n                    type: innerType,\n                    description: \"\",\n                    context: {},\n                };\n            }\n\n            return memo;\n        }, {});\n\n        serializedMetrics.composite = values;\n    }\n\n    serializedMetrics.name = normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name);\n    serializedMetrics.type = type;\n    serializedMetrics.description = metric.description;\n    serializedMetrics.context = {};\n\n    return serializedMetrics;\n}\n\nfunction defineNestedComposite(values: any): any {\n    return Object.keys(values).reduce((memo: any, key: any) => {\n        const type = getTypeByValue(values[key]);\n        if (type === \"object\") {\n            memo[key] = {\n                type: \"object\",\n                description: \"\",\n                context: {},\n                composite: defineNestedComposite(values[key]),\n            };\n        } else {\n            memo[key] = {\n                type,\n                description: \"\",\n                context: {},\n            };\n        }\n\n        return memo;\n    }, {});\n}\n\nfunction normalizeMetricName(name: string): string {\n    if (typeof name !== \"undefined\" && name.length > 0 && name[0] !== \"/\") {\n        return \"/\" + name;\n    } else {\n        return name;\n    }\n}\n\nfunction getMetricValueByType(metric: Glue42Core.Metrics.Metric) {\n    const type: string = getMetricTypeByValue(metric);\n    if (type === \"timestamp\") {\n        return Date.now();\n    } else {\n        return publishNestedComposite(metric.value);\n    }\n}\n\nfunction publishNestedComposite(values: any) {\n    if (typeof values !== \"object\") {\n        return values;\n    }\n    return Object.keys(values).reduce((memo: any, key: any) => {\n        const value = values[key];\n        if (typeof value === \"object\" && value.constructor !== Date) {\n            memo[key] = publishNestedComposite(value);\n        } else if (value.constructor === Date) {\n            memo[key] = new Date(value).getTime();\n        } else if (value.constructor === Boolean) {\n            memo[key] = value.toString();\n        } else {\n            memo[key] = value;\n        }\n\n        return memo;\n    }, {});\n}\n\nfunction flatten(arr: any[]): Glue42Core.Metrics.SystemStateInfo[] {\n    return arr.reduce((flat: Glue42Core.Metrics.SystemStateInfo[], toFlatten: Glue42Core.Metrics.SystemStateInfo | Glue42Core.Metrics.SystemStateInfo[]): Glue42Core.Metrics.SystemStateInfo[] => {\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n    }, []);\n}\n\nfunction getHighestState(arr: Glue42Core.Metrics.SystemStateInfo[]): Glue42Core.Metrics.SystemStateInfo {\n    return arr.sort((a, b) => {\n        if (!a.state) { return 1; }\n        if (!b.state) { return -1; }\n\n        return b.state - a.state;\n    })[0];\n}\n\nfunction aggregateDescription(arr: Glue42Core.Metrics.SystemStateInfo[]): string {\n    let msg = \"\";\n    arr.forEach((m: any, idx: number, a: any[]) => {\n        const path = m.path.join(\".\");\n        if (idx === a.length - 1) {\n            msg += path + \".\" + m.name + \": \" + m.description;\n        } else {\n            msg += path + \".\" + m.name + \": \" + m.description + \",\";\n        }\n    });\n    if (msg.length > 100) {\n        return msg.slice(0, 100) + \"...\";\n    } else {\n        return msg;\n    }\n}\n\nfunction composeMsgForRootStateMetric(system: Glue42Core.Metrics.System): any {\n    const aggregatedState: Glue42Core.Metrics.SystemStateInfo[] = system.root.getAggregateState();\n    const merged = flatten(aggregatedState);\n    const highestState = getHighestState(merged);\n    const aggregateDesc = aggregateDescription(merged);\n    return {\n        description: aggregateDesc,\n        value: highestState.state,\n    };\n}\n\nexport { normalizeMetricName, serializeMetric, getMetricValueByType, composeMsgForRootStateMetric };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Glue42Core } from \"../../../../glue\";\nimport { Protocol, MetricsSettings } from \"../../types\";\nimport { composeMsgForRootStateMetric, getMetricValueByType, normalizeMetricName, serializeMetric } from \"./serializer\";\nimport Connection from \"../../../connection/connection\";\n\nexport default function (connection: Connection, config: MetricsSettings): Protocol {\n    if (!connection || typeof connection !== \"object\") {\n        throw new Error(\"Connection is required parameter\");\n    }\n\n    let joinPromise: Promise<any>;\n    let session: Glue42Core.Connection.GW3DomainSession;\n\n    const init = (repo: Glue42Core.Metrics.Repository): void => {\n        let resolveReadyPromise: (() => void) | undefined;\n        joinPromise = new Promise<void>((resolve) => {\n            resolveReadyPromise = resolve;\n        });\n\n        session = connection.domain(\"metrics\");\n\n        session.onJoined((reconnect) => {\n            if (!reconnect && resolveReadyPromise) {\n                resolveReadyPromise();\n                resolveReadyPromise = undefined;\n            }\n\n            // Creating root state metric\n            const rootStateMetric: any = {\n                name: \"/State\",\n                type: \"object\",\n                composite: {\n                    Description: {\n                        type: \"string\",\n                        description: \"\",\n                    },\n                    Value: {\n                        type: \"number\",\n                        description: \"\",\n                    },\n                },\n                description: \"System state\",\n                context: {},\n            };\n\n            const defineRootMetricsMsg = {\n                type: \"define\",\n                metrics: [rootStateMetric],\n            };\n\n            session.send(defineRootMetricsMsg);\n\n            if (reconnect) {\n                replayRepo(repo);\n            }\n\n        });\n\n        session.join({\n            system: config.system,\n            service: config.service,\n            instance: config.instance\n        });\n    };\n\n    const replayRepo = (repo: Glue42Core.Metrics.Repository) => {\n        replaySystem(repo.root);\n    };\n\n    const replaySystem = (system: Glue42Core.Metrics.System) => {\n        // replay system\n        createSystem(system);\n\n        // replay all metrics in the system\n        system.metrics.forEach((m) => {\n            createMetric(m);\n        });\n\n        // replay all sub-systems\n        system.subSystems.forEach((ss) => {\n            replaySystem(ss);\n        });\n    };\n\n    const createSystem = async (system: Glue42Core.Metrics.System): Promise<void> => {\n        if (system.parent === undefined) {\n            return;\n        }\n\n        await joinPromise;\n        const metric = {\n            name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\n            type: \"object\",\n            composite: {\n                Description: {\n                    type: \"string\",\n                    description: \"\",\n                },\n                Value: {\n                    type: \"number\",\n                    description: \"\",\n                },\n            },\n            description: \"System state\",\n            context: {},\n        };\n\n        const createMetricsMsg = {\n            type: \"define\",\n            metrics: [metric],\n        };\n\n        session.send(createMetricsMsg);\n    };\n\n    const updateSystem = async (system: Glue42Core.Metrics.System, state: Glue42Core.Metrics.State): Promise<void> => {\n        await joinPromise;\n\n        const shadowedUpdateMetric = {\n            type: \"publish\",\n            values: [{\n                name: normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\n                value: {\n                    Description: state.description,\n                    Value: state.state,\n                },\n                timestamp: Date.now(),\n            }],\n        };\n\n        session.send(shadowedUpdateMetric);\n\n        const stateObj = composeMsgForRootStateMetric(system);\n        const rootMetric = {\n            type: \"publish\",\n            peer_id: connection.peerId,\n            values: [{\n                name: \"/State\",\n                value: {\n                    Description: stateObj.description,\n                    Value: stateObj.value,\n                },\n                timestamp: Date.now(),\n            }],\n        };\n\n        session.send(rootMetric);\n    };\n\n    const createMetric = async (metric: Glue42Core.Metrics.Metric): Promise<void> => {\n        const metricClone = cloneMetric(metric);\n        await joinPromise;\n        const m = serializeMetric(metricClone);\n\n        const createMetricsMsg = {\n            type: \"define\",\n            metrics: [m],\n        };\n\n        session.send(createMetricsMsg);\n        if (typeof metricClone.value !== \"undefined\") {\n            // do not use updateMetric because it will dispatch the call (joinPromise.then)\n            // which leads to method calls reorder. It is safe to call updateMetricCore directly\n            // because we are being executed in joinPromise.then\n            updateMetricCore(metricClone);\n        }\n    };\n\n    const updateMetric = async (metric: Glue42Core.Metrics.Metric): Promise<void> => {\n        const metricClone = cloneMetric(metric);\n        await joinPromise;\n        updateMetricCore(metricClone);\n    };\n\n    const updateMetricCore = (metric: Glue42Core.Metrics.Metric): Promise<void> => {\n        if (canUpdate()) {\n            const value = getMetricValueByType(metric);\n            const publishMetricsMsg = {\n                type: \"publish\",\n                values: [{\n                    name: normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name),\n                    value,\n                    timestamp: Date.now(),\n                }],\n            };\n            return session.sendFireAndForget(publishMetricsMsg);\n        }\n        return Promise.resolve();\n    };\n\n    const cloneMetric = (metric: Glue42Core.Metrics.Metric): Glue42Core.Metrics.Metric => {\n        const metricClone: Glue42Core.Metrics.Metric = { ...metric };\n        if (typeof metric.value === \"object\" && metric.value !== null) {\n            metricClone.value = { ...metric.value };\n        }\n        return metricClone;\n    };\n\n    const canUpdate = (): boolean => {\n        try {\n            const func = config.canUpdateMetric ?? (() => true);\n            return func();\n        } catch {\n            return true;\n        }\n    };\n\n    return {\n        init,\n        createSystem,\n        updateSystem,\n        createMetric,\n        updateMetric,\n    };\n}\n","import { Glue42Core } from \"../../glue\";\nimport { Protocol } from \"./types\";\n\nexport default {\n    validate: (definition: Glue42Core.Metrics.MetricDefinition, parent: Glue42Core.Metrics.System, transport: Protocol) => {\n        if (definition === null || typeof definition !== \"object\") {\n            throw new Error(\"Missing definition\");\n        }\n        if (parent === null || typeof parent !== \"object\") {\n            throw new Error(\"Missing parent\");\n        }\n        if (transport === null || typeof transport !== \"object\") {\n            throw new Error(\"Missing transport\");\n        }\n    },\n};\n","import { Glue42Core } from \"../../../glue\";\nimport Helpers from \"../helpers\";\nimport { Protocol } from \"../types\";\n\nexport class BaseMetric<T> implements Glue42Core.Metrics.Metric {\n    public readonly path: string[] = [];\n    public readonly name: string;\n    public readonly description: string | undefined;\n\n    public get repo() {\n        return this.system?.repo;\n    }\n\n    public get id() { return `${this.system.path}/${name}`; }\n\n    constructor(public definition: Glue42Core.Metrics.MetricDefinition, public system: Glue42Core.Metrics.System, protected transport: Protocol, public value: T, public type: number) {\n        Helpers.validate(definition, system, transport);\n\n        this.path = system.path.slice(0);\n        this.path.push(system.name);\n\n        this.name = definition.name;\n        this.description = definition.description;\n\n        transport.createMetric(this);\n    }\n\n    public update(newValue: T): Promise<void> {\n        this.value = newValue;\n        return this.transport.updateMetric(this);\n    }\n}\n","import { Glue42Core } from \"../../../glue\";\nimport { Protocol } from \"../types\";\nimport { BaseMetric } from \"./base\";\nimport metricTypes from \"../const/metric-types\";\n\nexport class NumberMetric extends BaseMetric<number> implements Glue42Core.Metrics.NumberMetric {\n\n    constructor(definition: Glue42Core.Metrics.MetricDefinition, system: Glue42Core.Metrics.System, transport: Protocol, value: number) {\n        super(definition, system, transport, value, metricTypes.NUMBER);\n    }\n\n    public incrementBy(num: number): void {\n        this.update(this.value + num);\n    }\n\n    public increment(): void {\n        this.incrementBy(1);\n    }\n\n    public decrement(): void {\n        this.incrementBy(-1);\n    }\n\n    public decrementBy(num: number): void {\n        this.incrementBy(num * -1);\n    }\n}\n","import { Glue42Core } from \"../../../glue\";\nimport { Protocol } from \"../types\";\nimport { BaseMetric } from \"./base\";\nimport metricTypes from \"../const/metric-types\";\n\nexport class ObjectMetric extends BaseMetric<object> implements Glue42Core.Metrics.ObjectMetric {\n\n    constructor(definition: Glue42Core.Metrics.MetricDefinition, system: Glue42Core.Metrics.System, transport: Protocol, value: object) {\n        super(definition, system, transport, value, metricTypes.OBJECT);\n    }\n\n    public update(newValue: object): Promise<void> {\n        this.mergeValues(newValue);\n        return this.transport.updateMetric(this);\n    }\n\n    private mergeValues(values: any) {\n        return Object.keys(this.value).forEach((k) => {\n            if (typeof values[k] !== \"undefined\") {\n                (this.value as any)[k] = values[k];\n            }\n        });\n    }\n}\n","import { Glue42Core } from \"../../../glue\";\nimport { Protocol } from \"../types\";\nimport { BaseMetric } from \"./base\";\nimport metricTypes from \"../const/metric-types\";\n\nexport class StringMetric extends BaseMetric<string> implements Glue42Core.Metrics.StringMetric {\n    constructor(definition: Glue42Core.Metrics.MetricDefinition, system: Glue42Core.Metrics.System, transport: Protocol, value: string) {\n        super(definition, system, transport, value, metricTypes.STRING);\n    }\n}\n","import { Glue42Core } from \"../../../glue\";\nimport { Protocol } from \"../types\";\nimport { BaseMetric } from \"./base\";\nimport metricTypes from \"../const/metric-types\";\n\nexport class TimestampMetric extends BaseMetric<Date> implements Glue42Core.Metrics.TimestampMetric {\n    constructor(definition: Glue42Core.Metrics.MetricDefinition, system: Glue42Core.Metrics.System, transport: Protocol, value: Date) {\n        super(definition, system, transport, value, metricTypes.TIMESTAMP);\n    }\n\n    public now(): void {\n        this.update(new Date());\n    }\n}\n","import { NumberMetric } from \"./metrics/number\";\nimport { ObjectMetric } from \"./metrics/object\";\nimport { StringMetric } from \"./metrics/string\";\nimport { TimestampMetric } from \"./metrics/timestamp\";\n\nimport { Glue42Core } from \"./../../glue\";\nimport MetricTypes from \"./const/metric-types\";\nimport { Protocol } from \"./types\";\n\nexport default function system(name: string, repo: Glue42Core.Metrics.Repository, protocol: Protocol, parent?: Glue42Core.Metrics.System, description?: any): Glue42Core.Metrics.System {\n    // Validation\n    // if (!name) throw new Error(\"Name is required. \");\n\n    if (!repo) {\n        throw new Error(\"Repository is required\");\n    }\n\n    if (!protocol) {\n        throw new Error(\"Transport is required\");\n    }\n\n    const _transport: Protocol = protocol;\n\n    const _name: string = name;\n    const _description: string = description || \"\";\n    const _repo: Glue42Core.Metrics.Repository = repo;\n    const _parent: Glue42Core.Metrics.System | undefined = parent;\n    const _path: string[] = _buildPath(parent);\n    let _state: Glue42Core.Metrics.State = {};\n\n    const id: string = _arrayToString(_path, \"/\") + name;\n    const root: Glue42Core.Metrics.System = repo.root;\n    const _subSystems: Glue42Core.Metrics.System[] = [];\n    const _metrics: Glue42Core.Metrics.Metric[] = [];\n\n    function subSystem(nameSystem: string, descriptionSystem?: string): Glue42Core.Metrics.System {\n        if (!nameSystem || nameSystem.length === 0) {\n            throw new Error(\"name is required\");\n        }\n\n        const match: Glue42Core.Metrics.System[] = _subSystems.filter((s) => s.name === nameSystem);\n        if (match.length > 0) {\n            return match[0];\n        }\n\n        const _system: Glue42Core.Metrics.System = system(nameSystem, _repo, _transport, me, descriptionSystem);\n        _subSystems.push(_system);\n        return _system;\n    }\n\n    function setState(state: number, stateDescription?: string): void {\n        _state = { state, description: stateDescription };\n        _transport.updateSystem(me, _state);\n    }\n\n    function stringMetric(definition: Glue42Core.Metrics.MetricDefinition | string, value: string): Glue42Core.Metrics.StringMetric {\n        return _getOrCreateMetric<StringMetric>(definition, MetricTypes.STRING, value, (metricDef: Glue42Core.Metrics.MetricDefinition) => new StringMetric(metricDef, me, _transport, value));\n    }\n\n    function numberMetric(definition: Glue42Core.Metrics.MetricDefinition | string, value: number): Glue42Core.Metrics.NumberMetric {\n        return _getOrCreateMetric<NumberMetric>(definition, MetricTypes.NUMBER, value, (metricDef: Glue42Core.Metrics.MetricDefinition) => new NumberMetric(metricDef, me, _transport, value));\n    }\n\n    function objectMetric(definition: Glue42Core.Metrics.MetricDefinition | string, value: any): Glue42Core.Metrics.ObjectMetric {\n        return _getOrCreateMetric<ObjectMetric>(definition, MetricTypes.OBJECT, value, (metricDef: Glue42Core.Metrics.MetricDefinition) => new ObjectMetric(metricDef, me, _transport, value));\n    }\n\n    function timestampMetric(definition: Glue42Core.Metrics.MetricDefinition | string, value: any): Glue42Core.Metrics.TimestampMetric {\n        return _getOrCreateMetric<TimestampMetric>(definition, MetricTypes.TIMESTAMP, value, (metricDef: Glue42Core.Metrics.MetricDefinition) => new TimestampMetric(metricDef, me, _transport, value));\n    }\n\n    function _getOrCreateMetric<T extends Glue42Core.Metrics.Metric>(metricObject: Glue42Core.Metrics.MetricDefinition | string, expectedType: number, value: any, createMetric: (metricDef: Glue42Core.Metrics.MetricDefinition, me?: Glue42Core.Metrics.System, _transport?: Protocol, value?: any) => T): T {\n        let metricDef = { name: \"\" };\n        if (typeof metricObject === \"string\") {\n            metricDef = { name: metricObject };\n        } else {\n            metricDef = metricObject;\n        }\n        const matching: Glue42Core.Metrics.Metric[] = _metrics.filter((shadowedMetric) => shadowedMetric.name === metricDef.name);\n\n        if (matching.length > 0) {\n            const existing: Glue42Core.Metrics.Metric = matching[0];\n            if (existing.type !== expectedType) {\n                // NOTE: Extend the error with the already defined metric?\n                throw new Error(`A metric named ${metricDef.name} is already defined with different type.`);\n            }\n\n            if (typeof value !== \"undefined\") {\n                existing\n                    .update(value)\n                    .catch(() => { /** swallow */});\n            }\n\n            return existing as T;\n        }\n\n        const metric: T = createMetric(metricDef);\n        _metrics.push(metric);\n        return metric;\n    }\n\n    function _buildPath(shadowedSystem?: Glue42Core.Metrics.System): string[] {\n        if (!shadowedSystem || !shadowedSystem.parent) {\n            return [];\n        }\n\n        const path = _buildPath(shadowedSystem.parent);\n        path.push(shadowedSystem.name);\n        return path;\n    }\n\n    function _arrayToString(path: string[], separator: string) {\n        return ((path && path.length > 0) ? path.join(separator) : \"\");\n    }\n\n    function getAggregateState(): Glue42Core.Metrics.SystemStateInfo[] {\n        const aggState: Glue42Core.Metrics.SystemStateInfo[] = [];\n        if (Object.keys(_state).length > 0) {\n            aggState.push({\n                name: _name,\n                path: _path,\n                state: _state.state,\n                description: _state.description,\n            });\n        }\n\n        _subSystems.forEach((shadowedSubSystem) => {\n            const result = shadowedSubSystem.getAggregateState();\n            if (result.length > 0) {\n                aggState.push(...result);\n            }\n        });\n\n        return aggState;\n    }\n\n    const me: Glue42Core.Metrics.System = {\n        get name() {\n            return _name;\n        },\n\n        get description() {\n            return _description;\n        },\n\n        get repo() {\n            return _repo;\n        },\n\n        get parent() {\n            return _parent;\n        },\n        path: _path,\n        id,\n        root,\n\n        get subSystems() {\n            return _subSystems;\n        },\n\n        get metrics() {\n            return _metrics;\n        },\n        subSystem,\n        getState: () => {\n            return _state;\n        },\n        setState,\n        stringMetric,\n        timestampMetric,\n        objectMetric,\n        numberMetric,\n        getAggregateState,\n    };\n\n    _transport.createSystem(me);\n\n    return me;\n}\n","import { Glue42Core } from \"../../glue\";\nimport system from \"./system\";\nimport { MetricsSettings, Protocol } from \"./types\";\n\nexport class Repository implements Glue42Core.Metrics.Repository {\n    public root: Glue42Core.Metrics.System;\n\n    constructor(options: MetricsSettings, protocol: Protocol) {\n        protocol.init(this);\n        this.root = system(\"\", this, protocol);\n\n        this.addSystemMetrics(this.root, options.clickStream || options.clickStream === undefined);\n    }\n\n    private addSystemMetrics(rootSystem: Glue42Core.Metrics.System, useClickStream: any) {\n        // Create some system metrics\n        if (typeof navigator !== \"undefined\") {\n            rootSystem.stringMetric(\"UserAgent\", navigator.userAgent);\n        }\n\n        if (useClickStream && typeof document !== \"undefined\") {\n            const clickStream: Glue42Core.Metrics.System = rootSystem.subSystem(\"ClickStream\");\n\n            const documentClickHandler = (e: Event) => {\n                if (!e.target) {\n                    return;\n                }\n                const target = e.target as HTMLAnchorElement;\n                const className = target ? target.getAttribute(\"class\") ?? \"\" : \"\";\n                clickStream.objectMetric(\"LastBrowserEvent\", {\n                    type: \"click\",\n                    timestamp: new Date(),\n                    target: {\n                        className,\n                        id: target.id,\n                        type: \"<\" + target.tagName.toLowerCase() + \">\",\n                        href: target.href || \"\",\n                    },\n                });\n            };\n\n            // Create click stream record\n            clickStream.objectMetric(\"Page\", {\n                title: document.title,\n                page: window.location.href,\n            });\n\n            if (document.addEventListener) {\n                document.addEventListener(\"click\", documentClickHandler);\n            } else {\n                // For IE versions prior to IE9, attachEvent method should be used to register the specified listener\n                // to the EventTarget it is called on, for others addEventListener should be used.\n                // (<any>document)\n                (document as any).attachEvent(\"onclick\", documentClickHandler);\n            }\n        }\n\n        const startTime = rootSystem.stringMetric(\"StartTime\", (new Date()).toString());\n        const urlMetric = rootSystem.stringMetric(\"StartURL\", \"\");\n        const appNameMetric = rootSystem.stringMetric(\"AppName\", \"\");\n        if (typeof window !== \"undefined\") {\n            if (typeof window.location !== \"undefined\") {\n                const startUrl = window.location.href;\n                urlMetric.update(startUrl);\n            }\n\n            if (typeof window.glue42gd !== \"undefined\") {\n                appNameMetric.update(window.glue42gd.appName);\n            }\n        }\n    }\n}\n","import { Protocol } from \"../../types\";\nimport { Glue42Core } from \"../../../../glue\";\n\nexport class NullProtocol implements Protocol {\n    public init(repo: Glue42Core.Metrics.Repository): void {\n        // do nothing\n    }\n\n    public createSystem(system: Glue42Core.Metrics.System): Promise<void> {\n        return Promise.resolve();\n    }\n\n    public updateSystem(metric: Glue42Core.Metrics.System, state: Glue42Core.Metrics.State): Promise<void> {\n        return Promise.resolve();\n    }\n\n    public createMetric(metric: Glue42Core.Metrics.Metric): Promise<void> {\n        return Promise.resolve();\n    }\n\n    public updateMetric(metric: Glue42Core.Metrics.Metric): Promise<void> {\n        return Promise.resolve();\n    }\n}\n","import { Glue42Core } from \"../../glue\";\nimport { count } from \"console\";\n\nexport class PerfTracker {\n\n    private lastCount = 0;\n\n    private initialPublishTimeout = 10 * 1000; // 10 sec\n    private publishInterval = 60 * 1000; // 60 sec\n    private system: Glue42Core.Metrics.System;\n\n    constructor(private api: Glue42Core.Metrics.API, initialPublishTimeout?: number, publishInterval?: number) {\n        this.initialPublishTimeout = initialPublishTimeout ?? this.initialPublishTimeout;\n        this.publishInterval = publishInterval ?? this.publishInterval;\n        this.scheduleCollection();\n        this.system = this.api.subSystem(\"performance\", \"Performance data published by the web application\");\n    }\n\n    private scheduleCollection() {\n        setTimeout(() => {\n            this.collect();\n            setInterval(() => {\n                this.collect();\n            }, this.publishInterval);\n        }, this.initialPublishTimeout);\n    }\n\n    private collect() {\n        try {\n            // tslint:disable-next-line:no-console\n            this.collectMemory();\n            this.collectEntries();\n        } catch {\n            // DO NOTHING\n        }\n    }\n\n    private collectMemory() {\n        // memory - use performance.memory\n        const memory = (window.performance as any).memory;\n        this.system.stringMetric(\"memory\", JSON.stringify({\n            totalJSHeapSize: memory.totalJSHeapSize,\n            usedJSHeapSize: memory.usedJSHeapSize\n        }));\n    }\n\n    private collectEntries() {\n        const allEntries = window.performance.getEntries();\n        if (allEntries.length <= this.lastCount) {\n            return;\n        }\n        this.lastCount = allEntries.length;\n        const jsonfiedEntries = allEntries.map((i) => i.toJSON());\n\n        this.system.stringMetric(\"entries\", JSON.stringify(jsonfiedEntries));\n    }\n}\n","import { Glue42Core } from \"../../glue\";\nimport gw3 from \"./protocols/gw3/gw3\";\nimport { Repository } from \"./repository\";\nimport { Protocol, MetricsSettings } from \"./types\";\nimport { NullProtocol } from \"./protocols/null/null\";\nimport { PerfTracker } from \"./pertTracker\";\n\nexport default (options: MetricsSettings): Glue42Core.Metrics.API => {\n\n    let protocol: Protocol;\n    if (!options.connection || typeof options.connection !== \"object\") {\n        protocol = new NullProtocol();\n    } else {\n        protocol = gw3(options.connection, options);\n    }\n\n    const repo = new Repository(options, protocol);\n    let rootSystem = repo.root;\n    if (!options.disableAutoAppSystem) {\n        rootSystem = rootSystem.subSystem(\"App\");\n    }\n\n    // add FAV support\n    const api = addFAVSupport(rootSystem);\n    // initialize page performance\n    initPerf(api, options.pagePerformanceMetrics);\n\n    return api;\n};\n\nlet perf: PerfTracker;\nfunction initPerf(api: Glue42Core.Metrics.API, config?: Glue42Core.PagePerformanceMetricsConfig) {\n    if (typeof window === \"undefined\") {\n        return;\n    }\n\n    // allow Glue42 Enterprise to override\n    const perfConfig = window?.glue42gd?.metrics?.pagePerformanceMetrics;\n    if (perfConfig) {\n        // allow Glue42 Enterprise to override\n        config = perfConfig;\n    }\n\n    if (config?.enabled) {\n        perf = new PerfTracker(api, config.initialPublishTimeout, config.publishInterval);\n    }\n}\n\nfunction addFAVSupport(system: Glue42Core.Metrics.System): Glue42Core.Metrics.API {\n    // Creating subsystem for reporting and feature metric\n    const reportingSystem: Glue42Core.Metrics.System = system.subSystem(\"reporting\");\n    const def = {\n        name: \"features\"\n    };\n\n    let featureMetric: Glue42Core.Metrics.ObjectMetric;\n\n    const featureMetricFunc = (name: string, action: string, payload: string) => {\n        if (typeof name === \"undefined\" || name === \"\") {\n            throw new Error(\"name is mandatory\");\n        } else if (typeof action === \"undefined\" || action === \"\") {\n            throw new Error(\"action is mandatory\");\n        } else if (typeof payload === \"undefined\" || payload === \"\") {\n            throw new Error(\"payload is mandatory\");\n        }\n\n        if (!featureMetric) {\n            featureMetric = reportingSystem.objectMetric(def, { name, action, payload });\n        } else {\n            featureMetric.update({\n                name,\n                action,\n                payload\n            });\n        }\n    };\n    (system as any).featureMetric = featureMetricFunc;\n    return system as Glue42Core.Metrics.API;\n}\n","\"use strict\";\nfunction createRegistry(options) {\n    if (options && options.errorHandling\n        && typeof options.errorHandling !== \"function\"\n        && options.errorHandling !== \"log\"\n        && options.errorHandling !== \"silent\"\n        && options.errorHandling !== \"throw\") {\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\n    }\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\n    var callbacks = {};\n    function add(key, callback, replayArgumentsArr) {\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey) {\n            callbacksForKey = [];\n            callbacks[key] = callbacksForKey;\n        }\n        callbacksForKey.push(callback);\n        if (replayArgumentsArr) {\n            setTimeout(function () {\n                replayArgumentsArr.forEach(function (replayArgument) {\n                    var _a;\n                    if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {\n                        try {\n                            if (Array.isArray(replayArgument)) {\n                                callback.apply(undefined, replayArgument);\n                            }\n                            else {\n                                callback.apply(undefined, [replayArgument]);\n                            }\n                        }\n                        catch (err) {\n                            _handleError(err, key);\n                        }\n                    }\n                });\n            }, 0);\n        }\n        return function () {\n            var allForKey = callbacks[key];\n            if (!allForKey) {\n                return;\n            }\n            allForKey = allForKey.reduce(function (acc, element, index) {\n                if (!(element === callback && acc.length === index)) {\n                    acc.push(element);\n                }\n                return acc;\n            }, []);\n            if (allForKey.length === 0) {\n                delete callbacks[key];\n            }\n            else {\n                callbacks[key] = allForKey;\n            }\n        };\n    }\n    function execute(key) {\n        var argumentsArr = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            argumentsArr[_i - 1] = arguments[_i];\n        }\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey || callbacksForKey.length === 0) {\n            return [];\n        }\n        var results = [];\n        callbacksForKey.forEach(function (callback) {\n            try {\n                var result = callback.apply(undefined, argumentsArr);\n                results.push(result);\n            }\n            catch (err) {\n                results.push(undefined);\n                _handleError(err, key);\n            }\n        });\n        return results;\n    }\n    function _handleError(exceptionArtifact, key) {\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\n        if (_userErrorHandler) {\n            _userErrorHandler(errParam);\n            return;\n        }\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\n        if (options) {\n            switch (options.errorHandling) {\n                case \"log\":\n                    return console.error(msg);\n                case \"silent\":\n                    return;\n                case \"throw\":\n                    throw new Error(msg);\n            }\n        }\n        console.error(msg);\n    }\n    function clear() {\n        callbacks = {};\n    }\n    function clearKey(key) {\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey) {\n            return;\n        }\n        delete callbacks[key];\n    }\n    return {\n        add: add,\n        execute: execute,\n        clear: clear,\n        clearKey: clearKey\n    };\n}\n;\ncreateRegistry.default = createRegistry;\nmodule.exports = createRegistry;\n//# sourceMappingURL=index.js.map","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { Transport } from \"../types\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42Core } from \"../../../glue\";\nimport { Logger } from \"../../logger/logger\";\n\nexport default class InProcTransport implements Transport {\n\n    private gw: Glue42Core.Connection.GW3Facade;\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n    private client?: Glue42Core.Connection.GW3Client;\n\n    constructor(settings: Glue42Core.InprocGWSettings, logger: Logger) {\n        this.gw = settings.facade;\n        this.gw.connect((_client, message) => {\n            this.messageHandler(message);\n        }).then((client) => {\n            this.client = client;\n        });\n    }\n\n    public get isObjectBasedTransport() {\n        return true;\n    }\n\n    public sendObject(msg: object): Promise<void> {\n        if (this.client) {\n            this.client.send(msg);\n            return Promise.resolve(undefined);\n        } else {\n            return Promise.reject(`not connected`);\n        }\n    }\n\n    public send(_msg: string) {\n        return Promise.reject(\"not supported\");\n    }\n\n    public onMessage(callback: (msg: string | object) => void): UnsubscribeFunction {\n        return this.registry.add(\"onMessage\", callback);\n    }\n\n    public onConnectedChanged(callback: (connected: boolean) => void) {\n        callback(true);\n\n        // tslint:disable-next-line:no-empty\n        return (): void => { };\n    }\n\n    public close() {\n        // DO NOTHING\n        return Promise.resolve();\n    }\n\n    public open() {\n        return Promise.resolve();\n    }\n\n    public name(): string {\n        return \"in-memory\";\n    }\n\n    public reconnect(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    private messageHandler(msg: object) {\n        this.registry.execute(\"onMessage\", msg);\n    }\n}\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { Transport } from \"../types\";\nimport {\n    default as CallbackRegistryFactory,\n    CallbackRegistry,\n    UnsubscribeFunction,\n} from \"callback-registry\";\nimport { Logger } from \"../../logger/logger\";\n\n// tslint:disable-next-line:no-namespace\ndeclare namespace SharedWorker {\n    interface AbstractWorker extends EventTarget {\n        onerror: (ev: ErrorEvent) => any;\n    }\n\n    export interface SharedWorker extends AbstractWorker {\n        /**\n         * the value it was assigned by the object's constructor.\n         * It represents the MessagePort for communicating with the shared worker.\n         * @type {MessagePort}\n         */\n        port: MessagePort;\n    }\n\n    export interface SharedWorkerGlobalScope extends Worker {\n        onconnect: (event: MessageEvent) => void;\n    }\n}\n\n/**\n * Shared worker transport\n */\nexport default class SharedWorkerTransport implements Transport {\n    private worker: any;\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n\n    constructor(workerFile: string, private logger: Logger) {\n        this.worker = new SharedWorker(workerFile);\n        this.worker.port.onmessage = (e: { data: any; timestamp: number }) => {\n            this.messageHandler(e.data);\n        };\n    }\n\n    public get isObjectBasedTransport() {\n        return true;\n    }\n\n    public sendObject(msg: object): Promise<void> {\n        this.worker.port.postMessage(msg);\n        return Promise.resolve();\n    }\n\n    public send(_msg: string) {\n        return Promise.reject(\"not supported\");\n    }\n\n    public onMessage(\n        callback: (msg: string | object) => void\n    ): UnsubscribeFunction {\n        return this.registry.add(\"onMessage\", callback);\n    }\n\n    public onConnectedChanged(callback: (connected: boolean) => void) {\n        callback(true);\n        // tslint:disable-next-line:no-empty\n        return (): void => {};\n    }\n\n    public close() {\n        // DO NOTHING\n        return Promise.resolve();\n    }\n\n    public open() {\n        // DO NOTHING\n        return Promise.resolve();\n    }\n\n    public name(): string {\n        return \"shared-worker\";\n    }\n\n    public reconnect(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    private messageHandler(msg: object) {\n        this.registry.execute(\"onMessage\", msg);\n    }\n}\n\ninterface SharedWorkerOptions {\n    credentials?: RequestCredentials;\n    name?: string;\n    type?: WorkerType;\n}\n\n// eslint-disable-next-line\ndeclare var SharedWorker: {\n    prototype: SharedWorker.SharedWorker;\n\n    /**\n     *\n     * @param {string} stringUrl                          Pathname to JavaScript file\n     * @param {string|SharedWorkerOptions} [options]      Name of the worker to execute\n     *                                                    or an object containing option properties\n     */\n    new(\n        stringUrl: string,\n        options?: string | SharedWorkerOptions\n    ): SharedWorker.SharedWorker;\n};\n","export default class Utils {\n\n    public static getGDMajorVersion(): number | undefined {\n        if (typeof window === \"undefined\") {\n            return undefined;\n        }\n        if (!window.glueDesktop) {\n            return undefined;\n        }\n        if (!window.glueDesktop.version) {\n            return undefined;\n        }\n        const ver = Number(window.glueDesktop.version.substr(0, 1));\n        return isNaN(ver) ? undefined : ver;\n    }\n\n    public static isNode() {\n        if (typeof Utils._isNode !== \"undefined\") {\n            return Utils._isNode;\n        }\n\n        if (typeof window !== \"undefined\") {\n            Utils._isNode = false;\n            return false;\n        }\n\n        // Only Node.JS has a process variable that is of [[Class]] process\n        try {\n            Utils._isNode = Object.prototype.toString.call(global.process) === \"[object process]\";\n        } catch (e) {\n            Utils._isNode = false;\n        }\n        return Utils._isNode;\n    }\n    private static _isNode?: boolean;\n}\n","export class PromiseWrapper<T> {\n\n    public static delay(time: number): Promise<void> {\n        return new Promise((resolve) => setTimeout(resolve, time));\n    }\n\n    public resolve!: (arg?: T | PromiseLike<T>) => void;\n    public reject!: (err: any) => void;\n    public promise: Promise<T>;\n    public rejected: boolean = false;\n    public resolved: boolean = false;\n    public get ended(): boolean {\n        return this.rejected || this.resolved;\n    }\n\n    constructor() {\n        this.promise = new Promise<T>((resolve, reject) => {\n            this.resolve = (t: any) => {\n                this.resolved = true;\n                resolve(t);\n            };\n\n            this.reject = (err: any) => {\n                this.rejected = true;\n                reject(err);\n            };\n        });\n    }\n}\n","import { Timer, Mark } from \"../types\";\n\nconst timers: { [index: string]: Timer } = {};\n\nexport function getAllTimers() {\n    return timers;\n}\n\nexport default function (timerName: string): Timer {\n    const existing = timers[timerName];\n    if (existing) {\n        return existing;\n    }\n\n    const marks: Mark[] = [];\n    function now(): number {\n        return new Date().getTime();\n    }\n\n    const startTime = now();\n    mark(\"start\", startTime);\n    let endTime: number;\n    let period: number;\n\n    function stop(): number {\n        endTime = now();\n        mark(\"end\", endTime);\n        period = endTime - startTime;\n        return period;\n    }\n\n    function mark(name: string, time?: number): void {\n        const currentTime = time ?? now();\n        let diff = 0;\n        if (marks.length > 0) {\n            diff = currentTime - marks[marks.length - 1].time;\n        }\n        marks.push({ name, time: currentTime, diff });\n    }\n\n    const timerObj = {\n        get startTime(): number {\n            return startTime;\n        },\n        get endTime(): number {\n            return endTime;\n        },\n        get period(): number {\n            return period;\n        },\n        stop,\n        mark,\n        marks\n    };\n\n    timers[timerName] = timerObj;\n    return timerObj;\n}\n","import {\n    default as CallbackRegistryFactory,\n    CallbackRegistry,\n} from \"callback-registry\";\nimport { Transport, ConnectionSettings } from \"../types\";\nimport { Logger } from \"../../logger/logger\";\nimport { Glue42Core } from \"../../../glue\";\nimport Utils from \"../../utils/utils\";\nimport { PromiseWrapper } from \"../../utils/pw\";\nimport timer from \"../../utils/timer\";\n\nconst WebSocketConstructor = Utils.isNode() ? require(\"ws\") : window.WebSocket;\n\nexport default class WS implements Transport {\n    private ws: WebSocket | undefined;\n    private logger: Logger;\n    private settings: ConnectionSettings;\n    private startupTimer = timer(\"connection\");\n\n    /**\n     * If the flag is true the connection should keep trying to connect.\n     * If false the user explicitly closed it and it should not reconnect\n     */\n    private _running = true;\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n    private wsRequests: { callback: () => void, failed?: (err?: string) => void }[] = [];\n\n    constructor(settings: ConnectionSettings, logger: Logger) {\n        this.settings = settings;\n        this.logger = logger;\n        if (!this.settings.ws) {\n            throw new Error(\"ws is missing\");\n        }\n    }\n\n    public onMessage(callback: (msg: string) => void): () => void {\n        return this._registry.add(\"onMessage\", callback);\n    }\n\n    // Create a function for sending a message\n    public send(msg: string, options?: Glue42Core.Connection.SendMessageOptions): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            options = options || {};\n            this.waitForSocketConnection(\n                () => {\n                    try {\n                        this.ws?.send(msg);\n                        resolve();\n                    } catch (e) {\n                        reject(e);\n                    }\n                },\n                reject\n            );\n        });\n    }\n\n    public open() {\n        this.logger.info(`opening ws...`);\n        this._running = true;\n        return new Promise<void>((resolve, reject) => {\n            this.waitForSocketConnection(\n                resolve,\n                reject\n            );\n        });\n    }\n\n    public close() {\n        this._running = false;\n        if (this.ws) {\n            this.ws.close();\n        }\n        return Promise.resolve();\n    }\n\n    public onConnectedChanged(callback: (connected: boolean, reason?: string) => void): () => void {\n        return this._registry.add(\"onConnectedChanged\", callback);\n    }\n\n    public name(): string {\n        return this.settings.ws as string;\n    }\n\n    public reconnect(): Promise<void> {\n        this.ws?.close();\n        const pw = new PromiseWrapper<void>();\n        this.waitForSocketConnection(() => {\n            pw.resolve();\n        });\n        return pw.promise;\n    }\n\n    // Holds callback execution until socket connection is established.\n    private waitForSocketConnection(\n        callback: () => void,\n        failed?: (err?: string) => void\n    ) {\n        failed = failed ?? (() => { /** DO nothing */ });\n\n        // check if we're still running\n        if (!this._running) {\n            failed(\n                `wait for socket on ${this.settings.ws} failed - socket closed by user`\n            );\n            return;\n        }\n\n        // if socket is opened - returned immediately\n        if (this.ws?.readyState === 1) {\n            callback();\n            return;\n        }\n\n        // store the callback\n        this.wsRequests.push({ callback, failed });\n        // if someone has already initiated the socket return\n        if (this.wsRequests.length > 1) {\n            return;\n        }\n\n        this.openSocket();\n    }\n\n    private async openSocket(retryInterval?: number, retriesLeft?: number) {\n        this.startupTimer.mark(\"opening-socket\");\n        if (retryInterval === undefined) {\n            retryInterval = this.settings.reconnectInterval;\n        }\n\n        if (typeof retriesLeft === \"undefined\") {\n            retriesLeft = this.settings.reconnectAttempts;\n        }\n\n        if (retriesLeft !== undefined) {\n            if (retriesLeft === 0) {\n                this.notifyForSocketState(\n                    `wait for socket on ${this.settings.ws} failed - no more retries left`\n                );\n                return;\n            }\n            this.logger.debug(\n                `will retry ${retriesLeft} more times (every ${retryInterval} ms)`\n            );\n        }\n\n        try {\n            await this.initiateSocket();\n            this.startupTimer.mark(\"socket-initiated\");\n            this.notifyForSocketState();\n        } catch {\n            setTimeout(() => {\n                const retries =\n                    retriesLeft === undefined ? undefined : retriesLeft - 1;\n                this.openSocket(\n                    retryInterval,\n                    retries,\n                );\n            }, retryInterval); // wait X milliseconds for the connection...\n        }\n    }\n\n    private initiateSocket(): Promise<void> {\n        const pw = new PromiseWrapper<void>();\n        this.logger.debug(`initiating ws to ${this.settings.ws}...`);\n        this.ws = new WebSocketConstructor(this.settings.ws || \"\") as WebSocket;\n        this.ws.onerror = (err: any) => {\n            let reason = \"\";\n            try {\n                reason = JSON.stringify(err);\n            } catch (error) {\n                const seen = new WeakSet();\n                const replacer = (key: string, value: any) => {\n                    if (typeof value === \"object\" && value !== null) {\n                        if (seen.has(value)) {\n                            return;\n                        }\n                        seen.add(value);\n                    }\n                    return value;\n                };\n\n                reason = JSON.stringify(err, replacer);\n            }\n\n            pw.reject(\"error\");\n            this.notifyStatusChanged(false, reason);\n        };\n        this.ws.onclose = (err) => {\n            this.logger.info(`ws closed ${err}`);\n            pw.reject(\"closed\");\n            this.notifyStatusChanged(false);\n        };\n        // Log on connection\n        this.ws.onopen = () => {\n            // tslint:disable-next-line:no-console\n            this.startupTimer.mark(\"ws-opened\");\n            this.logger.info(`ws opened ${this.settings.identity?.application}`);\n            pw.resolve();\n            this.notifyStatusChanged(true);\n        };\n        // Attach handler\n        this.ws.onmessage = (message: { data: object }) => {\n            this._registry.execute(\"onMessage\", message.data);\n        };\n\n        return pw.promise;\n    }\n\n    private notifyForSocketState(error?: string) {\n        this.wsRequests.forEach((wsRequest) => {\n            if (error) {\n                if (wsRequest.failed) {\n                    wsRequest.failed(error);\n                }\n            } else {\n                wsRequest.callback();\n            }\n        });\n        this.wsRequests = [];\n    }\n\n    private notifyStatusChanged(status: boolean, reason?: string) {\n        this._registry.execute(\"onConnectedChanged\", status, reason);\n    }\n}\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Glue42Core } from \"../../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport generate from \"shortid\";\nimport { Logger } from \"../../logger/logger\";\nimport Connection from \"../connection\";\n\ninterface GW3Message {\n    request_id?: string;\n    domain?: string;\n    peer_id?: string;\n    _tag?: object;\n}\n\n/**\n * Handles domain session lifetime and events for a given connection/domain pair\n */\nexport default function (domain: string, connection: Connection, logger: Logger, successMessages?: string[], errorMessages?: string[]): Glue42Core.Connection.GW3DomainSession {\n\n    if (domain == null) {\n        domain = \"global\";\n    }\n\n    successMessages = successMessages || [\"success\"];\n    errorMessages = errorMessages || [\"error\"];\n\n    let isJoined = false;\n    let tryReconnecting = false;\n    /** holds latest options passed to join - used when doing reconnects */\n    let _latestOptions: object | undefined;\n    // #deleteme TODO: verify this gets properly set to true\n    let _connectionOn = false;\n\n    const callbacks: CallbackRegistry = CallbackRegistryFactory();\n\n    // attach event handlers to connection\n    connection.disconnected(handleConnectionDisconnected);\n    connection.loggedIn(handleConnectionLoggedIn);\n    connection.on(\"success\", (msg: GW3Message) => handleSuccessMessage(msg));\n    connection.on(\"error\", (msg: GW3Message) => handleErrorMessage(msg));\n    connection.on(\"result\", (msg: GW3Message) => handleSuccessMessage(msg));\n\n    if (successMessages) {\n        successMessages.forEach((sm) => {\n            connection.on(sm, (msg: GW3Message) => handleSuccessMessage(msg));\n        });\n    }\n    if (errorMessages) {\n        errorMessages.forEach((sm) => {\n            connection.on(sm, (msg: GW3Message) => handleErrorMessage(msg));\n        });\n    }\n\n    interface RequestHandler {\n        success: (success: { _tag?: object }) => void;\n        error: (error: { _tag?: object, err?: string }) => void;\n    }\n\n    const requestsMap: { [key: string]: RequestHandler } = {};\n\n    function join(options?: object): Promise<object> {\n        _latestOptions = options;\n\n        return new Promise((resolve, reject) => {\n\n            if (isJoined) {\n                resolve({});\n                return;\n            }\n            let joinPromise: Promise<object>;\n\n            if (domain === \"global\") {\n                joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject(\"not connected to gateway\");\n            } else {\n                logger.debug(`joining domain ${domain}`);\n\n                const joinMsg = {\n                    type: \"join\",\n                    destination: domain,\n                    domain: \"global\",\n                    options,\n                };\n\n                // #deleteme TODO: what happens if multiple clients try to open the same domain?\n                // e.g. contexts\n                joinPromise = send(joinMsg);\n            }\n            joinPromise\n                .then(() => {\n                    handleJoined();\n                    resolve({});\n                })\n                .catch((err) => {\n                    logger.debug(\"error joining \" + domain + \" domain: \" + JSON.stringify(err));\n                    reject(err);\n                });\n        });\n    }\n\n    // terminology: join vs leave (domain), connect vs login vs disconnect (to/from GW)\n    function leave(): Promise<void> {\n        if (domain === \"global\") {\n            return Promise.resolve();\n        }\n\n        logger.debug(\"stopping session \" + domain + \"...\");\n        const leaveMsg = {\n            type: \"leave\",\n            destination: domain,\n            domain: \"global\",\n        };\n        tryReconnecting = false;\n        // #deleteme - handling\n        return send(leaveMsg)\n            .then(() => {\n                isJoined = false;\n                callbacks.execute(\"onLeft\");\n            })\n            .catch(() => {\n                // may fail if socked is already closed\n                isJoined = false;\n                callbacks.execute(\"onLeft\");\n            });\n    }\n\n    function handleJoined() {\n        logger.debug(\"did join \" + domain);\n\n        isJoined = true;\n        const wasReconnect = tryReconnecting;\n        tryReconnecting = false;\n        callbacks.execute(\"onJoined\", wasReconnect);\n    }\n\n    function handleConnectionDisconnected() {\n        _connectionOn = false;\n        logger.debug(\"connection is down\");\n        isJoined = false;\n        tryReconnecting = true;\n        callbacks.execute(\"onLeft\", { disconnected: true });\n    }\n\n    function handleConnectionLoggedIn() {\n        _connectionOn = true;\n        if (tryReconnecting) {\n            logger.debug(\"connection is now up - trying to reconnect...\");\n            join(_latestOptions);\n        }\n    }\n\n    function onJoined(callback: (wasReconnect: boolean) => void) {\n        if (isJoined) {\n            callback(false);\n        }\n\n        return callbacks.add(\"onJoined\", callback);\n    }\n\n    function onLeft(callback: () => void) {\n        if (!isJoined) {\n            callback();\n        }\n\n        return callbacks.add(\"onLeft\", callback);\n    }\n\n    function handleErrorMessage(msg: GW3Message) {\n        if (domain !== msg.domain) {\n            return;\n        }\n\n        const requestId = msg.request_id;\n        if (!requestId) {\n            return;\n        }\n        const entry = requestsMap[requestId];\n        if (!entry) {\n            return;\n        }\n\n        entry.error(msg);\n    }\n\n    function handleSuccessMessage(msg: GW3Message) {\n        if (msg.domain !== domain) {\n            return;\n        }\n        const requestId = msg.request_id;\n        if (!requestId) {\n            return;\n        }\n        const entry = requestsMap[requestId];\n        if (!entry) {\n            return;\n        }\n        entry.success(msg);\n    }\n\n    function getNextRequestId() {\n        return generate();\n    }\n\n    /**\n     * Send a message\n     * @param msg message to send\n     * @param tag a custom object (tag) - it will be transferred to success/error callback\n     * @param success\n     * @param error\n     */\n    function send<T>(msg: GW3Message, tag?: object, options?: Glue42Core.Connection.SendMessageOptions): Promise<T> {\n        options = options || {};\n        // Allows function caller to override request_id\n        msg.request_id = msg.request_id || getNextRequestId();\n        // Allows function caller to override domain (join/leave messages are in global domain)\n        msg.domain = msg.domain || domain;\n        if (!options.skipPeerId) {\n            msg.peer_id = connection.peerId;\n        }\n\n        const requestId = msg.request_id;\n\n        return new Promise((resolve, reject) => {\n            requestsMap[requestId] = {\n                success: (successMsg: any) => {\n                    delete requestsMap[requestId];\n                    successMsg._tag = tag;\n                    resolve(successMsg);\n                },\n                error: (errorMsg: { _tag?: any, error?: string }) => {\n                    logger.warn(`GW error - ${JSON.stringify(errorMsg)} for request ${JSON.stringify(msg)}`);\n                    delete requestsMap[requestId];\n                    errorMsg._tag = tag;\n                    reject(errorMsg);\n                },\n            };\n            connection\n                .send(msg, options)\n                .catch((err: string) => {\n                    requestsMap[requestId].error({ err });\n                });\n        });\n    }\n\n    function sendFireAndForget(msg: GW3Message): Promise<void> {\n        // Allows function caller to override request_id\n        msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();\n        // Allows function caller to override domain (join/leave messages are in global domain)\n        msg.domain = msg.domain || domain;\n        msg.peer_id = connection.peerId;\n\n        return connection.send(msg);\n    }\n\n    return {\n        join,\n        leave,\n        onJoined,\n        onLeft,\n        send,\n        sendFireAndForget,\n        on: <T>(type: string, callback: (msg: T) => void) => {\n            connection.on(type, (msg: any) => {\n                if (msg.domain !== domain) {\n                    return;\n                }\n\n                try {\n                    callback(msg);\n                } catch (e: any) {\n                    logger.error(`Callback  failed: ${e} \\n ${e.stack} \\n msg was: ${JSON.stringify(msg)}`, e);\n                }\n            });\n        },\n        loggedIn: (callback: () => void) => connection.loggedIn(callback),\n        connected: (callback: (server: string) => void) => connection.connected(callback),\n        disconnected: (callback: () => void) => connection.disconnected(callback),\n        get peerId() {\n            return connection.peerId;\n        },\n        get domain() {\n            return domain;\n        },\n    };\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport domainSession from \"./gw3Domain\";\nimport { Glue42Core } from \"../../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { GW3Protocol, Identity, ConnectionSettings } from \"../types\";\nimport Connection from \"../connection\";\nimport { Logger } from \"../../logger/logger\";\nimport { WelcomeMessage, CreateTokenReq, CreateTokenRes } from \"./messages\";\nexport default class GW3ProtocolImpl implements GW3Protocol {\n    public protocolVersion = 3;\n\n    private datePrefix = \"#T42_DATE#\";\n    private datePrefixLen = this.datePrefix.length;\n    private dateMinLen = this.datePrefixLen + 1; // prefix + at least one char (1970/01/01 = 0)\n    private datePrefixFirstChar = this.datePrefix[0];\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n\n    private globalDomain: Glue42Core.Connection.GW3DomainSession | undefined;\n\n    /* Flag indicating if the user is currently logged in */\n    private _isLoggedIn = false;\n\n    /*\n     * If true(default) the user wants to be connected.\n     * If the user explicitly calls logout this will become false.\n     * This is used to determine if it should retry trying to login.\n     */\n    private shouldTryLogin = true;\n\n    /* True only if this is the initial login attempt. */\n    private initialLogin = true;\n    private initialLoginAttempts = 3;\n    private pingTimer: any;\n    private sessions: Glue42Core.Connection.GW3DomainSession[] = [];\n    private loginConfig: Glue42Core.Auth | undefined;\n\n    constructor(private connection: Connection, private settings: ConnectionSettings, private logger: Logger) {\n        connection.disconnected(() => {\n            this.handleDisconnected();\n        });\n\n        this.ping();\n    }\n\n    public get isLoggedIn() {\n        return this._isLoggedIn;\n    }\n\n    public processStringMessage(message: string): { msg: object, msgType: string } {\n        const msg: { type: string } = JSON.parse(message, (key, value) => {\n\n            // check for date - we have custom protocol for dates\n            if (typeof value !== \"string\") {\n                return value;\n            }\n            if (value.length < this.dateMinLen) {\n                return value;\n            }\n            if (value[0] !== this.datePrefixFirstChar) {\n                return value;\n            }\n            if (value.substring(0, this.datePrefixLen) !== this.datePrefix) {\n                return value;\n            }\n            try {\n                const milliseconds = parseInt(value.substring(this.datePrefixLen, value.length), 10);\n                if (isNaN(milliseconds)) {\n                    return value;\n                }\n                return new Date(milliseconds);\n            } catch (ex) {\n                return value;\n            }\n        });\n\n        return {\n            msg,\n            msgType: msg.type,\n        };\n    }\n\n    public createStringMessage(message: object): string {\n        const oldToJson = Date.prototype.toJSON;\n        try {\n            const datePrefix = this.datePrefix;\n            Date.prototype.toJSON = function () {\n                return datePrefix + this.getTime();\n            };\n            const result = JSON.stringify(message);\n            return result;\n        } finally {\n            Date.prototype.toJSON = oldToJson;\n        }\n    }\n\n    public processObjectMessage(message: { type: string }): { msg: object, msgType: string } {\n        if (!message.type) {\n            throw new Error(\"Object should have type property\");\n        }\n        return {\n            msg: message,\n            msgType: message.type,\n        };\n    }\n\n    public createObjectMessage(message: object): object {\n        return message;\n    }\n\n    public async login(config: Glue42Core.Auth, reconnect?: boolean): Promise<Identity> {\n        this.logger.debug(\"logging in...\");\n        this.loginConfig = config;\n\n        if (!this.loginConfig) {\n            // in case of no auth send empty username and password\n            this.loginConfig = { username: \"\", password: \"\" };\n        }\n        this.shouldTryLogin = true;\n\n        const authentication: {\n            method?: string,\n            token?: string,\n            login?: string,\n            secret?: string,\n            provider?: string\n            providerContext?: any\n        } = {};\n\n        this.connection.gatewayToken = config.gatewayToken;\n        if (config.gatewayToken) {\n            // in case of re-connect try to refresh the GW token\n            if (reconnect) {\n                try {\n                    const token = await this.getNewGWToken();\n                    config.gatewayToken = token;\n                } catch (e: any) {\n                    this.logger.warn(`failed to get GW token when reconnecting ${e?.message || e}`);\n                }\n            }\n            authentication.method = \"gateway-token\";\n            authentication.token = config.gatewayToken;\n            this.connection.gatewayToken = config.gatewayToken;\n        } else if (config.flowName === \"sspi\") {\n            authentication.provider = \"win\";\n            authentication.method = \"access-token\";\n\n            if (config.flowCallback && config.sessionId) {\n                authentication.token =\n                    (await config.flowCallback(config.sessionId, null))\n                        .data\n                        .toString(\"base64\");\n            } else {\n                throw new Error(\"Invalid SSPI config\");\n            }\n        } else if (config.token) {\n            authentication.method = \"access-token\";\n            authentication.token = config.token;\n        } else if (config.username) {\n            authentication.method = \"secret\";\n            authentication.login = config.username;\n            authentication.secret = config.password;\n        } else if (config.provider) {\n            authentication.provider = config.provider;\n            authentication.providerContext = config.providerContext;\n        } else {\n            throw new Error(\"invalid auth message\" + JSON.stringify(config));\n        }\n\n        const helloMsg: any = {\n            type: \"hello\",\n            identity: this.settings.identity,\n            authentication\n        };\n\n        if (config.sessionId) {\n            helloMsg.request_id = config.sessionId;\n        }\n\n        this.globalDomain = domainSession(\n            \"global\",\n            this.connection,\n            this.logger.subLogger(\"global-domain\"),\n            [\n                \"welcome\",\n                \"token\",\n                \"authentication-request\"\n            ]);\n\n        const sendOptions: Glue42Core.Connection.SendMessageOptions = { skipPeerId: true };\n        if (this.initialLogin) {\n            sendOptions.retryInterval = this.settings.reconnectInterval;\n            sendOptions.maxRetries = this.settings.reconnectAttempts;\n        }\n\n        try {\n            let welcomeMsg: WelcomeMessage;\n\n            while (true) {\n                const msg: any = await this.globalDomain.send(helloMsg, undefined, sendOptions);\n                if (msg.type === \"authentication-request\") {\n                    // respond to auth challenge\n                    const token = Buffer.from(msg.authentication.token, \"base64\");\n                    if (config.flowCallback && config.sessionId) {\n                        helloMsg.authentication.token =\n                            (await config.flowCallback(config.sessionId, token))\n                                .data\n                                .toString(\"base64\");\n                    }\n                    helloMsg.request_id = config.sessionId;\n                    continue;\n                } else if (msg.type === \"welcome\") {\n                    // we're in\n                    welcomeMsg = msg as WelcomeMessage;\n                    break;\n                } else if (msg.type === \"error\") {\n                    throw new Error(\"Authentication failed: \" + msg.reason);\n                } else {\n                    throw new Error(\"Unexpected message type during authentication: \" + msg.type);\n                }\n            }\n            // we've logged in once - set this to false for the rest of the lifetime\n            this.initialLogin = false;\n            this.logger.debug(\"login successful with peerId \" + welcomeMsg.peer_id);\n\n            this.connection.peerId = welcomeMsg.peer_id;\n            this.connection.resolvedIdentity = welcomeMsg.resolved_identity;\n            this.connection.availableDomains = welcomeMsg.available_domains as any;\n            if (welcomeMsg.options) {\n                this.connection.token = welcomeMsg.options.access_token;\n                this.connection.info = welcomeMsg.options.info;\n            }\n            this.setLoggedIn(true);\n            return welcomeMsg.resolved_identity;\n        } catch (err: any) {\n            this.logger.error(\"error sending hello message - \" + (err.message || err.msg || err.reason || err), err);\n            throw err;\n        } finally {\n            if (config && config.flowCallback && config.sessionId) {\n                config.flowCallback(config.sessionId, null);\n            }\n        }\n    }\n\n    public async logout(): Promise<void> {\n        this.logger.debug(\"logging out...\");\n        this.shouldTryLogin = false;\n\n        if (this.pingTimer) {\n            clearTimeout(this.pingTimer);\n        }\n\n        // go through all sessions and leave the corresponding domain\n        const promises = this.sessions.map((session) => {\n            session.leave();\n        });\n        await Promise.all(promises);\n    }\n\n    public loggedIn(callback: (() => void)): () => void {\n        if (this._isLoggedIn) {\n            callback();\n        }\n        return this.registry.add(\"onLoggedIn\", callback);\n    }\n\n    public domain(domainName: string, domainLogger: Logger, successMessages?: string[], errorMessages?: string[]): Glue42Core.Connection.GW3DomainSession {\n        let session = this.sessions.filter((s) => s.domain === domainName)[0];\n        if (!session) {\n            session = domainSession(domainName, this.connection, domainLogger, successMessages, errorMessages);\n            this.sessions.push(session);\n        }\n        return session;\n    }\n\n    public handleDisconnected() {\n        this.setLoggedIn(false);\n        const tryToLogin = this.shouldTryLogin;\n        if (tryToLogin && this.initialLogin) {\n            if (this.initialLoginAttempts <= 0) {\n                return;\n            }\n            this.initialLoginAttempts--;\n        }\n\n        this.logger.debug(\"disconnected - will try new login?\" + this.shouldTryLogin);\n        if (this.shouldTryLogin) {\n            if (!this.loginConfig) {\n                throw new Error(\"no login info\");\n            }\n\n            this.connection.login(this.loginConfig, true)\n                .catch(() => {\n                    setTimeout(this.handleDisconnected.bind(this), this.settings.reconnectInterval || 1000);\n                });\n        }\n    }\n\n    public setLoggedIn(value: boolean) {\n        this._isLoggedIn = value;\n        if (this._isLoggedIn) {\n            this.registry.execute(\"onLoggedIn\");\n        }\n    }\n\n    public ping() {\n        // if we don't want to be connected return\n        if (!this.shouldTryLogin) {\n            return;\n        }\n\n        // if logged in ping\n        if (this._isLoggedIn) {\n            this.connection.send({ type: \"ping\" });\n        }\n\n        // schedule next after 30 sec\n        this.pingTimer = setTimeout(() => {\n            this.ping();\n        }, 30 * 1000);\n    }\n\n    public authToken(): Promise<string> {\n        const createTokenReq: CreateTokenReq = {\n            type: \"create-token\"\n        };\n\n        if (!this.globalDomain) {\n            return Promise.reject(new Error(\"no global domain session\"));\n        }\n\n        return this.globalDomain.send<CreateTokenRes>(createTokenReq)\n            .then((res: CreateTokenRes) => {\n                return res.token;\n            });\n    }\n\n    private getNewGWToken(): Promise<string | undefined> {\n        if (typeof window !== undefined) {\n            // pull up a new token from gd\n            const glue42gd = window.glue42gd;\n            if (glue42gd) {\n                return glue42gd.getGWToken();\n            }\n        }\n        return Promise.reject(new Error(\"not running in GD\"));\n    }\n}\n","import { Glue42Core } from \"../../glue\";\n\nexport class MessageReplayerImpl implements Glue42Core.Connection.MessageReplayer {\n    private specs: { [name: string]: Glue42Core.Connection.MessageReplaySpec };\n    private specsNames: string[] = [];\n    private messages: { [type: string]: object[] } = {};\n    private isDone: boolean | undefined;\n    private subs: { [type: string]: any } = {};\n    private subsRefCount: { [type: string]: number } = {};\n    private connection: Glue42Core.Connection.API | undefined;\n\n    constructor(specs: Glue42Core.Connection.MessageReplaySpec[]) {\n        this.specs = {};\n        for (const spec of specs) {\n            this.specs[spec.name] = spec;\n            this.specsNames.push(spec.name);\n        }\n    }\n\n    public init(connection: Glue42Core.Connection.API) {\n        this.connection = connection;\n        for (const name of this.specsNames) {\n            for (const type of this.specs[name].types) {\n                let refCount = this.subsRefCount[type];\n                if (!refCount) {\n                    refCount = 0;\n                }\n                refCount += 1;\n                this.subsRefCount[type] = refCount;\n                if (refCount > 1) {\n                    continue;\n                }\n\n                const sub = connection.on<object>(\n                    type,\n                    (msg) => this.processMessage(type, msg));\n\n                this.subs[type] = sub;\n            }\n        }\n    }\n\n    public processMessage(type: string, msg: object) {\n        if (this.isDone || !msg) {\n            return;\n        }\n\n        for (const name of this.specsNames) {\n            if (this.specs[name].types.indexOf(type) !== -1) {\n                const messages = this.messages[name] || [];\n                this.messages[name] = messages;\n                messages.push(msg);\n            }\n        }\n    }\n\n    public drain(name: string, callback?: (msg: object) => void) {\n        if (callback) {\n            (this.messages[name] || []).forEach(callback);\n        }\n\n        delete this.messages[name];\n\n        for (const type of this.specs[name].types) {\n            this.subsRefCount[type] -= 1;\n            if (this.subsRefCount[type] <= 0) {\n                this.connection?.off(this.subs[type]);\n                delete this.subs[type];\n                delete this.subsRefCount[type];\n            }\n        }\n\n        delete this.specs[name];\n\n        if (!this.specs.length) {\n            this.isDone = true;\n        }\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const PromisePlus = <T>(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void, timeoutMilliseconds: number, timeoutMessage?: string): Promise<T> => {\n\n    return new Promise<T>((resolve, reject) => {\n        const timeout = setTimeout(() => {\n\n            const message = timeoutMessage || `Promise timeout hit: ${timeoutMilliseconds}`;\n\n            reject(message);\n        }, timeoutMilliseconds);\n\n        const providedPromise = new Promise<T>(executor);\n\n        providedPromise\n            .then((result) => {\n                clearTimeout(timeout);\n                resolve(result);\n            })\n            .catch((error) => {\n                clearTimeout(timeout);\n                reject(error);\n            });\n    });\n\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Glue42Core } from \"../../../glue\";\nimport { Identity, Transport } from \"../types\";\nimport { Logger } from \"../../logger/logger\";\nimport {\n    default as CallbackRegistryFactory,\n    CallbackRegistry,\n    UnsubscribeFunction,\n} from \"callback-registry\";\nimport generate from \"shortid\";\nimport { PromisePlus } from \"../../utils/promise-plus\";\n\ntype MessageType = \"connectionAccepted\" | \"connectionRejected\" | \"connectionRequest\" | \"parentReady\" |\n    \"parentPing\" | \"platformPing\" | \"platformReady\" | \"clientUnload\" | \"manualUnload\" |\n    \"extConnectionResponse\" | \"extSetupRequest\" | \"gatewayDisconnect\" | \"gatewayInternalConnect\";\n\nexport default class WebPlatformTransport implements Transport {\n    public isPreferredActivated: boolean | undefined;\n\n    private _communicationId: string | undefined;\n    private publicWindowId: string | undefined;\n    private selfAssignedWindowId: string | undefined;\n    private iAmConnected = false;\n    private parentReady = false;\n    private rejected = false;\n    private parentPingResolve: ((value?: void | PromiseLike<void> | undefined) => void) | undefined;\n    private parentPingInterval: NodeJS.Timeout | undefined;\n    private connectionResolve: ((value?: void | PromiseLike<void> | undefined) => void) | undefined;\n    private extConnectionResolve: ((value: void | PromiseLike<void>) => void) | undefined;\n    private extConnectionReject: ((reason?: any) => void) | undefined;\n    private connectionReject: ((reason?: unknown) => void) | undefined;\n    private port: MessagePort | undefined;\n    private myClientId: string | undefined;\n    private children: { grandChildId: string; source: Window; connected: boolean; origin: string }[] = [];\n\n    private extContentAvailable = false;\n    private extContentConnecting = false;\n    private extContentConnected = false;\n    private parentWindowId: string | undefined;\n    private parentInExtMode = false;\n\n    private readonly webNamespace = \"g42_core_web\";\n    private parent: Window | undefined;\n    private parentType: \"window\" | \"workspace\" | \"extension\" | undefined;\n    private readonly parentPingTimeout = 5000;\n    private readonly connectionRequestTimeout = 7000;\n    private readonly defaultTargetString = \"*\";\n    private readonly registry: CallbackRegistry = CallbackRegistryFactory();\n    private readonly messages: { [key in MessageType]: { name: string; handle: (event: MessageEvent) => void } } = {\n        connectionAccepted: { name: \"connectionAccepted\", handle: this.handleConnectionAccepted.bind(this) },\n        connectionRejected: { name: \"connectionRejected\", handle: this.handleConnectionRejected.bind(this) },\n        connectionRequest: { name: \"connectionRequest\", handle: this.handleConnectionRequest.bind(this) },\n        parentReady: {\n            name: \"parentReady\", handle: () => {\n                //\n            }\n        },\n        parentPing: { name: \"parentPing\", handle: this.handleParentPing.bind(this) },\n        platformPing: { name: \"platformPing\", handle: this.handlePlatformPing.bind(this) },\n        platformReady: { name: \"platformReady\", handle: this.handlePlatformReady.bind(this) },\n        clientUnload: { name: \"clientUnload\", handle: this.handleClientUnload.bind(this) },\n        manualUnload: { name: \"manualUnload\", handle: this.handleManualUnload.bind(this) },\n        extConnectionResponse: { name: \"extConnectionResponse\", handle: this.handleExtConnectionResponse.bind(this) },\n        extSetupRequest: { name: \"extSetupRequest\", handle: this.handleExtSetupRequest.bind(this) },\n        gatewayDisconnect: { name: \"gatewayDisconnect\", handle: this.handleGatewayDisconnect.bind(this) },\n        gatewayInternalConnect: { name: \"gatewayInternalConnect\", handle: this.handleGatewayInternalConnect.bind(this) }\n    };\n\n    constructor(private readonly settings: Glue42Core.WebPlatformConnection, private readonly logger: Logger, private readonly identity?: Identity) {\n        this.extContentAvailable = !!(window as any).glue42ext;\n\n        this.setUpMessageListener();\n        this.setUpUnload();\n        this.setupPlatformUnloadListener();\n\n        this.parentType = window.name.includes(\"#wsp\") ? \"workspace\" : undefined;\n    }\n\n    public manualSetReadyState(): void {\n        this.iAmConnected = true;\n        this.parentReady = true;\n    }\n\n    public get transportWindowId(): string | undefined {\n        return this.publicWindowId;\n    }\n\n    public get communicationId(): string | undefined {\n        return this._communicationId;\n    }\n\n    public async sendObject(msg: object): Promise<void> {\n\n        if (this.extContentConnected) {\n            return window.postMessage({ glue42ExtOut: msg }, this.defaultTargetString);\n        }\n\n        if (!this.port) {\n            throw new Error(\"Cannot send message, because the port was not opened yet\");\n        }\n        this.port.postMessage(msg);\n    }\n\n    public get isObjectBasedTransport(): boolean {\n        return true;\n    }\n\n    public onMessage(callback: (msg: string | object) => void): UnsubscribeFunction {\n        return this.registry.add(\"onMessage\", callback);\n    }\n\n    public send(): Promise<void> {\n        return Promise.reject(\"not supported\");\n    }\n\n    public onConnectedChanged(callback: (connected: boolean, reason?: string) => void): UnsubscribeFunction {\n        return this.registry.add(\"onConnectedChanged\", callback);\n    }\n\n    public async open(): Promise<void> {\n        this.logger.debug(\"opening a connection to the web platform gateway.\");\n\n        await this.connect();\n\n        this.notifyStatusChanged(true);\n    }\n\n    public close(): Promise<void> {\n        const message = {\n            glue42core: {\n                type: this.messages.gatewayDisconnect.name,\n                data: {\n                    clientId: this.myClientId,\n                    ownWindowId: this.identity?.windowId\n                }\n            }\n        };\n\n        this.port?.postMessage(message);\n\n        this.parentReady = false;\n\n        this.notifyStatusChanged(false, \"manual reconnection\");\n\n        return Promise.resolve();\n    }\n\n    public name(): string {\n        return \"web-platform\";\n    }\n\n    public async reconnect(): Promise<void> {\n        await this.close();\n\n        return Promise.resolve();\n    }\n\n    private initiateInternalConnection(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.logger.debug(\"opening an internal web platform connection\");\n            this.port = this.settings.port;\n\n            if (this.iAmConnected) {\n                this.logger.warn(\"cannot open a new connection, because this client is currently connected\");\n                return;\n            }\n\n            this.port.onmessage = (event): void => {\n\n                if (this.iAmConnected && !event.data?.glue42core) {\n                    this.registry.execute(\"onMessage\", event.data);\n                    return;\n                }\n\n                const data = event.data?.glue42core;\n\n                if (!data) {\n                    return;\n                }\n\n                if (data.type === this.messages.gatewayInternalConnect.name && data.success) {\n                    this.publicWindowId = this.settings.windowId;\n\n                    if (this.identity && this.publicWindowId) {\n                        this.identity.windowId = this.publicWindowId;\n                        this.identity.instance = this.publicWindowId;\n                    }\n                    resolve();\n                }\n\n                if (data.type === this.messages.gatewayInternalConnect.name && data.error) {\n                    reject(data.error);\n                }\n            };\n\n            this.port.postMessage({\n                glue42core: {\n                    type: this.messages.gatewayInternalConnect.name\n                }\n            });\n\n        });\n    }\n\n    private initiateRemoteConnection(target?: Window): Promise<void> {\n\n        return PromisePlus<void>((resolve, reject) => {\n            this.connectionResolve = resolve;\n            this.connectionReject = reject;\n\n            // if I am reconnecting, I want to reuse my original client id\n            this.myClientId = this.myClientId ?? generate();\n\n            const bridgeInstanceId = this.getMyWindowId() || generate();\n\n            const request = {\n                glue42core: {\n                    type: this.messages.connectionRequest.name,\n                    clientId: this.myClientId,\n                    clientType: \"child\",\n                    bridgeInstanceId,\n                    selfAssignedWindowId: this.selfAssignedWindowId\n                }\n            };\n\n            this.logger.debug(\"sending connection request\");\n\n            if (this.extContentConnecting) {\n                request.glue42core.clientType = \"child\";\n                request.glue42core.bridgeInstanceId = this.myClientId;\n                (request as any).glue42core.parentWindowId = this.parentWindowId;\n                return window.postMessage(request, this.defaultTargetString);\n            }\n\n            if (!target) {\n                throw new Error(\"Cannot send a connection request, because no glue target was specified!\");\n            }\n\n            target.postMessage(request, this.defaultTargetString);\n        }, this.connectionRequestTimeout, \"The connection to the target glue window timed out\");\n\n    }\n\n    private async isParentCheckSuccess(parentCheck: Promise<void>): Promise<{ success: boolean }> {\n        try {\n            await parentCheck;\n\n            return { success: true };\n        } catch (error) {\n            return { success: false };\n        }\n    }\n\n    private setUpMessageListener(): void {\n        if (this.settings.port) {\n            this.logger.debug(\"skipping generic message listener, because this is an internal client\");\n            // do not set up listener, because this is running as an internal client for the platform\n            return;\n        }\n\n        window.addEventListener(\"message\", (event) => {\n            const data = event.data?.glue42core;\n\n            if (!data || this.rejected) {\n                return;\n            }\n\n            if (!this.checkMessageTypeValid(data.type)) {\n                this.logger.error(`cannot handle the incoming glue42 core message, because the type is invalid: ${data.type}`);\n                return;\n            }\n\n            const messageType = data.type as MessageType;\n\n            this.logger.debug(`received valid glue42core message of type: ${messageType}`);\n\n            this.messages[messageType].handle(event);\n        });\n    }\n\n    private setUpUnload(): void {\n        if (this.settings.port) {\n            this.logger.debug(\"skipping unload event listener, because this is an internal client\");\n            // do not set up listener, because this is running as an internal client for the platform\n            return;\n        }\n\n        window.addEventListener(\"beforeunload\", () => {\n\n            if (this.extContentConnected) {\n                // before unload in this case should be handled in the content script\n                return;\n            }\n\n            const message = {\n                glue42core: {\n                    type: this.messages.clientUnload.name,\n                    data: {\n                        clientId: this.myClientId,\n                        ownWindowId: this.identity?.windowId\n                    }\n                }\n            };\n\n            if (this.parent) {\n                this.parent.postMessage(message, this.defaultTargetString);\n            }\n\n            this.port?.postMessage(message);\n        });\n    }\n\n    private handlePlatformReady(event: MessageEvent): void {\n        this.logger.debug(\"the web platform gave the ready signal\");\n        this.parentReady = true;\n\n        if (this.parentPingResolve) {\n            this.parentPingResolve();\n            delete this.parentPingResolve;\n        }\n\n        if (this.parentPingInterval) {\n            clearInterval(this.parentPingInterval);\n            delete this.parentPingInterval;\n        }\n\n        this.parent = event.source as Window;\n        this.parentType = window.name.includes(\"#wsp\") ? \"workspace\" : \"window\";\n    }\n\n    private handleConnectionAccepted(event: MessageEvent): void {\n        const data = event.data?.glue42core;\n\n        if (this.myClientId === data.clientId) {\n            return this.handleAcceptanceOfMyRequest(data);\n        }\n\n        return this.handleAcceptanceOfGrandChildRequest(data, event);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private handleAcceptanceOfMyRequest(data: any): void {\n        this.logger.debug(\"handling a connection accepted signal targeted at me.\");\n        this.isPreferredActivated = data.isPreferredActivated;\n\n        if (this.extContentConnecting) {\n            return this.processExtContentConnection(data);\n        }\n\n        if (!data.port) {\n            this.logger.error(\"cannot set up my connection, because I was not provided with a port\");\n            return;\n        }\n\n        this.publicWindowId = this.getMyWindowId();\n\n        if (this.identity) {\n            this.identity.windowId = this.publicWindowId;\n            this.identity.instance = this.identity.instance ? this.identity.instance : this.publicWindowId || generate();\n        }\n\n        if (this.identity && data.appName) {\n            this.identity.application = data.appName;\n            this.identity.applicationName = data.appName;\n        }\n\n        this._communicationId = data.communicationId;\n\n        this.port = data.port as MessagePort;\n        this.port.onmessage = (e): object[] => this.registry.execute(\"onMessage\", e.data);\n\n        if (this.connectionResolve) {\n            this.logger.debug(\"my connection is set up, calling the connection resolve.\");\n            this.connectionResolve();\n            delete this.connectionResolve;\n            return;\n        }\n\n        this.logger.error(\"unable to call the connection resolve, because no connection promise was found\");\n    }\n\n    private processExtContentConnection(data: any): void {\n        this.logger.debug(\"handling a connection accepted signal targeted at me for extension content connection.\");\n\n        this.extContentConnecting = false;\n        this.extContentConnected = true;\n\n        this.publicWindowId = this.parentWindowId || this.myClientId;\n\n        if (this.extContentConnecting && this.identity) {\n            this.identity.windowId = this.publicWindowId;\n        }\n\n        if (this.identity && data.appName) {\n            this.identity.application = data.appName;\n            this.identity.applicationName = data.appName;\n        }\n\n        window.addEventListener(\"message\", (event) => {\n            const extData = event.data?.glue42ExtInc;\n\n            if (!extData) {\n                return;\n            }\n\n            this.registry.execute(\"onMessage\", extData);\n        });\n\n        if (this.connectionResolve) {\n            this.logger.debug(\"my connection is set up, calling the connection resolve.\");\n            this.connectionResolve();\n            delete this.connectionResolve;\n            return;\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private handleAcceptanceOfGrandChildRequest(data: any, event: MessageEvent): void {\n        if (this.extContentConnecting || this.extContentConnected) {\n            this.logger.debug(\"cannot process acceptance of a grandchild, because I am connected to a content script\");\n            return;\n        }\n        this.logger.debug(`handling a connection accepted signal targeted at a grandchild: ${data.clientId}`);\n\n        const child = this.children.find((c) => c.grandChildId === data.clientId);\n\n        if (!child) {\n            this.logger.error(`cannot handle connection accepted for grandchild: ${data.clientId}, because there is no grandchild with this id`);\n            return;\n        }\n\n        child.connected = true;\n\n        this.logger.debug(`the grandchild connection for ${data.clientId} is set up, forwarding the success message and the gateway port`);\n\n        data.parentWindowId = this.publicWindowId;\n\n        child.source.postMessage(event.data, child.origin, [data.port]);\n        return;\n    }\n\n    private handleConnectionRejected(): void {\n        this.logger.debug(\"handling a connection rejection. Most likely the reason is that this window was not created by a glue API call\");\n        if (this.connectionReject) {\n            this.connectionReject(\"The platform connection was rejected. Most likely because this window was not created by a glue API call\");\n            delete this.connectionReject;\n        }\n    }\n\n    private handleConnectionRequest(event: MessageEvent): void {\n\n        if (this.extContentConnecting) {\n            // I am being connected now and this is handled in the associated content script\n            this.logger.debug(\"This connection request event is targeted at the extension content\");\n            return;\n        }\n\n        const source = event.source as Window;\n        const data = event.data.glue42core;\n\n        if (!data.clientType || data.clientType !== \"grandChild\") {\n            return this.rejectConnectionRequest(source, event.origin, \"rejecting a connection request, because the source was not opened by a glue API call\");\n        }\n\n        if (!data.clientId) {\n            return this.rejectConnectionRequest(source, event.origin, \"rejecting a connection request, because the source did not provide a valid id\");\n        }\n\n        if (!this.parent) {\n            return this.rejectConnectionRequest(source, event.origin, \"Cannot forward the connection request, because no direct connection to the platform was found\");\n        }\n\n        this.logger.debug(`handling a connection request for a grandchild: ${data.clientId}`);\n\n        this.children.push({ grandChildId: data.clientId, source, connected: false, origin: event.origin });\n\n        this.logger.debug(`grandchild: ${data.clientId} is prepared, forwarding connection request to the platform`);\n\n        this.parent.postMessage(event.data, this.defaultTargetString);\n    }\n\n    private handleParentPing(event: MessageEvent): void {\n\n        if (!this.parentReady) {\n            this.logger.debug(\"my parent is not ready, I am ignoring the parent ping\");\n            return;\n        }\n\n        if (!this.iAmConnected) {\n            this.logger.debug(\"i am not fully connected yet, I am ignoring the parent ping\");\n            return;\n        }\n\n        const message = {\n            glue42core: {\n                type: this.messages.parentReady.name\n            }\n        };\n\n        if (this.extContentConnected) {\n            (message as any).glue42core.extMode = { windowId: this.myClientId };\n        }\n\n        const source = event.source as Window;\n\n        this.logger.debug(\"responding to a parent ping with a ready message\");\n\n        source.postMessage(message, event.origin);\n    }\n\n    private setupPlatformUnloadListener(): void {\n        this.onMessage((msg) => {\n            if ((msg as any).type === \"platformUnload\") {\n                this.logger.debug(\"detected a web platform unload\");\n\n                this.parentReady = false;\n\n                this.notifyStatusChanged(false, \"Gateway unloaded\");\n            }\n        });\n    }\n\n    private handleManualUnload(): void {\n        // this message handler exists only to soften the phasing our of the manual unload.\n        const message = {\n            glue42core: {\n                type: this.messages.clientUnload.name,\n                data: {\n                    clientId: this.myClientId,\n                    ownWindowId: this.identity?.windowId\n                }\n            }\n        };\n\n        if (this.extContentConnected) {\n            return window.postMessage({ glue42ExtOut: message }, this.defaultTargetString);\n        }\n\n        this.port?.postMessage(message);\n    }\n\n    private handleClientUnload(event: MessageEvent): void {\n        const data = event.data.glue42core;\n        const clientId = data?.data.clientId;\n\n        if (!clientId) {\n            this.logger.warn(\"cannot process grand child unload, because the provided id was not valid\");\n            return;\n        }\n\n        const foundChild = this.children.find((child) => child.grandChildId === clientId);\n\n        if (!foundChild) {\n            this.logger.warn(\"cannot process grand child unload, because this client is unaware of this grandchild\");\n            return;\n        }\n\n        this.logger.debug(`handling grandchild unload for id: ${clientId}`);\n\n        this.children = this.children.filter((child) => child.grandChildId !== clientId);\n    }\n\n    private handlePlatformPing(): void {\n        return;\n    }\n\n    private notifyStatusChanged(status: boolean, reason?: string): void {\n        this.iAmConnected = status;\n        this.registry.execute(\"onConnectedChanged\", status, reason);\n    }\n\n    private checkMessageTypeValid(typeToValidate: string): boolean {\n        return typeof typeToValidate === \"string\" && !!this.messages[typeToValidate as MessageType];\n    }\n\n    private rejectConnectionRequest(source: Window, origin: string, reason: string): void {\n        this.rejected = true;\n        this.logger.error(reason);\n\n        const rejection = {\n            glue42core: {\n                type: this.messages.connectionRejected.name\n            }\n        };\n\n        source.postMessage(rejection, origin);\n    }\n\n    // --- ext methods ---\n\n    private requestConnectionPermissionFromExt(): Promise<void> {\n        // here I know that a content script is started, but not sure if it is ready\n\n        return this.waitForContentScript()\n            .then(() => PromisePlus<void>((resolve, reject) => {\n                this.extConnectionResolve = resolve;\n                this.extConnectionReject = reject;\n\n                const message = {\n                    glue42core: {\n                        type: \"extSetupRequest\"\n                    }\n                };\n\n                this.logger.debug(\"permission request to the extension content script was sent\");\n\n                window.postMessage(message, this.defaultTargetString);\n            }, this.parentPingTimeout, \"Cannot initialize glue, because this app was not opened or created by a Glue Client and the request for extension connection timed out\"));\n    }\n\n    private handleExtConnectionResponse(event: MessageEvent): void {\n        const data = event.data?.glue42core;\n\n        if (!data.approved) {\n            return this.extConnectionReject ? this.extConnectionReject(\"Cannot initialize glue, because this app was not opened or created by a Glue Client and the request for extension connection was rejected\") : undefined;\n        }\n\n        if (this.extConnectionResolve) {\n            this.extConnectionResolve();\n            delete this.extConnectionResolve;\n        }\n\n        this.extContentConnecting = true;\n        this.parentType = \"extension\";\n        this.logger.debug(\"The extension connection was approved, proceeding.\");\n    }\n\n    private handleExtSetupRequest(): void {\n        // this is handled by the associated content script\n        return;\n    }\n\n    private handleGatewayDisconnect(): void {\n        // this is handled only in the web platform gateway;\n        return;\n    }\n\n    private handleGatewayInternalConnect(): void {\n        // this is handled only in the internal connection port;\n        return;\n    }\n\n    private waitForContentScript(): Promise<void> {\n        const contentReady = !!(window as any).glue42ext?.content;\n\n        if (contentReady) {\n            return Promise.resolve();\n        }\n\n        return PromisePlus<void>((resolve) => {\n\n            window.addEventListener(\"Glue42EXTReady\", () => {\n                resolve();\n            });\n\n        }, this.connectionRequestTimeout, \"The content script was available, but was never heard to be ready\");\n    }\n\n    // ---- V2 Connection ----\n\n    private async connect(): Promise<void> {\n\n        if (this.settings.port) {\n            await this.initiateInternalConnection();\n            this.logger.debug(\"internal web platform connection completed\");\n            return;\n        }\n\n        this.logger.debug(\"opening a client web platform connection\");\n\n        await this.findParent();\n\n        await this.initiateRemoteConnection(this.parent);\n\n        this.logger.debug(\"the client is connected\");\n    }\n\n    private async findParent(): Promise<void> {\n        const connectionNotPossibleMsg = \"Cannot initiate glue, because this window was not opened or created by a glue client\";\n\n        const myInsideParents = this.getPossibleParentsInWindow(window);\n\n        const myOutsideParents = this.getPossibleParentsOutsideWindow(window.top?.opener, window.top);\n\n        const uniqueParents = new Set<Window>([...myInsideParents, ...myOutsideParents]);\n\n        if (!uniqueParents.size && !this.extContentAvailable) {\n            throw new Error(connectionNotPossibleMsg);\n        }\n\n        if (!uniqueParents.size && this.extContentAvailable) {\n            await this.requestConnectionPermissionFromExt();\n            return;\n        }\n\n        const defaultParentCheck = await this.isParentCheckSuccess(this.confirmParent(Array.from(uniqueParents)));\n\n        if (defaultParentCheck.success) {\n            this.logger.debug(\"The default parent was found!\");\n            return;\n        }\n\n        if (!this.extContentAvailable) {\n            throw new Error(connectionNotPossibleMsg);\n        }\n\n        await this.requestConnectionPermissionFromExt();\n    }\n\n    private getPossibleParentsInWindow(currentWindow: Window): Window[] {\n        return (!currentWindow || currentWindow === currentWindow.top) ? [] : [currentWindow.parent, ...this.getPossibleParentsInWindow(currentWindow.parent)];\n    }\n\n    private getPossibleParentsOutsideWindow(opener: Window | null, current: Window | null): Window[] {\n        return (!opener || !current || opener === current) ? [] : [opener, ...this.getPossibleParentsInWindow(opener), ...this.getPossibleParentsOutsideWindow(opener.opener, opener)];\n    }\n\n    private confirmParent(targets: Window[]): Promise<void> {\n        const connectionNotPossibleMsg = \"Cannot initiate glue, because this window was not opened or created by a glue client\";\n\n        const parentCheck = PromisePlus<void>((resolve) => {\n\n            this.parentPingResolve = resolve;\n\n            const message = {\n                glue42core: {\n                    type: this.messages.platformPing.name\n                }\n            };\n\n            this.parentPingInterval = setInterval(() => {\n                targets.forEach((target) => {\n                    target.postMessage(message, this.defaultTargetString);\n                });\n            }, 1000);\n\n        }, this.parentPingTimeout, connectionNotPossibleMsg);\n\n        parentCheck.catch(() => {\n            if (this.parentPingInterval) {\n                clearInterval(this.parentPingInterval);\n                delete this.parentPingInterval;\n            }\n        });\n\n        return parentCheck;\n    }\n\n    private getMyWindowId(): string | undefined {\n\n        if (this.parentType === \"workspace\") {\n            return window.name.substring(0, window.name.indexOf(\"#wsp\"));\n        }\n\n        if (window !== window.top) {\n            // iframes are not considered Glue Windows and have no window Id\n            return;\n        }\n\n        if (window.name?.includes(\"g42\")) {\n            return window.name;\n        }\n\n        this.selfAssignedWindowId = this.selfAssignedWindowId || `g42-${generate()}`;\n\n        return this.selfAssignedWindowId;\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport const waitForInvocations = (invocations: number, callback: () => any): () => void => {\n    let left = invocations;\n    return (): void => {\n        left--;\n\n        if (left === 0) {\n            callback();\n        }\n    };\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport class AsyncSequelizer {\n\n    private readonly queue: { action: () => Promise<any>; resolve: (args?: any) => void; reject: (err?: any) => void }[] = [];\n    private isExecutingQueue = false;\n\n    constructor(private readonly minSequenceInterval: number = 0) { }\n\n    public enqueue<T>(action: () => Promise<T>): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            this.queue.push({ action, resolve, reject });\n            this.executeQueue();\n        });\n    }\n\n    private async executeQueue(): Promise<void> {\n        if (this.isExecutingQueue) {\n            return;\n        }\n\n        this.isExecutingQueue = true;\n\n        while (this.queue.length) {\n            const operation = this.queue.shift();\n\n            // this satisfies the strict typescript mode\n            if (!operation) {\n                this.isExecutingQueue = false;\n                return;\n            }\n\n            try {\n                const actionResult = await operation.action();\n                operation.resolve(actionResult);\n            } catch (error) {\n                operation.reject(error);\n            }\n\n            await this.intervalBreak();\n        }\n\n        this.isExecutingQueue = false;\n    }\n\n    private intervalBreak(): Promise<void> {\n        return new Promise((res) => setTimeout(res, this.minSequenceInterval));\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n    default as CallbackFactory,\n    CallbackRegistry,\n    UnsubscribeFunction,\n} from \"callback-registry\";\nimport {\n    GW3Protocol,\n    Transport,\n    ConnectionSettings,\n    Identity\n} from \"./types\";\nimport { Logger } from \"../logger/logger\";\n\nimport { Glue42Core } from \"../../glue\";\nimport InProcTransport from \"./transports/inProc\";\nimport SharedWorkerTransport from \"./transports/worker\";\nimport WS from \"./transports/ws\";\nimport GW3ProtocolImpl from \"./protocols/gw3\";\nimport { MessageReplayerImpl } from \"./replayer\";\nimport timer from \"../utils/timer\";\nimport WebPlatformTransport from \"./transports/webPlatform\";\nimport { waitForInvocations } from \"../utils/wait-for\";\nimport { PromisePlus } from \"../utils/promise-plus\";\nimport { AsyncSequelizer } from \"../utils/sequelizer\";\n\n/**\n * A template for gateway connections - this is extended from specific protocols and transports.\n */\nexport default class Connection implements Glue42Core.Connection.API {\n\n    public peerId!: string;\n    public token!: string;\n    public info!: object;\n    public resolvedIdentity!: any;\n    public availableDomains!: Glue42Core.Connection.GWDomainInfo[];\n    public gatewayToken: string | undefined;\n    public replayer?: MessageReplayerImpl;\n\n    protected protocol: GW3Protocol;\n\n    // The message handlers that have to be executed for each received message\n    protected messageHandlers: {\n        [key: string]: { [key: string]: (msg: any) => void };\n    } = {};\n    protected ids = 1;\n    protected registry: CallbackRegistry = CallbackFactory();\n    protected _connected = false;\n    private isTrace = false;\n    private transport: Transport;\n\n    private _defaultTransport: Transport;\n    private _defaultAuth!: Glue42Core.Auth;\n\n    private _targetTransport: Transport | undefined;\n    private _targetAuth: Glue42Core.Auth | undefined;\n\n    private _swapTransport = false;\n    private _switchInProgress = false;\n    private _transportSubscriptions: UnsubscribeFunction[] = [];\n\n    private readonly _sequelizer = new AsyncSequelizer();\n\n    public get protocolVersion() {\n        return this.protocol?.protocolVersion;\n    }\n\n    constructor(private settings: ConnectionSettings, private logger: Logger) {\n        settings = settings || {};\n        settings.reconnectAttempts = settings.reconnectAttempts || 10;\n        settings.reconnectInterval = settings.reconnectInterval || 1000;\n\n        if (settings.inproc) {\n            this.transport = new InProcTransport(settings.inproc, logger.subLogger(\"inMemory\"));\n        } else if (settings.sharedWorker) {\n            this.transport = new SharedWorkerTransport(settings.sharedWorker, logger.subLogger(\"shared-worker\"));\n        } else if (settings.webPlatform) {\n            this.transport = new WebPlatformTransport(settings.webPlatform, logger.subLogger(\"web-platform\"), settings.identity);\n        } else if (settings.ws !== undefined) {\n            this.transport = new WS(settings, logger.subLogger(\"ws\"));\n        } else {\n            throw new Error(\"No connection information specified\");\n        }\n\n        this.isTrace = logger.canPublish(\"trace\");\n        logger.debug(`starting with ${this.transport.name()} transport`);\n\n        this.protocol = new GW3ProtocolImpl(this, settings, logger.subLogger(\"protocol\"));\n        const unsubConnectionChanged = this.transport.onConnectedChanged(\n\n            this.handleConnectionChanged.bind(this)\n        );\n        const unsubOnMessage = this.transport.onMessage(this.handleTransportMessage.bind(this));\n\n        this._transportSubscriptions.push(unsubConnectionChanged);\n        this._transportSubscriptions.push(unsubOnMessage);\n\n        this._defaultTransport = this.transport;\n    }\n\n    public async switchTransport(settings: Glue42Core.Connection.TransportSwitchSettings): Promise<{ success: boolean }> {\n\n        return this._sequelizer.enqueue<{ success: boolean }>(async () => {\n\n            if (!settings || typeof settings !== \"object\") {\n                throw new Error(\"Cannot switch transports, because the settings are missing or invalid.\");\n            }\n\n            if (typeof settings.type === \"undefined\") {\n                throw new Error(\"Cannot switch the transport, because the type is not defined\");\n            }\n\n            this.logger.trace(`Starting transport switch with settings: ${JSON.stringify(settings)}`);\n\n            const switchTargetTransport = settings.type === \"secondary\" ? this.getNewSecondaryTransport(settings) : this._defaultTransport;\n\n            this._targetTransport = switchTargetTransport;\n\n            this._targetAuth = settings.type === \"secondary\" ? this.getNewSecondaryAuth(settings) : this._defaultAuth;\n\n            const verifyPromise = this.verifyConnection();\n\n            this._swapTransport = true;\n            this._switchInProgress = true;\n\n            this.logger.trace(\"The new transport has been set, closing the current transport\");\n\n            await this.transport.close();\n\n            try {\n                await verifyPromise;\n\n                const isSwitchSuccess = this.transport === switchTargetTransport;\n\n                this.logger.info(`The reconnection after the switch was completed. Was the switch a success: ${isSwitchSuccess}`);\n\n                this._switchInProgress = false;\n\n                return { success: isSwitchSuccess };\n            } catch (error) {\n\n                this.logger.info(\"The reconnection after the switch timed out, reverting back to the default transport.\");\n\n                // this should not be awaited, so that it does not lock up the sequelizer\n                this.switchTransport({ type: \"default\" });\n\n                this._switchInProgress = false;\n\n                return { success: false };\n            }\n        });\n    }\n\n    public onLibReAnnounced(callback: (lib: { name: \"interop\" | \"contexts\" }) => void): UnsubscribeFunction {\n        return this.registry.add(\"libReAnnounced\", callback);\n    }\n\n    public setLibReAnnounced(lib: { name: \"interop\" | \"contexts\" }): void {\n        this.registry.execute(\"libReAnnounced\", lib);\n    }\n\n    public send(message: object, options?: Glue42Core.Connection.SendMessageOptions): Promise<void> {\n        // create a message using the protocol\n        if (\n            this.transport.sendObject &&\n            this.transport.isObjectBasedTransport\n        ) {\n            const msg = this.protocol.createObjectMessage(message);\n            if (this.isTrace) {\n                this.logger.trace(`>> ${JSON.stringify(msg)}`);\n            }\n            return this.transport.sendObject(msg, options);\n        } else {\n            const strMessage = this.protocol.createStringMessage(message);\n            if (this.isTrace) {\n                this.logger.trace(`>> ${strMessage}`);\n            }\n            return this.transport.send(strMessage, options);\n        }\n    }\n\n    public on<T>(\n        type: string,\n        messageHandler: (msg: T) => void\n    ): any {\n        type = type.toLowerCase();\n        if (this.messageHandlers[type] === undefined) {\n            this.messageHandlers[type] = {};\n        }\n\n        const id = this.ids++;\n        this.messageHandlers[type][id] = messageHandler;\n\n        return {\n            type,\n            id,\n        };\n    }\n\n    // Remove a handler\n    public off(info: { type: string; id: number }) {\n        delete this.messageHandlers[info.type.toLowerCase()][info.id];\n    }\n\n    public get isConnected() {\n        return this.protocol.isLoggedIn;\n    }\n\n    public connected(callback: (server: string) => void): () => void {\n        return this.protocol.loggedIn(() => {\n            const currentServer = this.transport.name();\n            callback(currentServer);\n        });\n    }\n\n    public disconnected(callback: () => void): () => void {\n        return this.registry.add(\"disconnected\", callback);\n    }\n\n    public async login(authRequest: Glue42Core.Auth, reconnect?: boolean): Promise<Identity> {\n\n        if (!this._defaultAuth) {\n            this._defaultAuth = authRequest;\n        }\n\n        if (this._swapTransport) {\n            this.logger.trace(\"Detected a transport swap, swapping transports\");\n            const newAuth = this.transportSwap();\n            authRequest = newAuth ?? authRequest;\n        }\n\n        this.logger.trace(`Starting login for transport: ${this.transport.name()} and auth ${JSON.stringify(authRequest)}`);\n\n        try {\n            // open the protocol in case it was closed by explicity logout\n            await this.transport.open();\n            this.logger.trace(`Transport: ${this.transport.name()} opened, logging in`);\n            timer(\"connection\").mark(\"transport-opened\");\n            const identity = await this.protocol.login(authRequest, reconnect);\n            this.logger.trace(`Logged in with identity: ${JSON.stringify(identity)}`);\n            timer(\"connection\").mark(\"protocol-logged-in\");\n            return identity;\n        } catch (error: any) {\n            if (this._switchInProgress) {\n                this.logger.trace(\"An error while logging in after a transport swap, preparing a default swap.\");\n                this.prepareDefaultSwap();\n            }\n\n            throw new Error(error);\n        }\n    }\n\n    public async logout() {\n        await this.protocol.logout();\n        await this.transport.close();\n    }\n\n    public loggedIn(callback: () => void) {\n        return this.protocol.loggedIn(callback);\n    }\n\n    public domain(\n        domain: string,\n        successMessages?: string[],\n        errorMessages?: string[]\n    ): Glue42Core.Connection.GW3DomainSession {\n        return this.protocol.domain(\n            domain,\n            this.logger.subLogger(`domain=${domain}`),\n            successMessages,\n            errorMessages\n        );\n    }\n\n    public authToken(): Promise<string> {\n        return this.protocol.authToken();\n    }\n\n    public reconnect(): Promise<void> {\n        return this.transport.reconnect();\n    }\n\n    private distributeMessage(message: object, type: string) {\n        // Retrieve handlers for the message type\n        const handlers = this.messageHandlers[type.toLowerCase()];\n        if (handlers !== undefined) {\n            // Execute them\n            Object.keys(handlers).forEach((handlerId) => {\n                const handler = handlers[handlerId];\n                if (handler !== undefined) {\n                    try {\n                        handler(message);\n                    } catch (error: any) {\n                        try {\n                            // logger might not be there yet\n                            this.logger.error(`Message handler failed with ${error.stack}`, error);\n                        } catch (loggerError) {\n                            // tslint:disable-next-line:no-console\n                            console.log(\"Message handler failed\", error);\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    private handleConnectionChanged(connected: boolean) {\n        if (this._connected === connected) {\n            return;\n        }\n        this._connected = connected;\n\n        if (connected) {\n\n            if (this.settings.replaySpecs && this.settings.replaySpecs.length) {\n                this.replayer = new MessageReplayerImpl(this.settings.replaySpecs);\n                this.replayer.init(this);\n            }\n\n            this.registry.execute(\"connected\");\n        } else {\n            this.registry.execute(\"disconnected\");\n        }\n    }\n\n    private handleTransportMessage(msg: string | object) {\n        let msgObj;\n        if (typeof msg === \"string\") {\n            msgObj = this.protocol.processStringMessage(msg);\n        } else {\n            msgObj = this.protocol.processObjectMessage(msg);\n        }\n\n        if (this.isTrace) {\n            this.logger.trace(`<< ${JSON.stringify(msgObj)}`);\n        }\n\n        this.distributeMessage(msgObj.msg, msgObj.msgType);\n    }\n\n    private verifyConnection(): Promise<void> {\n\n        return PromisePlus<void>((resolve) => {\n            // eslint-disable-next-line prefer-const\n            let unsub: UnsubscribeFunction;\n\n            const ready = waitForInvocations(2, () => {\n                if (unsub) {\n                    unsub();\n                }\n                resolve();\n            });\n\n            unsub = this.onLibReAnnounced((lib) => {\n                if (lib.name === \"interop\") {\n                    return ready();\n                }\n\n                if (lib.name === \"contexts\") {\n                    return ready();\n                }\n            });\n        }, 10000, \"Transport switch timed out waiting for all libraries to be re-announced\");\n    }\n\n    private getNewSecondaryTransport(settings: Glue42Core.Connection.TransportSwitchSettings): Transport {\n\n        if (!settings.transportConfig?.url) {\n            throw new Error(\"Missing secondary transport URL.\");\n        }\n\n        return new WS(Object.assign({}, this.settings, { ws: settings.transportConfig.url, reconnectAttempts: 1 }), this.logger.subLogger(\"ws-secondary\"));\n    }\n\n    private getNewSecondaryAuth(settings: Glue42Core.Connection.TransportSwitchSettings): Glue42Core.Auth {\n        if (!settings.transportConfig?.auth) {\n            throw new Error(\"Missing secondary transport auth information.\");\n        }\n\n        return settings.transportConfig.auth;\n    }\n\n    private transportSwap(): Glue42Core.Auth | undefined {\n        this._swapTransport = false;\n\n        if (!this._targetTransport || !this._targetAuth) {\n            this.logger.warn(`Error while switching transports - either the target transport or auth is not defined: transport defined -> ${!!this._defaultTransport}, auth defined -> ${!!this._targetAuth}. Staying on the current one.`);\n            return;\n        }\n\n        this._transportSubscriptions.forEach((unsub) => unsub());\n        this._transportSubscriptions = [];\n\n        this.transport = this._targetTransport;\n\n        const unsubConnectionChanged = this.transport.onConnectedChanged(\n            this.handleConnectionChanged.bind(this)\n        );\n\n        const unsubOnMessage = this.transport.onMessage(this.handleTransportMessage.bind(this));\n\n        this._transportSubscriptions.push(unsubConnectionChanged);\n        this._transportSubscriptions.push(unsubOnMessage);\n\n        return this._targetAuth;\n    }\n\n    private prepareDefaultSwap(): void {\n\n        this._transportSubscriptions.forEach((unsub) => unsub());\n        this._transportSubscriptions = [];\n\n        this.transport.close().catch((error) => this.logger.warn(`Error closing the ${this.transport.name()} transport after a failed connection attempt: ${JSON.stringify(error)}`));\n\n        this._targetTransport = this._defaultTransport;\n        this._targetAuth = this._defaultAuth;\n\n        this._swapTransport = true;\n    }\n}\n","import { Glue42Core } from \"../../glue\";\n\nconst order: Glue42Core.Logger.LogLevel[] = [\"trace\", \"debug\", \"info\", \"warn\", \"error\", \"off\"];\n\nexport class Logger implements Glue42Core.Logger.API {\n    public static Interop: Glue42Core.Interop.API;\n    public static InteropMethodName = \"T42.AppLogger.Log\";\n\n    public static Instance: string;\n    public readonly path: string;\n\n    private subLoggers: Logger[] = [];\n    private _consoleLevel: Glue42Core.Logger.LogLevel | undefined;\n    private _publishLevel: Glue42Core.Logger.LogLevel | undefined;\n    private loggerFullName: string;\n    private includeTimeAndLevel: boolean;\n    private logFn: Glue42Core.CustomLogger = console;\n    private customLogFn: boolean = false;\n\n    constructor(public readonly name: string, private parent?: Logger, logFn?: Glue42Core.CustomLogger) {\n        this.name = name;\n\n        if (parent) {\n            this.path = `${parent.path}.${name}`;\n        } else {\n            this.path = name;\n        }\n\n        this.loggerFullName = `[${this.path}]`;\n        this.includeTimeAndLevel = !logFn;\n        if (logFn) {\n            this.logFn = logFn;\n            this.customLogFn = true;\n        }\n    }\n\n    public subLogger(name: string): Logger {\n        // Check if the sub-logger is already created\n        const existingSub = this.subLoggers.filter((subLogger) => {\n            return subLogger.name === name;\n        })[0];\n\n        if (existingSub !== undefined) {\n            return existingSub;\n        }\n\n        // Check if the name isn't the same as one of the parent properties\n        Object.keys(this).forEach((key) => {\n            if (key === name) {\n                throw new Error(\"This sub logger name is not allowed.\");\n            }\n        });\n\n        const sub = new Logger(name, this, this.customLogFn ? this.logFn : undefined);\n\n        // add sub-logger to sub-loggers array\n        this.subLoggers.push(sub);\n\n        return sub;\n    }\n\n    public publishLevel(level?: Glue42Core.Logger.LogLevel): Glue42Core.Logger.LogLevel | undefined {\n        if (level) {\n            this._publishLevel = level;\n        }\n\n        return this._publishLevel || this.parent?.publishLevel();\n    }\n\n    public consoleLevel(level?: Glue42Core.Logger.LogLevel): Glue42Core.Logger.LogLevel | undefined {\n        if (level) {\n            this._consoleLevel = level;\n        }\n\n        return this._consoleLevel || this.parent?.consoleLevel();\n    }\n\n    public log(message: string, level?: Glue42Core.Logger.LogLevel, error?: Error) {\n        this.publishMessage(level || \"info\", message, error);\n    }\n\n    public trace(message: string) {\n        this.log(message, \"trace\");\n    }\n\n    public debug(message: string) {\n        this.log(message, \"debug\");\n    }\n\n    public info(message: string) {\n        this.log(message, \"info\");\n    }\n\n    public warn(message: string) {\n        this.log(message, \"warn\");\n    }\n\n    public error(message: string, err?: Error) {\n        this.log(message, \"error\");\n    }\n\n    public canPublish(level: Glue42Core.Logger.LogLevel, compareWith?: Glue42Core.Logger.LogLevel) {\n        const levelIdx = order.indexOf(level);\n        const restrictionIdx = order.indexOf(compareWith || this.consoleLevel() || \"trace\");\n\n        return levelIdx >= restrictionIdx;\n    }\n\n    private publishMessage(level: Glue42Core.Logger.LogLevel, message: string, error?: Error) {\n        // Retrieve logger name and levels\n        const loggerName = this.loggerFullName;\n\n        // Add stack trace if the message is an error\n        if (level === \"error\" && !error) {\n            const e = new Error();\n            if (e.stack) {\n                message =\n                    message +\n                    \"\\n\" +\n                    e.stack\n                        .split(\"\\n\")\n                        .slice(3)\n                        .join(\"\\n\");\n            }\n        }\n\n        if (this.canPublish(level, this.publishLevel())) {\n            const interop = Logger.Interop;\n            if (interop) {\n                try {\n                    if (interop.methods({ name: Logger.InteropMethodName }).length > 0) {\n                        interop.invoke(Logger.InteropMethodName, {\n                            msg: `${message}`,\n                            logger: loggerName,\n                            level\n                        });\n                    }\n                } catch {\n                    // interop might not be ready yet\n                }\n            }\n        }\n\n        // Publish in console\n        if (this.canPublish(level)) {\n            let prefix = \"\";\n            if (this.includeTimeAndLevel) {\n                const date = new Date();\n                const time = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}:${date.getMilliseconds()}`;\n                prefix = `[${time}] [${level}] `;\n            }\n            const toPrint = `${prefix}${loggerName}: ${message}`;\n            switch (level) {\n                case \"trace\":\n                    // tslint:disable-next-line:no-console\n                    this.logFn.debug(toPrint);\n                    break;\n                case \"debug\":\n                    // tslint:disable-next-line:no-console\n                    if (this.logFn.debug) {\n                        // tslint:disable-next-line:no-console\n                        this.logFn.debug(toPrint);\n                    } else {\n                        // tslint:disable-next-line:no-console\n                        this.logFn.log(toPrint);\n                    }\n                    break;\n                case \"info\":\n                    // tslint:disable-next-line:no-console\n                    this.logFn.info(toPrint);\n                    break;\n                case \"warn\":\n                    // tslint:disable-next-line:no-console\n                    this.logFn.warn(toPrint);\n                    break;\n                case \"error\":\n                    // tslint:disable-next-line:no-console\n                    this.logFn.error(toPrint, error);\n                    break;\n            }\n        }\n    }\n}\n","export const GW_MESSAGE_CREATE_CONTEXT = \"create-context\";\nexport const GW_MESSAGE_ACTIVITY_CREATED = \"created\";\nexport const GW_MESSAGE_ACTIVITY_DESTROYED = \"destroyed\";\nexport const GW_MESSAGE_CONTEXT_CREATED = \"context-created\";\nexport const GW_MESSAGE_CONTEXT_ADDED = \"context-added\";\n\nexport const GW_MESSAGE_SUBSCRIBE_CONTEXT = \"subscribe-context\";\nexport const GW_MESSAGE_SUBSCRIBED_CONTEXT = \"subscribed-context\";\nexport const GW_MESSAGE_UNSUBSCRIBE_CONTEXT = \"unsubscribe-context\";\n\nexport const GW_MESSAGE_DESTROY_CONTEXT = \"destroy-context\";\nexport const GW_MESSAGE_CONTEXT_DESTROYED = \"context-destroyed\";\n\nexport const GW_MESSAGE_UPDATE_CONTEXT = \"update-context\";\nexport const GW_MESSAGE_CONTEXT_UPDATED = \"context-updated\";\nexport const GW_MESSAGE_JOINED_ACTIVITY = \"joined\";\n","import { Glue42Core} from \"../../glue\";\n\nimport * as msg from \"./bridges/gw3/messages\";\n\nexport const ContextMessageReplaySpec: Glue42Core.Connection.MessageReplaySpec = {\n    get name(): string {\n        return \"context\";\n    },\n\n    get types(): string[] {\n        return [\n            msg.GW_MESSAGE_CREATE_CONTEXT,\n            msg.GW_MESSAGE_ACTIVITY_CREATED,\n            msg.GW_MESSAGE_ACTIVITY_DESTROYED,\n            msg.GW_MESSAGE_CONTEXT_CREATED,\n            msg.GW_MESSAGE_CONTEXT_ADDED,\n            msg.GW_MESSAGE_SUBSCRIBE_CONTEXT,\n            msg.GW_MESSAGE_SUBSCRIBED_CONTEXT,\n            msg.GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\n            msg.GW_MESSAGE_DESTROY_CONTEXT,\n            msg.GW_MESSAGE_CONTEXT_DESTROYED,\n            msg.GW_MESSAGE_UPDATE_CONTEXT,\n            msg.GW_MESSAGE_CONTEXT_UPDATED,\n            msg.GW_MESSAGE_JOINED_ACTIVITY\n        ];\n    }\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Glue42Core } from \"../glue\";\nimport { InternalConfig, GDStaringContext } from \"./types\";\nimport generate from \"shortid\";\nimport Utils from \"./utils/utils\";\nimport { ContextMessageReplaySpec } from \"./contexts/contextMessageReplaySpec\";\nimport { version as pjsonVersion } from \"../package.json\";\nimport { ConnectionSettings } from \"./connection/types\";\n\nexport default function (configuration: Glue42Core.Config, ext: Glue42Core.Extension, glue42gd: Glue42Core.GDObject | undefined): InternalConfig {\n\n    let nodeStartingContext: GDStaringContext;\n    if (Utils.isNode()) {\n        const startingContextString = process.env._GD_STARTING_CONTEXT_;\n        if (startingContextString) {\n            try {\n                nodeStartingContext = JSON.parse(startingContextString);\n            } catch {\n                // Do nothing - we will continue with the flow as if there is no starting context\n            }\n        }\n    }\n\n    function getConnection(): ConnectionSettings {\n\n        const gwConfig = configuration.gateway;\n\n        const protocolVersion = gwConfig?.protocolVersion ?? 3;\n        const reconnectInterval = gwConfig?.reconnectInterval;\n        const reconnectAttempts = gwConfig?.reconnectAttempts;\n\n        const defaultWs = \"ws://localhost:8385\";\n        let ws = gwConfig?.ws;\n        const sharedWorker = gwConfig?.sharedWorker;\n        const inproc = gwConfig?.inproc;\n        const webPlatform = gwConfig?.webPlatform ?? undefined;\n\n        // If running in GD use the injected ws URL\n        if (glue42gd) {\n            // GD3\n            ws = glue42gd.gwURL;\n        }\n        // if running in Node app, started from GD, use the ws from starting context\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwURL) {\n            ws = nodeStartingContext.gwURL;\n        }\n\n        // if nothing specified use default WS\n        if (!ws && !sharedWorker && !inproc) {\n            ws = defaultWs;\n        }\n\n        let instanceId: string | undefined;\n        let windowId: string | undefined;\n        let pid: number | undefined;\n        let environment: string | undefined;\n        let region: string | undefined;\n        const appName = getApplication();\n        let uniqueAppName = appName;\n        if (typeof glue42gd !== \"undefined\") {\n            windowId = glue42gd.windowId;\n            pid = glue42gd.pid;\n            if (glue42gd.env) {\n                environment = glue42gd.env.env;\n                region = glue42gd.env.region;\n            }\n            // G4E-1668\n            uniqueAppName = glue42gd.application ?? \"glue-app\";\n            instanceId = glue42gd.appInstanceId;\n        } else if (Utils.isNode()) {\n            pid = process.pid;\n            if (nodeStartingContext) {\n                environment = nodeStartingContext.env;\n                region = nodeStartingContext.region;\n                instanceId = nodeStartingContext.instanceId;\n            }\n        } else if (typeof window?.glue42electron !== \"undefined\") {\n            windowId = window?.glue42electron.instanceId;\n            pid = window?.glue42electron.pid;\n            environment = window?.glue42electron.env;\n            region = window?.glue42electron.region;\n            // G4E-1668\n            uniqueAppName = window?.glue42electron.application ?? \"glue-app\";\n            instanceId = window?.glue42electron.instanceId;\n        } else {\n            // this is the case where this is is running in Glue42 Core V2\n            // in this case the windowId of the identity is set by the WebTransport, because it needs to communicate with possible parents\n        }\n\n        // replay specs for core connection\n        const replaySpecs = configuration.gateway?.replaySpecs ?? [];\n        // inject Context message replay\n        replaySpecs.push(ContextMessageReplaySpec);\n\n        let identity = {\n            application: uniqueAppName,\n            applicationName: appName,\n            windowId,\n            instance: instanceId,\n            process: pid,\n            region,\n            environment,\n            api: ext.version || pjsonVersion\n        };\n\n        if (configuration.identity) {\n            identity = Object.assign(identity, configuration.identity);\n        }\n\n        return {\n            identity,\n            reconnectInterval,\n            ws,\n            sharedWorker,\n            webPlatform,\n            inproc,\n            protocolVersion,\n            reconnectAttempts,\n            replaySpecs,\n        };\n    }\n\n    function getContexts(): boolean | Glue42Core.ContextsConfig {\n\n        if (typeof configuration.contexts === \"undefined\") {\n            return { reAnnounceKnownContexts: true };\n        }\n\n        if (typeof configuration.contexts === \"boolean\" && configuration.contexts) {\n            return { reAnnounceKnownContexts: true };\n        }\n\n        if (typeof configuration.contexts === \"object\") {\n            return Object.assign({}, { reAnnounceKnownContexts: true }, configuration.contexts);\n        }\n\n        return false;\n    }\n\n    function getApplication() {\n        if (configuration.application) {\n            return configuration.application;\n        }\n\n        if (glue42gd) {\n            return glue42gd.applicationName;\n        }\n\n        if (typeof window !== \"undefined\" && typeof (window as any).glue42electron !== \"undefined\") {\n            return (window as any).glue42electron.application;\n        }\n\n        const uid = generate();\n        if (Utils.isNode()) {\n            if (nodeStartingContext) {\n                return nodeStartingContext.applicationConfig.name;\n            }\n\n            return \"NodeJS\" + uid;\n        }\n\n        if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\n            return document.title + ` (${uid})`;\n        }\n\n        return uid;\n    }\n\n    function getAuth(): Glue42Core.Auth | undefined {\n        if (typeof configuration.auth === \"string\") {\n            return {\n                token: configuration.auth\n            };\n        }\n\n        if (configuration.auth) {\n            return configuration.auth;\n        }\n\n        if (Utils.isNode() && nodeStartingContext && nodeStartingContext.gwToken) {\n            return {\n                gatewayToken: nodeStartingContext.gwToken\n            };\n        }\n\n        if (configuration.gateway?.webPlatform || configuration.gateway?.inproc || configuration.gateway?.sharedWorker) {\n            return {\n                username: \"glue42\", password: \"glue42\"\n            };\n        }\n    }\n\n    function getLogger(): { console: Glue42Core.Logger.LogLevel; publish: Glue42Core.Logger.LogLevel } {\n        let config = configuration.logger;\n        const defaultLevel = \"warn\";\n        if (!config) {\n            config = defaultLevel;\n        }\n\n        // console level can be overridden by a gd setting\n        let gdConsoleLevel: Glue42Core.Logger.LogLevel | undefined;\n        if (glue42gd) {\n            gdConsoleLevel = glue42gd.consoleLogLevel;\n        }\n\n        if (typeof config === \"string\") {\n            return { console: gdConsoleLevel ?? config, publish: defaultLevel };\n        }\n\n        return {\n            console: gdConsoleLevel ?? config.console ?? defaultLevel,\n            publish: config.publish ?? defaultLevel\n        };\n    }\n\n    const connection = getConnection();\n    let application: string = getApplication();\n    if (typeof window !== \"undefined\") {\n        const windowAsAny = window as any;\n        const containerApplication = windowAsAny.htmlContainer ?\n            `${windowAsAny.htmlContainer.containerName}.${windowAsAny.htmlContainer.application}` :\n            windowAsAny?.glue42gd?.application;\n        if (containerApplication) {\n            application = containerApplication;\n        }\n    }\n\n    return {\n        bus: configuration.bus ?? false,\n        application,\n        auth: getAuth(),\n        logger: getLogger(),\n        connection,\n        metrics: configuration.metrics ?? true,\n        contexts: getContexts(),\n        version: ext.version || pjsonVersion,\n        libs: ext.libs ?? [],\n        customLogger: configuration.customLogger\n    };\n}\n","import { Glue42Core } from \"../../../../glue\";\nimport { ContextSubscriptionKey } from \"../types\";\n\nexport class GW3ContextData {\n    // invariants:\n    // - at least one of { isAnnounced, hasCallbacks() } must be truthy\n    //     (so no state (0) instances are kept)\n    // - name is defined\n    // - isAnnounced cannot go from true to false\n    // - !isAnnounced => activityId === undefined\n    // - !isAnnounced => contextId === undefined\n    // - isAnnounced => contextId !== undefined\n    // - !isAnnounced => context == {}\n    // - !isAnnounced => !joinedActivity\n    // - activityId === undefined => !joinedActivity\n    // - joinedActivity => activityId !== undefined !\n    // - activityId != undefined => name === activityId\n    // - !isAnnounced => sentExplicitSubscription === false\n    // - !hasCallbacks => sentExplicitSubscription === false\n    // - context is defaulted to {}, not null or undefined\n\n    // the name of this context; it's what our clients use to (un)subscribe\n    // to it; for an activity context it's the same as activityId\n    public name: string;\n\n    // the id of the context as assigned by the GW; only known after it has\n    // been announced\n    public contextId: string | undefined;\n\n    // since GW3 only sends a snapshot on subscription/activity creation,\n    // we need to keep track of the context state ourselves, for the sake\n    // of any additional subsequent subscribers (i.e. so we can give them\n    // the context snapshot so far)\n    public context: {};\n\n    // has the context been announced by the GW?\n    public isAnnounced: boolean;\n\n    public joinedActivity: boolean | undefined;\n\n    // callbacks to invoke on context update\n    public updateCallbacks: { [index: number]: (data: any, delta: any, removed: string[], key: ContextSubscriptionKey, extraData?: any) => void } = {};\n\n    // iff activity context, the id of the activity to which it belongs\n    public activityId: string | undefined;\n\n    public sentExplicitSubscription: boolean | undefined;\n\n    public hasReceivedSnapshot: boolean | undefined;\n\n    constructor(contextId: string | undefined, name: string, isAnnounced: boolean, activityId?: string) {\n        this.contextId = contextId;\n        this.name = name;\n        this.isAnnounced = isAnnounced;\n        this.activityId = activityId;\n        this.context = {};\n    }\n\n    public hasCallbacks() {\n        return Object.keys(this.updateCallbacks).length > 0;\n    }\n\n    // for reference only\n    // should never return 0\n    public getState(): number {\n        if (this.isAnnounced && this.hasCallbacks()) {\n            return 3;\n        }\n\n        if (this.isAnnounced) {\n            return 2;\n        }\n\n        if (this.hasCallbacks()) {\n            return 1;\n        }\n\n        return 0;\n    }\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ContextDelta } from \"./bridges/types\";\nimport { Logger } from \"../logger/logger\";\nimport cloneDeep from \"lodash.clonedeep\";\n\nexport function applyContextDelta(\n    context: any,\n    delta: ContextDelta,\n    logger: Logger) {\n\n    try {\n        if (logger?.canPublish(\"trace\")) {\n            logger?.trace(`applying context delta ${JSON.stringify(delta)} on context ${JSON.stringify(context)}`);\n        }\n        if (!delta) {\n            return context;\n        }\n\n        if (delta.reset) {\n            context = { ...delta.reset };\n            return context;\n        }\n\n        context = deepClone(context, undefined);\n\n        if (delta.commands) {\n            for (const command of delta.commands) {\n                if (command.type === \"remove\") {\n                    deletePath(context, command.path);\n                } else if (command.type === \"set\") {\n                    setValueToPath(context, command.value, command.path);\n                }\n            }\n            // if there is a commands property ignore the rest (v1 added/updated/removed)\n            return context;\n        }\n\n        const added = delta.added;\n        const updated = delta.updated;\n        const removed = delta.removed;\n\n        if (added) {\n            Object.keys(added).forEach((key) => {\n                context[key] = added[key];\n            });\n        }\n\n        if (updated) {\n            Object.keys(updated).forEach((key) => {\n                mergeObjectsProperties(key, context, updated);\n            });\n        }\n\n        if (removed) {\n            removed.forEach((key) => {\n                delete context[key];\n            });\n        }\n\n        return context;\n    } catch (e: any) {\n        logger?.error(`error applying context delta ${JSON.stringify(delta)} on context ${JSON.stringify(context)}`, e);\n        return context;\n    }\n}\n\n// https://stackoverflow.com/a/40294058/1527706\nexport function deepClone(obj: any, hash?: WeakMap<any, any>): any {\n    // G4E-6362 - switched to lodash on 2023-07-03, vnikolov\n    return cloneDeep(obj);\n}\n\n/*\nmergeObjectsProperties(\n    \"a\",\n    { a: { b: { c: 1, e: 1 }, x: { y: 1 }, foo: { moo: \"bar\" } } },\n    { a: { b: { d: 1, e: 2 }, foo: \"bar\" } });\n\n    => { a: { b: { c: 1, e: 2 } }, x: { y: 1 }, foo: \"bar\" }\n*/\n\nconst mergeObjectsProperties = (key: string, what: any, withWhat: any) => {\n\n    const right = withWhat[key];\n\n    if (right === undefined) {\n        return what;\n    }\n\n    const left = what[key];\n\n    if (!left || !right) {\n        what[key] = right;\n        return what;\n    }\n\n    if (typeof left === \"string\" ||\n        typeof left === \"number\" ||\n        typeof left === \"boolean\" ||\n        typeof right === \"string\" ||\n        typeof right === \"number\" ||\n        typeof right === \"boolean\" ||\n        Array.isArray(left) ||\n        Array.isArray(right)) {\n        what[key] = right;\n        return what;\n    }\n\n    what[key] = Object.assign({}, left, right);\n\n    return what;\n};\n\n// https://stackoverflow.com/a/6713782/1527706\nexport function deepEqual(x: any, y: any) {\n    if (x === y) {\n        return true;\n    }\n    // if both x and y are null or undefined and exactly the same\n\n    if (!(x instanceof Object) || !(y instanceof Object)) {\n        return false;\n    }\n    // if they are not strictly equal, they both need to be Objects\n\n    if (x.constructor !== y.constructor) {\n        return false;\n    }\n    // they must have the exact same prototype chain, the closest we can do is\n    // test there constructor.\n\n    for (const p in x) {\n        if (!x.hasOwnProperty(p)) {\n            continue;\n        }\n        // other properties were tested using x.constructor === y.constructor\n\n        if (!y.hasOwnProperty(p)) {\n            return false;\n        }\n        // allows to compare x[ p ] and y[ p ] when set to undefined\n\n        if (x[p] === y[p]) {\n            continue;\n        }\n        // if they have the same strict value or identity then they are equal\n\n        if (typeof (x[p]) !== \"object\") {\n            return false;\n        }\n        // Numbers, Strings, Functions, Booleans must be strictly equal\n\n        if (!deepEqual(x[p], y[p])) {\n            return false;\n        }\n        // Objects and Arrays must be tested recursively\n    }\n\n    for (const p in y) {\n        if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {\n            return false;\n        }\n        // allows x[ p ] to be set to undefined\n    }\n\n    return true;\n}\n\nexport function setValueToPath(obj: any, value: any, path: string) {\n    const pathArr = path.split(\".\");\n    let i;\n    for (i = 0; i < pathArr.length - 1; i++) {\n        if (!obj[pathArr[i]]) {\n            // path does not exist, create empty object\n            obj[pathArr[i]] = {};\n        }\n        if (typeof obj[pathArr[i]] !== \"object\") {\n            // handle the case where we have {a: 1} and we call set({a: {aa: 2}})\n            obj[pathArr[i]] = {};\n        }\n        obj = obj[pathArr[i]];\n    }\n    obj[pathArr[i]] = value;\n}\n\nexport function isSubset(superObj: any, subObj: any): boolean {\n    return Object.keys(subObj).every((ele) => {\n        if (typeof subObj[ele] === \"object\") {\n            return isSubset(superObj?.[ele] || {}, subObj[ele] || {});\n        }\n        return subObj[ele] === superObj?.[ele];\n    });\n}\n\nfunction deletePath(obj: any, path: string) {\n    const pathArr = path.split(\".\");\n    let i;\n    for (i = 0; i < pathArr.length - 1; i++) {\n        if (!obj[pathArr[i]]) {\n            // path does not exist, we're not removing anything\n            return;\n        }\n        obj = obj[pathArr[i]];\n    }\n    delete obj[pathArr[i]];\n}\n","/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Glue42Core } from \"../../../../glue\";\nimport { ContextBridge } from \"../../contextBridge\";\nimport { GW3ContextData as ContextData } from \"./contextData\";\nimport { applyContextDelta, deepEqual, deepClone, setValueToPath } from \"../../helpers\";\nimport * as msg from \"./messages\";\nimport { ContextMessage } from \"./contextMessage\";\nimport { ContextMessageReplaySpec } from \"../../contextMessageReplaySpec\";\nimport { Logger } from \"../../../logger/logger\";\nimport Connection from \"../../../connection/connection\";\nimport { ContextsConfig } from \"../../contextsModule\";\nimport { ContextName, ContextSubscriptionKey, ContextDelta, ContextDeltaCommand } from \"../types\";\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n// GW3Bridge implementation notes\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// ===========================\n// Terminology used\n// ===========================\n//\n// - gw-subscribe (verb):\n//      send SUBSCRIBE CONTEXT to GW se we see CONTEXT UPDATED messages,\n//      or\n//      get implicitly subscribed as consequence of joining activity\n//      sending the SUBSCRIBE CONTEXT message is done internally by this\n//      class whenever a ContextData item in _contextNameToData reaches\n//      state (3) (see 'States of a context' in gw3ContextData.ts)\n// - bridge-subscribe (verb):\n//      call gw3Bridge.subscribe method; we need to make sure we've\n//      gw-subscribed if/as soon as the target context is announced\n//      this is what consumers of this class do\n// - bridge-subscription (noun):\n//      the result of bridge-subscribe, and the state of having a handler\n//      subscribed to a context\n// - active subscription: bridge-subscription which will cause the handler\n//      to observe context changes until someone calls unsubscribe() here\n//      or the subscription becomes 'inactive'\n// - inactive subscription: bridge-subscription which will NOT cause the\n//      handler to observe context changes; this happens to\n//      bridge-subscriptions on activity contexts if we leave the activity.\n//      There is NO way to check if a subscription is active or not and it's\n//      not reflected in the contextData state.\n//\n// ===========================\n// General information\n// ===========================\n//\n// This class exposes the GW context subscription and updating features\n// using the subscribe/unsubscribe/update/createContext methods.\n//\n// The main logic is related to tracking the states of contexts (shared or\n// activity), represented by ContextData entries in _contextNameToData, and\n// reacting to gateway messages accordingly.\n//\n// ===========================\n// States of an ContextData object\n// ===========================\n//\n// (0) nothing (not defined, or deleted) - such entries are NOT kept in collections\n// (1) unknown but bridge-subscribed to\n// (2) announced but not bridge-subscribed to\n// (3) both announced and bridge-subscribed to (so also gw-subscribed)\n//\n//       sub/unsub   GW ann\n//      +-------->(1)-----+\n//      |                 |\n//      |                 |\n//      V       destroy   v\n// *-->(0)<--------------(3)\n//      |^---------+      ^\n//      |  destroy |      |\n//      |          |      |\n//      +-------->(2)<----+\n//        GW ann    subscribe/unsub\n//\n// You can look for the states and transitions in the code below, e.g.\n// (0) -> (1)\n//\n// Note: if it's not our activity context, we need to gw-(un)subscribe to the\n// GW update messages on certain transitions:\n// - on changes from { (1), (2) } -> (3) we send a subscribe message\n// - on changes from (3) -> (2) we send an unsubscribe message\n// - on destruction, we drop all the information about the context; let\n// anyone subscribe to it and create a new contextData in state (1), we don't\n// care - these subscriptions are inactive from the get go, since the context\n// can't be created again.\n//\n// The contextData also contains the current snapshot of the context if it's\n// currently gw-subscribed to (so states (2\"') and (3) below).\n//\n// Note: We're mostly going to the trouble of keeping unannounced contexts\n// (state (1)) in order to allow other GW message subscribers to see a new\n// context being created and subscribe to it before the message has reached\n// our handler. Also, only sending a CONTEXT SUBSCRIBE on state (3) instead\n// of on GW announce means no unnecessary updates are being distributed to\n// every instance of this library.\n//\n// Also, in the HC subscribing to an unknown context is OK as well so we're\n// keeping this behavior.\n//\n// Note: above is an abridged version of the state machine; states (2) and (3)\n// have three substates depending on whether the context is a global context,\n// our own activity context, or a foreign activity's context. Subscription\n// messages are only sent on { (1), (2'), (2\") } -> { (3'), (3\") }, with the\n// unsubscribe message sent on { (3'), (3\"), (3\"') } -> { (1), (2'), (2\") }\n// if a  subscribe was sent previously (so we'll send a final unsubscribe if\n// we subscribe to a foreign activity's context, then join the activity, then\n// unsubscribe - this is to avoid still potentially receiving unwanted updates\n// if we leave the activity).\n//\n// Full state diagram (not showing 'destroy' transitions):\n//\n//        join activity\n//      +------------------>(3\"')<------+\n//      |                    ^          |\n//      |                    | join     |\n//      |                    | activity |\n//      | activity created   |          |\n//      +------------------>(3\")<----+  |\n//      |                            |  |\n//      | global ctx ann             |  |\n//      +------------------>(3')<-+  |  |\n//      |                         |  |  |\n//      |                         |  |  |\n//     (1)                        |  |  |\n//      ^                         |  |  |\n//      | bridge-(un)subscribe   bridge-(un)subscribe\n//      |                         |  |  |\n//      V                         |  |  |\n// *-->(0)                        |  |  |\n//      |                         |  |  |\n//      | global ctx ann          |  |  |\n//      +------------------>(2')<-+  |  |\n//      |                            |  |\n//      | activity created           |  |\n//      +------------------>(2\")<----+  |\n//      |                    |          |\n//      |                    | join     |\n//      |                    | activity |\n//      | join activity      V          |\n//      +------------------>(2\"')<------+\n//\n// ===========================\n// Supported use cases\n// ===========================\n//\n// - bridge-(un)subscribe to shared context by name\n// - bridge-(un)subscribe to activity context for activity we ARE a member of\n//      - the context name is the activity id\n//      - here the subscriptions become inactive if we leave the activity\n//      - HOWEVER these subscriptions will become inactive if we leave the\n//      activity, and any further subscriptions to the activity's context\n//      will be inactive.\n//          The protocol provides no way for us to know other than through\n//      the LEAVE ACTIVITY success message which is sent by our peer and we\n//      can't observe it here, so we have no way to know to send an explicit\n//      subscription in order to reactivate the bridge-subscription.\n//          We could deal with this by extending the GW connection to allow\n//      us to inspect outgoing messages and react to the LEAVE ACTIVITY, but\n//      keeping a few stale objects around isn't worth the code complexity.\n//          This transition would be represented by (2\"') -> (2\") and\n//      (3\"') -> (3\") in the state diagram, where (3\"') -> (3\") would prompt\n//      a subscribe message.\n// - bridge-(un)subscribe to context of activity we're NOT in\n//      - the context name is the activity id\n//      - the subscription will stay active even if we join the activity later\n//      - again, these subscriptions will become inactive if we leave the\n//      activity\n//\n// Also note that unsubscribing from destroyed contexts is not required,\n// as the data is cleared up automatically (but it doesn't hurt).\n// Unsubscriptions are guaranteed to be safe and idempotent.\nexport class GW3Bridge implements ContextBridge {\n    private _logger: Logger;\n    private _connection: Connection;\n    private _trackAllContexts: boolean | undefined;\n    private _reAnnounceKnownContexts: boolean | undefined;\n    // used for sending messages as it provides a promise-based interface\n    private _gw3Session: Glue42Core.Connection.GW3DomainSession;\n\n    // contexts in state { (1), (2), (3) }\n    private _contextNameToData: { [contextName: string]: ContextData } = {};\n\n    // for disposing purposes only\n    private _gw3Subscriptions: any[] = [];\n\n    // increment for every bridge-subscribe; used to unsubscribe()\n    private _nextCallbackSubscriptionNumber = 0;\n\n    // since some operations fall back to creating a new context if\n    // the requested one doesn't already exist, we use this map to\n    // serialize them by waiting for the context to be created, in\n    // order to avoid losing updates\n    private _creationPromises: { [contextName: string]: Promise<string> } = {};\n\n    // mapping announced contexts' name <-> id\n    private _contextNameToId: { [contextName: string]: string } = {};\n    private _contextIdToName: { [contextId: string]: string } = {};\n    private _protocolVersion?: number = undefined;\n\n    private _contextsTempCache: { [contextName: string]: any } = {};\n    private _contextsSubscriptionsCache: { contextName: string; subKey: ContextSubscriptionKey; callback: (data: any, delta: any, removed: string[], key: ContextSubscriptionKey, extraData?: any) => void }[] = [];\n    private _systemContextsSubKey: number | undefined;\n\n    private get protocolVersion(): number {\n        if (!this._protocolVersion) {\n            const contextsDomainInfo = this._connection.availableDomains.find((d) => d.uri === \"context\");\n            this._protocolVersion = contextsDomainInfo?.version ?? 1;\n        }\n        return this._protocolVersion;\n    }\n\n    public get setPathSupported() {\n        return this.protocolVersion >= 2;\n    }\n\n    public constructor(config: ContextsConfig) {\n        this._connection = config.connection;\n        this._logger = config.logger;\n        this._trackAllContexts = config.trackAllContexts;\n        this._reAnnounceKnownContexts = config.reAnnounceKnownContexts;\n        this._gw3Session = this._connection.domain(\n            \"global\",\n            [\n                msg.GW_MESSAGE_CONTEXT_CREATED,\n                msg.GW_MESSAGE_SUBSCRIBED_CONTEXT,\n                msg.GW_MESSAGE_CONTEXT_DESTROYED,\n                msg.GW_MESSAGE_CONTEXT_UPDATED,\n            ]);\n\n        this._gw3Session.disconnected(this.resetState.bind(this));\n\n        this._gw3Session.onJoined((wasReconnect) => {\n            if (!wasReconnect) {\n                return;\n            }\n\n            if (!this._reAnnounceKnownContexts) {\n                return this._connection.setLibReAnnounced({ name: \"contexts\" });\n            }\n\n            this.reInitiateState().then(() => this._connection.setLibReAnnounced({ name: \"contexts\" }));\n        });\n\n        // TODO: logging, validation and error handling\n\n        this.subscribeToContextCreatedMessages();\n\n        this.subscribeToContextUpdatedMessages();\n\n        this.subscribeToContextDestroyedMessages();\n\n        this._connection.replayer?.drain(\n            ContextMessageReplaySpec.name,\n            (message) => {\n                const type = (message as any).type;\n                if (!type) {\n                    return;\n                }\n\n                if (type === msg.GW_MESSAGE_CONTEXT_CREATED ||\n                    type === msg.GW_MESSAGE_CONTEXT_ADDED ||\n                    type === msg.GW_MESSAGE_ACTIVITY_CREATED) {\n                    this.handleContextCreatedMessage(message as ContextMessage);\n                } else if (type === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT ||\n                    type === msg.GW_MESSAGE_CONTEXT_UPDATED ||\n                    type === msg.GW_MESSAGE_JOINED_ACTIVITY) {\n                    this.handleContextUpdatedMessage(message as ContextMessage);\n                } else if (type === msg.GW_MESSAGE_CONTEXT_DESTROYED ||\n                    type === msg.GW_MESSAGE_ACTIVITY_DESTROYED) {\n                    this.handleContextDestroyedMessage(message as ContextMessage);\n                }\n            });\n    }\n\n    public dispose(): void {\n        for (const sub of this._gw3Subscriptions) {\n            this._connection.off(sub);\n        }\n        this._gw3Subscriptions.length = 0;\n        for (const contextName in this._contextNameToData) {\n            if (this._contextNameToId.hasOwnProperty(contextName)) {\n                delete this._contextNameToData[contextName];\n            }\n        }\n    }\n\n    public createContext(name: ContextName, data: any): Promise<string> {\n\n        if (name in this._creationPromises) {\n            return this._creationPromises[name];\n        }\n\n        this._creationPromises[name] =\n            this._gw3Session\n            .send<ContextMessage>({\n                type: msg.GW_MESSAGE_CREATE_CONTEXT,\n                domain: \"global\",\n                name,\n                data,\n                lifetime: \"retained\",\n            })\n            .then((createContextMsg: ContextMessage) => {\n                this._contextNameToId[name] = createContextMsg.context_id;\n                this._contextIdToName[createContextMsg.context_id] = name;\n                const contextData = this._contextNameToData[name] || new ContextData(createContextMsg.context_id, name, true, undefined);\n                contextData.isAnnounced = true;\n                contextData.name = name;\n                contextData.contextId = createContextMsg.context_id;\n                contextData.context = createContextMsg.data || deepClone(data);\n                contextData.hasReceivedSnapshot = true;\n                this._contextNameToData[name] = contextData;\n\n                delete this._creationPromises[name];\n                return createContextMsg.context_id;\n            });\n\n        return this._creationPromises[name];\n\n    }\n\n    public all(): ContextName[] {\n        return Object.keys(this._contextNameToData)\n            .filter((name) => this._contextNameToData[name].isAnnounced);\n    }\n\n    public async update(name: ContextName, delta: any): Promise<void> {\n\n        // - send context update message\n        //\n        // - on success, apply delta to context currently in contextData\n\n        // should we implicitly create the context?\n\n        // avoid keeping a reference to the same object as the client code\n        // to avoid them mutating our state - applyDelta will simply stick\n        // some of delta's properties on the internal context object so this\n        // makes sure they're new objects\n        if (delta) {\n            delta = deepClone(delta);\n        }\n\n        // NB: await always causes a context switch, even if the promise is undefined\n        if (name in this._creationPromises) {\n            await this._creationPromises[name];\n        }\n\n        const contextData = this._contextNameToData[name];\n\n        if (!contextData || !contextData.isAnnounced) {\n            return this.createContext(name, delta) as any as Promise<void>;\n        }\n\n        let currentContext = contextData.context;\n        if (!contextData.hasCallbacks()) {\n            // fetch data since haven't subscribed to this context yet\n            currentContext = await this.get(contextData.name);\n        }\n\n        const calculatedDelta =\n            this.protocolVersion === 2 ?\n                this.calculateContextDeltaV2(currentContext, delta) :\n                this.calculateContextDeltaV1(currentContext, delta);\n\n        if (!Object.keys(calculatedDelta.added).length\n            && !Object.keys(calculatedDelta.updated).length\n            && !calculatedDelta.removed.length\n            && !calculatedDelta.commands?.length) {\n            return Promise.resolve();\n        }\n\n        return this._gw3Session\n            .send({\n                type: msg.GW_MESSAGE_UPDATE_CONTEXT,\n                domain: \"global\",\n                context_id: contextData.contextId,\n                delta: calculatedDelta,\n            }, {}, { skipPeerId: false })\n            .then((gwResponse: any) => {\n                this.handleUpdated(contextData, calculatedDelta, {\n                    updaterId: gwResponse.peer_id\n                });\n            });\n    }\n\n    public async set(name: ContextName, data: any): Promise<void> {\n\n        // avoid keeping a reference to the same object as the client code\n        // to avoid them mutating our state\n        if (data) {\n            data = deepClone(data);\n        }\n\n        // NB: await always causes a context switch, even if the promise is undefined\n        if (name in this._creationPromises) {\n            await this._creationPromises[name];\n        }\n\n        const contextData = this._contextNameToData[name];\n\n        if (!contextData || !contextData.isAnnounced) {\n            return this.createContext(name, data) as any as Promise<void>;\n        }\n\n        // SBGW_D-194\n        return this._gw3Session\n            .send({\n                type: msg.GW_MESSAGE_UPDATE_CONTEXT,\n                domain: \"global\",\n                context_id: contextData.contextId,\n                delta: { reset: data },\n            }, {}, { skipPeerId: false })\n            .then((gwResponse: any) => {\n                this.handleUpdated(\n                    contextData,\n                    {\n                        reset: data,\n                        added: {},\n                        removed: [],\n                        updated: {}\n                   },\n                   {\n                        updaterId: gwResponse.peer_id\n                   });\n            });\n    }\n\n    public setPath(name: ContextName, path: string, value: any): Promise<void> {\n        if (!this.setPathSupported) {\n            return Promise.reject(\"glue.contexts.setPath operation is not supported, use Glue42 3.10 or later\");\n        }\n        return this.setPaths(name, [{ path, value }]);\n    }\n\n    public async setPaths(name: ContextName, pathValues: Glue42Core.Contexts.PathValue[]): Promise<void> {\n        if (!this.setPathSupported) {\n            return Promise.reject(\"glue.contexts.setPaths operation is not supported, use Glue42 3.10 or later\");\n        }\n\n        // avoid keeping a reference to the same object as the client code\n        // to avoid them mutating our state\n        if (pathValues) {\n            pathValues = deepClone(pathValues);\n        }\n\n        // NB: await always causes a context switch, even if the promise is undefined\n        if (name in this._creationPromises) {\n            await this._creationPromises[name];\n        }\n\n        const contextData = this._contextNameToData[name];\n\n        if (!contextData || !contextData.isAnnounced) {\n            const obj = {};\n            for (const pathValue of pathValues) {\n                setValueToPath(obj, pathValue.value, pathValue.path);\n            }\n\n            return this.createContext(name, obj) as any as Promise<void>;\n        }\n\n        const commands: ContextDeltaCommand[] = [];\n        for (const pathValue of pathValues) {\n            if (pathValue.value === null) {\n                commands.push({ type: \"remove\", path: pathValue.path });\n            } else {\n                commands.push({ type: \"set\", path: pathValue.path, value: pathValue.value });\n            }\n        }\n        return this._gw3Session\n            .send({\n                type: msg.GW_MESSAGE_UPDATE_CONTEXT,\n                domain: \"global\",\n                context_id: contextData.contextId,\n                delta: { commands }\n            }, {}, { skipPeerId: false })\n            .then((gwResponse: any) => {\n                this.handleUpdated(\n                    contextData,\n                    {\n                        added: {},\n                        removed: [],\n                        updated: {},\n                        commands\n                    },\n                    {\n                        updaterId: gwResponse.peer_id\n                    });\n            });\n    }\n\n    /**\n     * Return a context's data asynchronously\n     */\n    public async get(name: ContextName): Promise<any> {\n\n        // NB: await always causes a context switch, even if the promise is undefined\n        if (name in this._creationPromises) {\n            await this._creationPromises[name];\n        }\n\n        const contextData = this._contextNameToData[name];\n        // Three cases here:\n        // 1) The context does not exist and is not announced by the GW -> return {}\n        // 2) The context exists but we don't track it -> subscribe and return the object when we get the subscription result from GW\n        // 3) The context exists and we're tracking it -> just return the last state we have\n\n        // 1)\n        if (!contextData || !contextData.isAnnounced) {\n            return Promise.resolve({});\n        }\n\n        // 2)\n        if (contextData && (!contextData.hasCallbacks() || !contextData.hasReceivedSnapshot)) {\n            return new Promise<any>((resolve) => {\n                this.subscribe(name, (data: any, _d: any, _r: string[], un: ContextSubscriptionKey) => {\n                    this.unsubscribe(un);\n                    resolve(data);\n                });\n            });\n        }\n\n        // 3)\n        const context = contextData?.context ?? {};\n        return Promise.resolve(deepClone(context));\n    }\n\n    /**\n     * Creates a subscription to a given context which may or may not exist/be\n     * announced as of yet.\n     *\n     * NB: This method publishes an initial snapshot on subscription. Note that\n     * at this point the method itself may not have returned and the returned\n     * ContextSubscriptionKey is not saved in the return variable; if you want\n     * to unsubscribe from within the subscription callback, use the key argument\n     * of the callback.\n     */\n    public async subscribe(\n        name: ContextName,\n        callback: (\n            data: any,\n            delta: any,\n            removed: string[],\n            key: ContextSubscriptionKey,\n            extraData?: any) => void,\n        subscriptionKey?: ContextSubscriptionKey)\n        : Promise<ContextSubscriptionKey> {\n\n        // NB: await always causes a context switch, even if the promise is undefined\n        if (name in this._creationPromises) {\n            await this._creationPromises[name];\n        }\n\n        // - populate contextData's updateCallbacks with new entry\n        //\n        // - examine contextData and determine if we need to send a subscribe\n        //\n        // - if the context is announced, ensure handler gets snapshot\n\n        const thisCallbackSubscriptionNumber = typeof subscriptionKey === \"undefined\" ? this._nextCallbackSubscriptionNumber : subscriptionKey;\n\n        if (typeof subscriptionKey === \"undefined\") {\n            this._nextCallbackSubscriptionNumber += 1;\n        }\n\n        if (this._contextsSubscriptionsCache.every((subscription) => subscription.subKey !== this._nextCallbackSubscriptionNumber)) {\n            // this cache is used to re-initiate all known subscriptions when the connection is re-established\n            this._contextsSubscriptionsCache.push({ contextName: name, subKey: thisCallbackSubscriptionNumber, callback });\n        }\n\n        let contextData = this._contextNameToData[name];\n\n        if (!contextData ||\n            !contextData.isAnnounced) {\n            // (0) -> (1)\n            contextData = contextData || new ContextData(undefined, name, false, undefined);\n            this._contextNameToData[name] = contextData;\n            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\n\n            // this will end up in handleContextUpdate which will cause a snapshot to get sent\n            // return this.createContext(name, {})\n            // \t.then(() => thisCallbackSubscriptionNumber);\n            return Promise.resolve(thisCallbackSubscriptionNumber);\n        }\n\n        const hadCallbacks = contextData.hasCallbacks();\n\n        contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\n\n        if (!hadCallbacks) {\n            // first subscriber: (2) -> (3)\n\n            if (!contextData.joinedActivity) {\n\n                // if we've created the context ourselves using\n                // createContext\n                if (contextData.context && contextData.sentExplicitSubscription) {\n                    if (contextData.hasReceivedSnapshot) {\n                        const clone = deepClone(contextData.context);\n                        callback(clone, clone, [], thisCallbackSubscriptionNumber);\n                    }\n                    return Promise.resolve(thisCallbackSubscriptionNumber);\n                }\n\n                // (2') -> (3') or (2\") -> (3\")\n                // shared context or not our activity;\n                // we need to gw-subscribe\n\n                // OTOH, no need to explicitly push a snapshot here,\n                // the GW will reply with a SUBSCRIBED CONTEXT with a snapshot\n                // which we'll push through subscribeToContextUpdatedMessages\n                // (not that we have a snapshot right now - it's not our activity,\n                // and we haven't subscribed already so we can't have received updates)\n\n                return this.sendSubscribe(contextData)\n                    .then(() => thisCallbackSubscriptionNumber);\n            } else {\n\n                // (2\"') -> (3\"')\n                // our activity, which we're tracking anyway\n                // no need to gw-subscribe, just push the snapshot to the new subscriber\n\n                if (contextData.hasReceivedSnapshot) {\n                    const clone = deepClone(contextData.context);\n                    callback(clone, clone, [], thisCallbackSubscriptionNumber);\n                }\n                return Promise.resolve(thisCallbackSubscriptionNumber);\n            }\n        } else {\n            // not first subscriber; no need to gw-subscribe, just push snapshot\n            // (3) -> (3)\n\n            if (contextData.hasReceivedSnapshot) {\n                const clone = deepClone(contextData.context);\n                callback(clone, clone, [], thisCallbackSubscriptionNumber);\n            }\n            return Promise.resolve(thisCallbackSubscriptionNumber);\n        }\n    }\n\n    public unsubscribe(subscriptionKey: ContextSubscriptionKey): void {\n\n        this._contextsSubscriptionsCache = this._contextsSubscriptionsCache.filter((subscription) => subscription.subKey !== subscriptionKey);\n\n        for (const name of Object.keys(this._contextNameToData)) {\n            const contextData = this._contextNameToData[name];\n\n            if (!contextData) {\n                return;\n            }\n\n            const hadCallbacks = contextData.hasCallbacks();\n\n            delete contextData.updateCallbacks[subscriptionKey];\n\n            if (contextData.isAnnounced &&\n                hadCallbacks &&\n                !contextData.hasCallbacks() &&\n                contextData.sentExplicitSubscription) {\n                // (3) -> (2)\n                this.sendUnsubscribe(contextData);\n            }\n\n            if (!contextData.isAnnounced &&\n                // (1) -> (0)\n                !contextData.hasCallbacks()) {\n                delete this._contextNameToData[name];\n            }\n        }\n    }\n\n    public async destroy(name: string) {\n\n        // NB: await always causes a context switch, even if the promise is undefined\n        if (name in this._creationPromises) {\n            await this._creationPromises[name];\n        }\n\n        const contextData = this._contextNameToData[name];\n        if (!contextData) {\n            return Promise.reject(`context with ${name} does not exist`);\n        }\n\n        return this._gw3Session\n            .send({\n                type: msg.GW_MESSAGE_DESTROY_CONTEXT,\n                domain: \"global\",\n                context_id: contextData.contextId,\n            }).then((_) => undefined);\n    }\n\n    private handleUpdated(contextData: ContextData, delta: ContextDelta, extraData?: any) {\n        // for correctness proof, see note about serialized context\n        // updates in subscribeToContextUpdatedMessages\n\n        const oldContext = contextData.context;\n\n        contextData.context = applyContextDelta(contextData.context, delta, this._logger);\n        contextData.hasReceivedSnapshot = true;\n\n        if (this._contextNameToData[contextData.name] === contextData &&\n            !deepEqual(oldContext, contextData.context)) {\n            this.invokeUpdateCallbacks(contextData, delta, extraData);\n        }\n\n    }\n\n    private subscribeToContextCreatedMessages() {\n\n        // when a new context is announced:\n        //\n        // - record the fact that it's announced, so when the first\n        //      bridge-subscribers come in, we do a gw-subscribe\n        //\n        // - record its name/contextId association\n        //\n        // - record its activity information, and the fact that this\n        //      activity exists and that we're not joined in it (yet?)\n        //\n        // - if any bridge-subscribers already present, do a gw-subscribe\n\n        const createdMessageTypes =\n            [\n                msg.GW_MESSAGE_CONTEXT_ADDED,\n                msg.GW_MESSAGE_CONTEXT_CREATED,\n                msg.GW_MESSAGE_ACTIVITY_CREATED,\n            ];\n\n        for (const createdMessageType of createdMessageTypes) {\n            const sub = this._connection.on(\n                createdMessageType,\n                this.handleContextCreatedMessage.bind(this));\n            this._gw3Subscriptions.push(sub);\n        }\n    }\n\n    private handleContextCreatedMessage(contextCreatedMsg: ContextMessage): void {\n        const createdMessageType = contextCreatedMsg.type;\n        if (createdMessageType === msg.GW_MESSAGE_ACTIVITY_CREATED) {\n            // activity context\n\n            this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;\n        } else if (createdMessageType === msg.GW_MESSAGE_CONTEXT_ADDED) {\n            // shared context\n\n            this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;\n        } else if (createdMessageType === msg.GW_MESSAGE_CONTEXT_CREATED) {\n            // created by us, data already populated\n\n            // NB: the promise resolution from createContext is supposed to run *before*\n            // we see the CONTEXT CREATED here, so _contextIdToName/_contextNameToId\n            // are supposed to already be populated (this is because the gw connection\n            // success handler is subscribed long before this one)\n        }\n\n        const name = this._contextIdToName[contextCreatedMsg.context_id];\n\n        if (!name) {\n            // we're supposed to have recorded the name\n            throw new Error(\"Received created event for context with unknown name: \" + contextCreatedMsg.context_id);\n        }\n\n        if (!this._contextNameToId[name]) {\n            // we're also supposed to have recorded it in the opposite direction\n            throw new Error(\"Received created event for context with unknown id: \" + contextCreatedMsg.context_id);\n        }\n\n        let contextData = this._contextNameToData[name];\n\n        if (contextData) {\n            if (contextData.isAnnounced) {\n                return;\n            } else {\n                // (1) -> (3') or (1) -> (3\")\n\n                // someone's already expressed interest in this context and now\n                // it's being announced\n\n                // you might think that since the activity context's id is\n                // auto-generated no one could have already context-subscribed, but\n                // there might be another ACTIVITY CREATED observer on the same\n                // GW connection who saw this message before us and reacted by\n                // subscribing to the context - so we need to handle this case\n\n                if (!contextData.hasCallbacks()) {\n                    throw new Error(\"Assertion failure: contextData.hasCallbacks()\");\n                }\n\n                // update its state and send a gw-subscribe; we're expecting an update message\n\n                contextData.isAnnounced = true;\n                contextData.contextId = contextCreatedMsg.context_id;\n                contextData.activityId = contextCreatedMsg.activity_id;\n\n                // if we're observing the ACTIVITY CREATED message,\n                // we're not one of its members and we need to gw-subscribe\n                // explicitly; of course we could be getting joined to the activity\n                // pretty soon which would subscribe us to context updates implicitly\n\n                // long story short, if we're about to be joined to the activity\n                // and an observer to ACTIVITY CREATED subscribes to the activity's context\n                // before we get to this point, we'll send a needless SUBSCRIBE CONTEXT\n                // but there's no harm done by beating that to the punch, and there's\n                // no clean way to avoid this situation so we leave this as an artifact\n                // of the implementation\n\n                // whether activity or not, we'll push the initial snapshot in the\n                // subscribeToContextUpdatedMessages handler\n\n                if (!contextData.sentExplicitSubscription) {\n                    this.sendSubscribe(contextData);\n                }\n            }\n        } else {\n            // (0) -> (2') or (0) -> (2\")\n            // first time we hear about this context\n            // we're not subscribed to it in the GW so just create a placeholder\n            // and wait for someone to subscribe to it - we'll THEN send a subscribe to the GW\n\n            this._contextNameToData[name] = contextData =\n                new ContextData(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);\n\n            if (this._trackAllContexts) {\n                // here we are tracking all announced contexts, which allows us to re-announce as many contexts\n                // as possible when a gateway reconnection happens\n\n                // tslint:disable-next-line:no-empty\n                this.subscribe(name, () => { }).then((subKey) => this._systemContextsSubKey = subKey);\n            }\n        }\n    }\n\n    private subscribeToContextUpdatedMessages() {\n\n        // receiving a context update or snapshot\n        //\n        // if it's JOINED ACTIVITY, we may be a new peer as part of activity\n        // creation, so it's the first time we've heard about it -\n        // record the activity information in the contextData\n        //\n        // otherwise, this message is a response/consequence of our gw-subscribe\n        // message sent on entering state (3)\n        //\n        // in any case, apply any deltas to the contextData.context, and\n        // propagate the context data and delta to any bridge-subscription\n        // handlers\n        //\n        // note that context updates are always performed when reacting to\n        // a GW message, so the data over time is tied to the flow of\n        // messages coming in through the gateway connection; the GW decides\n        // which update comes before which and our view of the changes to\n        // the context is consistent with it (i.e. the GW is the serializing\n        // agent)\n\n        const updatedMessageTypes =\n            [\n                msg.GW_MESSAGE_CONTEXT_UPDATED,\n                msg.GW_MESSAGE_SUBSCRIBED_CONTEXT,\n                msg.GW_MESSAGE_JOINED_ACTIVITY,\n            ];\n\n        for (const updatedMessageType of updatedMessageTypes) {\n            const sub = this._connection.on(\n                updatedMessageType,\n                this.handleContextUpdatedMessage.bind(this));\n            this._gw3Subscriptions.push(sub);\n        }\n    }\n\n    private handleContextUpdatedMessage(contextUpdatedMsg: ContextMessage): void {\n        const updatedMessageType = contextUpdatedMsg.type;\n        const contextId = contextUpdatedMsg.context_id;\n        let contextData = this._contextNameToData[this._contextIdToName[contextId]];\n        // this flag is basically used to make sure we raise an update for a new activity\n        // even if its initial context is empty\n        // see \"long analysis for callback behavior in GW3: several cases\" comment in\n        // activityMyApi.ts in js-activity, case 1-1-1\n        // it serves a similar purpose for gw_message_subscribed_context\n        const justSeen = !contextData || !contextData.isAnnounced;\n\n        if (updatedMessageType === msg.GW_MESSAGE_JOINED_ACTIVITY) {\n            if (!contextData) {\n                // (0) -> (2\"')\n\n                // we're in the middle of activity creation\n                contextData = new ContextData(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);\n                this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;\n                this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;\n                this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;\n            } else {\n                // (1) -> (3\"'), (2\") -> (2\"') or (3\") -> (3\"')\n\n                contextData.contextId = contextId;\n                contextData.isAnnounced = true;\n                contextData.activityId = contextUpdatedMsg.activity_id;\n            }\n            contextData.joinedActivity = true;\n        } else {\n            if (!contextData || !contextData.isAnnounced) {\n                if (updatedMessageType === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT) {\n                    // we've tried to create a context that already exists\n                    contextData = contextData || new ContextData(contextId, contextUpdatedMsg.name, true, undefined);\n                    contextData.sentExplicitSubscription = true;\n                    this._contextNameToData[contextUpdatedMsg.name] = contextData;\n                    this._contextIdToName[contextId] = contextUpdatedMsg.name;\n                    this._contextNameToId[contextUpdatedMsg.name] = contextId;\n                } else {\n                    this._logger.error(`Received 'update' for unknown context: ${contextId}`);\n                }\n                return;\n            }\n        }\n\n        const oldContext = contextData.context;\n\n        contextData.hasReceivedSnapshot = true;\n        if (updatedMessageType === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT) {\n            contextData.context = contextUpdatedMsg.data || {};\n        } else if (updatedMessageType === msg.GW_MESSAGE_JOINED_ACTIVITY) {\n            contextData.context = contextUpdatedMsg.context_snapshot || {};\n        } else if (updatedMessageType === msg.GW_MESSAGE_CONTEXT_UPDATED) {\n            contextData.context = applyContextDelta(\n                contextData.context,\n                contextUpdatedMsg.delta as ContextDelta,\n                this._logger);\n        } else {\n            throw new Error(\"Unrecognized context update message \" + updatedMessageType);\n        }\n\n        if (justSeen ||\n            !deepEqual(contextData.context, oldContext) ||\n            updatedMessageType === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT) {\n            this.invokeUpdateCallbacks(contextData, contextUpdatedMsg.delta, { updaterId: contextUpdatedMsg.updater_id });\n        }\n    }\n\n    private invokeUpdateCallbacks(contextData: ContextData, delta?: ContextDelta, extraData?: any) {\n        delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };\n        if (delta.commands) {\n            // clear added, updated, removed, reset\n            delta.added = delta.updated = delta.reset = {};\n            delta.removed = [];\n            for (const command of delta.commands) {\n                if (command.type === \"remove\") {\n                    // push the removal of top level props only\n                    if (command.path.indexOf(\".\") === -1) {\n                        delta.removed.push(command.path);\n                    }\n                    setValueToPath(delta.updated, null, command.path);\n                } else if (command.type === \"set\") {\n                    setValueToPath(delta.updated, command.value, command.path);\n                }\n            }\n\n        }\n\n        for (const updateCallbackIndex in contextData.updateCallbacks) {\n            if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {\n                try {\n                    const updateCallback = contextData.updateCallbacks[updateCallbackIndex];\n                    updateCallback(\n                        deepClone(contextData.context),\n                        deepClone(Object.assign(\n                            {},\n                            delta.added || {},\n                            delta.updated || {},\n                            delta.reset || {})),\n                        delta.removed,\n                        parseInt(updateCallbackIndex, 10),\n                        extraData);\n                } catch (err) {\n                    this._logger.debug(\"callback error: \" + JSON.stringify(err));\n                }\n            }\n        }\n    }\n\n    private subscribeToContextDestroyedMessages() {\n        // wipe all bookkeeping related to this context\n\n        const destroyedMessageTypes =\n            [\n                msg.GW_MESSAGE_CONTEXT_DESTROYED,\n                msg.GW_MESSAGE_ACTIVITY_DESTROYED,\n            ];\n\n        for (const destroyedMessageType of destroyedMessageTypes) {\n            const sub = this._connection.on(\n                destroyedMessageType,\n                this.handleContextDestroyedMessage.bind(this));\n            this._gw3Subscriptions.push(sub);\n        }\n    }\n\n    private handleContextDestroyedMessage(destroyedMsg: ContextMessage): void {\n        const destroyedMessageType = destroyedMsg.type;\n        let contextId;\n        let name;\n\n        // (?) -> (0)\n\n        if (destroyedMessageType === msg.GW_MESSAGE_ACTIVITY_DESTROYED) {\n            name = destroyedMsg.activity_id;\n            contextId = this._contextNameToId[name];\n            if (!contextId) {\n                this._logger.error(`Received 'destroyed' for unknown activity: ${destroyedMsg.activity_id}`);\n                return;\n            }\n        } else {\n            contextId = destroyedMsg.context_id;\n            name = this._contextIdToName[contextId];\n            if (!name) {\n                this._logger.error(`Received 'destroyed' for unknown context: ${destroyedMsg.context_id}`);\n                return;\n            }\n        }\n\n        delete this._contextIdToName[contextId];\n        delete this._contextNameToId[name];\n\n        const contextData = this._contextNameToData[name];\n        delete this._contextNameToData[name];\n\n        if (!contextData || !contextData.isAnnounced) {\n            this._logger.error(`Received 'destroyed' for unknown context: ${contextId}`);\n            return;\n        }\n    }\n\n    private sendSubscribe(contextData: ContextData): Promise<void> {\n        contextData.sentExplicitSubscription = true;\n\n        return this._gw3Session\n            .send({\n                type: msg.GW_MESSAGE_SUBSCRIBE_CONTEXT,\n                domain: \"global\",\n                context_id: contextData.contextId,\n            }).then((_) => undefined);\n    }\n\n    private sendUnsubscribe(contextData: ContextData): Promise<void> {\n        contextData.sentExplicitSubscription = false;\n\n        return this._gw3Session\n            .send({\n                type: msg.GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\n                domain: \"global\",\n                context_id: contextData.contextId,\n            }).then((_) => undefined);\n    }\n\n    private calculateContextDeltaV1(from: any, to: any): ContextDelta {\n        const delta: ContextDelta = { added: {}, updated: {}, removed: [], reset: undefined };\n        if (from) {\n            for (const x of Object.keys(from)) {\n                if (Object.keys(to).indexOf(x) !== -1\n                    && to[x] !== null\n                    && !deepEqual(from[x], to[x])) {\n                    delta.updated[x] = to[x];\n                }\n            }\n        }\n        for (const x of Object.keys(to)) {\n            if (!from || (Object.keys(from).indexOf(x) === -1)) {\n                if (to[x] !== null) {\n                    delta.added[x] = to[x];\n                }\n            } else if (to[x] === null) {\n                delta.removed.push(x);\n            }\n        }\n        return delta;\n    }\n\n    private calculateContextDeltaV2(from: any, to: any): ContextDelta {\n        const delta: ContextDelta = { added: {}, updated: {}, removed: [], reset: undefined, commands: [] };\n\n        for (const x of Object.keys(to)) {\n            if (to[x] !== null) {\n                const fromX = from ? from[x] : null;\n                if (!deepEqual(fromX, to[x])) {\n                    delta.commands?.push({ type: \"set\", path: x, value: to[x] });\n                }\n            } else {\n                delta.commands?.push({ type: \"remove\", path: x });\n            }\n        }\n\n        return delta;\n    }\n\n    private resetState(): void {\n        for (const sub of this._gw3Subscriptions) {\n            this._connection.off(sub);\n        }\n\n        if (this._systemContextsSubKey) {\n            this.unsubscribe(this._systemContextsSubKey);\n            delete this._systemContextsSubKey;\n        }\n\n        this._gw3Subscriptions = [];\n        this._contextNameToId = {};\n        this._contextIdToName = {};\n        delete this._protocolVersion;\n\n        this._contextsTempCache = Object.keys(this._contextNameToData).reduce<{ [contextName: string]: any }>((cacheSoFar, ctxName) => {\n            cacheSoFar[ctxName] = this._contextNameToData[ctxName].context;\n            return cacheSoFar;\n        }, {});\n\n        this._contextNameToData = {};\n    }\n\n    private async reInitiateState(): Promise<void> {\n\n        this.subscribeToContextCreatedMessages();\n\n        this.subscribeToContextUpdatedMessages();\n\n        this.subscribeToContextDestroyedMessages();\n\n        this._connection.replayer?.drain(\n            ContextMessageReplaySpec.name,\n            (message) => {\n                const type = (message as any).type;\n                if (!type) {\n                    return;\n                }\n\n                if (type === msg.GW_MESSAGE_CONTEXT_CREATED ||\n                    type === msg.GW_MESSAGE_CONTEXT_ADDED ||\n                    type === msg.GW_MESSAGE_ACTIVITY_CREATED) {\n                    this.handleContextCreatedMessage(message as ContextMessage);\n                } else if (type === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT ||\n                    type === msg.GW_MESSAGE_CONTEXT_UPDATED ||\n                    type === msg.GW_MESSAGE_JOINED_ACTIVITY) {\n                    this.handleContextUpdatedMessage(message as ContextMessage);\n                } else if (type === msg.GW_MESSAGE_CONTEXT_DESTROYED ||\n                    type === msg.GW_MESSAGE_ACTIVITY_DESTROYED) {\n                    this.handleContextDestroyedMessage(message as ContextMessage);\n                }\n            });\n\n        await Promise.all(this._contextsSubscriptionsCache.map((subscription) => this.subscribe(subscription.contextName, subscription.callback, subscription.subKey)));\n\n        await this.flushQueue();\n\n        for (const ctxName in this._contextsTempCache) {\n\n            if (typeof this._contextsTempCache[ctxName] !== \"object\" || Object.keys(this._contextsTempCache[ctxName]).length === 0) {\n                continue;\n            }\n\n            const lastKnownData = this._contextsTempCache[ctxName];\n\n            this._logger.info(`Re-announcing known context: ${ctxName}`);\n\n            await this.flushQueue();\n\n            await this.update(ctxName, lastKnownData);\n        }\n\n        this._contextsTempCache = {};\n\n        this._logger.info(\"Contexts are re-announced\");\n    }\n\n    private flushQueue(): Promise<void> {\n        return new Promise((resolve) => setTimeout(() => resolve(), 0));\n    }\n}\n","import { Glue42Core } from \"../../glue\";\nimport { GW3Bridge } from \"./bridges/gw3/bridge\";\nimport { ContextBridge } from \"./contextBridge\";\nimport Connection from \"../connection/connection\";\nimport { Logger } from \"../logger/logger\";\nimport { ContextName, ContextSubscriptionKey } from \"./bridges/types\";\n\n/** @ignore */\nexport interface ContextsConfig {\n    connection: Connection;\n    logger: Logger;\n    trackAllContexts?: boolean;\n    reAnnounceKnownContexts?: boolean;\n}\n\nexport class ContextsModule implements Glue42Core.Contexts.API {\n\n    public initTime: number | undefined;\n    public initStartTime: number | undefined;\n    public initEndTime?: number;\n    private _bridge: ContextBridge;\n\n    public constructor(config: ContextsConfig) {\n        this._bridge = new GW3Bridge(config);\n    }\n\n    public all(): string[] {\n        return this._bridge.all();\n    }\n\n    /**\n     * Updates a context with some object. The object properties will replace the context properties, any other\n     * context properties will remain in the context. If the context does not exists the update call will create it.\n     *\n     * @example\n     * // if theme does not exists creates a context called theme with initial value\n     * glue.contexts.update(\"theme\", {font:10, font-family:\"Arial\"})\n     *\n     * // increases font to 11, after that call context is {font:10, font-family:\"Arial\"}\n     * glue.contexts.update(\"theme\", {font:11})\n     *\n     * @function\n     * @param name Name of the context to be updated\n     * @param data The object that will be applied to the context\n     */\n    public update(name: ContextName, data: any): Promise<void> {\n        this.checkName(name);\n        this.checkData(data);\n\n        return this._bridge.update(name, data);\n    }\n\n    /**\n     * Replaces a context\n     * @function\n     * @param name Name of the context to be updated\n     * @param data The object that will be applied to the context\n     */\n    public set(name: ContextName, data: any): Promise<void> {\n        this.checkName(name);\n        this.checkData(data);\n\n        return this._bridge.set(name, data);\n    }\n\n    public setPath(name: ContextName, path: string, data: any): Promise<void> {\n        this.checkName(name);\n        this.checkPath(path);\n        const isTopLevelPath = path === \"\";\n\n        if (isTopLevelPath) {\n            // Check the data only in the case of a top level path as the inner props can be of type any.\n            this.checkData(data);\n\n            return this.set(name, data);\n        }\n\n        return this._bridge.setPath(name, path, data);\n    }\n\n    public setPaths(name: ContextName, paths: Glue42Core.Contexts.PathValue[]): Promise<void> {\n        this.checkName(name);\n\n        if (!Array.isArray(paths)) {\n            throw new Error(\"Please provide the paths as an array of PathValues!\");\n        }\n\n        for (const { path, value } of paths) {\n            this.checkPath(path);\n            const isTopLevelPath = path === \"\";\n\n            if (isTopLevelPath) {\n                // Check the value only in the case of a top level path as the inner props can be of type any.\n                this.checkData(value);\n            }\n        }\n\n        return this._bridge.setPaths(name, paths);\n    }\n\n    /**\n     * Subscribe for context events\n     *\n     * NB: This method publishes an initial snapshot on subscription.\n     * To unsubscribe from within the callback, use the unsubscribe argument\n     * of the callback, since the method itself may not have returned and the returned\n     * callback is not available in the calling code.\n     *\n     * @function\n     *\n     * @param name name of the context to subscribe for\n     * @param callback function that will receive updates.\n     * @returns Function execute the returned function to unsubscribe\n     */\n    public subscribe(\n        name: ContextName,\n        callback: (data: any, delta: any, removed: string[], unsubscribe: () => void, extraData?: any) => void): Promise<() => void> {\n        this.checkName(name);\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n\n        return this._bridge\n            .subscribe(name, (data: any, delta: any, removed: string[], key: ContextSubscriptionKey, extraData?: any) => callback(data, delta, removed, () => this._bridge.unsubscribe(key), extraData))\n            .then((key) =>\n                () => {\n                    this._bridge.unsubscribe(key);\n                });\n\n    }\n\n    /**\n     * Return a context's data\n     */\n    public get(name: ContextName): Promise<any> {\n        this.checkName(name);\n\n        return this._bridge.get(name);\n    }\n\n    public ready(): Promise<any> {\n        return Promise.resolve(this);\n    }\n\n    public destroy(name: string): Promise<any> {\n        this.checkName(name);\n\n        return this._bridge.destroy(name);\n    }\n\n    public get setPathSupported() {\n        return this._bridge.setPathSupported;\n    }\n\n    private checkName(name: ContextName) {\n        if (typeof name !== \"string\" || name === \"\") {\n            throw new Error(\"Please provide the name as a non-empty string!\");\n        }\n    }\n\n    private checkPath(path: string) {\n        if (typeof path !== \"string\") {\n            throw new Error(\"Please provide the path as a dot delimited string!\");\n        }\n    }\n\n    // TODO: Update the typings everywhere to disallow strings, numbers, etc.\n    private checkData(data: any) {\n        // Allows null.\n        if (typeof data !== \"object\") {\n            throw new Error(\"Please provide the data as an object!\");\n        }\n    }\n}\n","export default function <T>(promise: Promise<any>, successCallback: any, errorCallback: any): Promise<T> {\n\n    if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\n        return promise;\n    }\n\n    if (typeof successCallback !== \"function\") {\n        successCallback = () => { /* DO NOTHING */ };\n    } else if (typeof errorCallback !== \"function\") {\n        errorCallback = () => {  /* DO NOTHING */ };\n    }\n\n    return promise.then(successCallback, errorCallback);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const waitFor = async (ms = 0, callback: () => void) => {\n    await resolveAfter(ms);\n    callback();\n};\n\nfunction resolveAfter(ms = 0): Promise<void> {\n    return new Promise((resolve) => setTimeout(() => resolve(), ms));\n}\n\nexport function rejectAfter<T>(ms = 0, promise: Promise<T>, error?: T): Promise<T> {\n    let timeout: any;\n    const clearTimeoutIfThere = () => {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n    };\n    promise\n        .then(() => {\n            clearTimeoutIfThere();\n        })\n        .catch(() => {\n            clearTimeoutIfThere();\n        });\n\n    return new Promise((resolve, reject) => {\n        timeout = setTimeout(() => reject(error), ms);\n    });\n}\n","/*\n  The AGM Client analyses server presences, collects information about their methods and allows users to invoke these methods.\n */\nimport promisify from \"../helpers/promisify\";\nimport { Protocol, SubscribeError, InteropSettings, SubscriptionInner } from \"../types\";\nimport { ClientMethodInfo, ServerInfo, ServerMethodsPair } from \"./types\";\nimport { Glue42Core } from \"../../../glue\";\nimport ClientRepository from \"./repository\";\nimport { UnsubscribeFunction } from \"callback-registry\";\nimport random from \"shortid\";\nimport { rejectAfter } from \"../helpers/promiseHelpers\";\nimport { isSubset } from \"../../contexts/helpers\";\nimport InvocationResult = Glue42Core.AGM.InvocationResult;\nimport MethodDefinition = Glue42Core.AGM.MethodDefinition;\nimport Method = Glue42Core.Interop.Method;\n\nexport enum InvokeStatus {\n    Success = 0,\n    Error = 1,\n}\n\nexport interface InvokeResultMessage {\n    invocationId: string;\n    result?: object;\n    instance?: Glue42Core.AGM.Instance;\n    status: InvokeStatus;\n    message: string;\n    error?: Error;\n}\n\nexport default class Client {\n    constructor(private protocol: Protocol, private repo: ClientRepository, private instance: Glue42Core.AGM.Instance, private configuration: InteropSettings) {\n        //\n    }\n\n    /**\n     * Subscribes to an AGM streaming method\n     */\n    public subscribe(method: string | Glue42Core.AGM.MethodDefinition, options: Glue42Core.AGM.SubscriptionParams, successCallback?: (subscription: Glue42Core.AGM.Subscription) => void, errorCallback?: (err: SubscribeError) => void, existingSub?: SubscriptionInner): Promise<Glue42Core.AGM.Subscription> {\n        // options can have arguments:{}, target: 'best'/'all'/{server_instance}, waitTimeoutMs:10000\n\n        const callProtocolSubscribe = (targetServers: ServerMethodsPair[], stream: Glue42Core.AGM.MethodDefinition, successProxy: (sub: Glue42Core.AGM.Subscription) => void, errorProxy: (err: SubscribeError) => void) => {\n\n            options.methodResponseTimeout = options.methodResponseTimeout ?? options.waitTimeoutMs;\n\n            this.protocol.client.subscribe(\n                stream,\n                options,\n                targetServers,\n                successProxy,\n                errorProxy,\n                existingSub\n            );\n        };\n\n        const promise = new Promise<Glue42Core.AGM.Subscription>((resolve, reject) => {\n\n            const successProxy = (sub: Glue42Core.AGM.Subscription) => {\n                resolve(sub);\n            };\n            const errorProxy = (err: SubscribeError) => {\n                reject(err);\n            };\n\n            if (!method) {\n                reject(`Method definition is required. Please, provide either a unique string for a method name or a “methodDefinition” object with a required “name” property.`);\n                return;\n            }\n\n            let methodDef: Glue42Core.AGM.MethodDefinition;\n            if (typeof method === \"string\") {\n                methodDef = { name: method };\n            } else {\n                methodDef = method;\n            }\n\n            if (!methodDef.name) {\n                reject(`Method definition is required. Please, provide either a unique string for a method name or a “methodDefinition” object with a required “name” property.`);\n                return;\n            }\n\n            if (options === undefined) {\n                options = {};\n            }\n            let target = options.target;\n            if (target === undefined) {\n                target = \"best\";\n            }\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\") {\n                reject(new Error(`\"${target}\" is not a valid target. Valid targets are \"all\", \"best\", or an instance.`));\n                return;\n            }\n\n            if (options.methodResponseTimeout === undefined) {\n                // legacy support\n                options.methodResponseTimeout = (options as any).method_response_timeout;\n                if (options.methodResponseTimeout === undefined) {\n                    // fallback to default\n                    options.methodResponseTimeout = this.configuration.methodResponseTimeout;\n                }\n            }\n\n            if (options.waitTimeoutMs === undefined) {\n                // legacy support\n                options.waitTimeoutMs = (options as any).wait_for_method_timeout;\n                if (options.waitTimeoutMs === undefined) {\n                    // fallback to default\n                    options.waitTimeoutMs = this.configuration.waitTimeoutMs;\n                }\n            }\n\n            const delayStep = 500;\n            let delayTillNow = 0;\n\n            // don't check if the method is streaming or not, subscribing to non-streaming method has to invoke it\n\n            // get all servers that have method(s) matching the filter\n            let currentServers = this.getServerMethodsByFilterAndTarget(methodDef, target);\n            if (currentServers.length > 0) {\n                callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);\n            } else {\n                const retry = () => {\n                    if (!target || !(options.waitTimeoutMs)) {\n                        return;\n                    }\n                    delayTillNow += delayStep;\n                    // get all servers that have method(s) matching the filter\n                    currentServers = this.getServerMethodsByFilterAndTarget(methodDef, target);\n                    if (currentServers.length > 0) {\n                        const streamInfo = currentServers[0].methods[0];\n                        callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);\n                    } else if (delayTillNow >= options.waitTimeoutMs) {\n                        const def = typeof method === \"string\" ? { name: method } : method;\n                        callProtocolSubscribe(currentServers, def, successProxy, errorProxy);\n                    } else {\n                        setTimeout(retry, delayStep);\n                    }\n                };\n                setTimeout(retry, delayStep);\n            }\n        });\n\n        return promisify(promise, successCallback, errorCallback);\n    }\n\n    /**\n     * Returns all servers. If methodFilter is specified will return a list of servers\n     * having a method matching the filter.\n     */\n    public servers(methodFilter: Glue42Core.AGM.MethodDefinition): Glue42Core.AGM.Instance[] {\n        const filterCopy = methodFilter === undefined\n            ? undefined\n            : { ...methodFilter };\n\n        // We want only the announced servers\n        return this.getServers(filterCopy).map((serverMethodMap) => {\n            return serverMethodMap.server.instance;\n        });\n    }\n\n    /**\n     * Returns all methods that match the given filter. If no filter specified returns all methods.\n     */\n    public methods(methodFilter: Glue42Core.AGM.MethodDefinition | string): Glue42Core.AGM.Method[] {\n        if (typeof methodFilter === \"string\") {\n            methodFilter = { name: methodFilter };\n        } else {\n            // Must not be mutated\n            methodFilter = { ...methodFilter };\n        }\n\n        return this.getMethods(methodFilter);\n    }\n\n    /**\n     * Returns all agm method registered by some server\n     */\n    public methodsForInstance(instance: Glue42Core.AGM.Instance): Glue42Core.AGM.Method[] {\n        return this.getMethodsForInstance(instance);\n    }\n\n    /**\n     * Called when a method is added for the first time by any application\n     */\n    public methodAdded(callback: (def: Glue42Core.AGM.Method) => void): UnsubscribeFunction {\n        return this.repo.onMethodAdded(callback);\n    }\n\n    /**\n     * Called when a method is removed from the last application offering it\n     * @function methodRemoved\n     * @param {MethodCallback} callback\n     */\n    public methodRemoved(callback: (def: Glue42Core.AGM.Method) => void): UnsubscribeFunction {\n        return this.repo.onMethodRemoved(callback);\n    }\n\n    /**\n     * Called when an application offering methods (server) is discovered\n     * @param {InstanceCallback} callback Callback that will be invoked with the {@link Instance} of the new sever\n     */\n    public serverAdded(callback: (instance: Glue42Core.AGM.Instance) => void): UnsubscribeFunction {\n        return this.repo.onServerAdded(callback);\n    }\n\n    /**\n     * Called when an app offering methods stops offering them or exits\n     * @param {InstanceCallback} callback Callback that will be invoked with the {@link Instance} of the removed server\n     */\n    public serverRemoved(callback: (instance: Glue42Core.AGM.Instance, reason: string) => void): UnsubscribeFunction {\n        return this.repo.onServerRemoved((server: Glue42Core.AGM.Instance, reason: string) => {\n            callback(server, reason);\n        });\n    }\n\n    /**\n     * Called when a method is offered by an application. This will be called for each server offering the method\n     * where {@link methodAdded} will be called only for the first time the method is registered.\n     *\n     * @param {ServerMethodCallback} callback\n     */\n    public serverMethodAdded(callback: (info: { server: Glue42Core.AGM.Instance, method: Glue42Core.AGM.Method }) => void): UnsubscribeFunction {\n        return this.repo.onServerMethodAdded((server: Glue42Core.AGM.Instance, method: ClientMethodInfo) => {\n            callback({ server, method });\n        });\n    }\n\n    /**\n     * Called when a server stops offering a method\n     * @param {ServerMethodCallback} callback\n     */\n    public serverMethodRemoved(callback: (info: { server: Glue42Core.AGM.Instance, method: Glue42Core.AGM.Method }) => void): UnsubscribeFunction {\n        return this.repo.onServerMethodRemoved((server: Glue42Core.AGM.Instance, method: ClientMethodInfo) => {\n            callback({ server, method });\n        });\n    }\n\n    /**\n     * Invokes an AGM method\n     * @param {MethodDefinition} methodFilter Method to invoke\n     * @param {Object} argumentObj Arguments for the invocation\n     * @param {Instance|Instance[]|string} [target] Defines which server(s) to target with the invocation - can be one of:\n     * * ’best' - executes the method on the best (or first) server\n     * * 'all' - executes the method on all servers offering it\n     * * AGM instance (or a subset, used for filtering), e.g. { application: 'appName' }\n     * * an array of AGM instances/filters\n     * @param {InvocationOptions} [additionalOptions] Additional options for the invocation\n     * @param {function} [success] - (use this if you prefer callback style instead of promises)\n     * Callback that will be called with {@link InvocationResult} object when the invocation is successful\n     * @param {function} [error] -  (use this if you prefer callback style instead of promises)\n     * Callback that will be called with {@link InvocationError} object when the invocation is not successful\n     * @returns {Promise<InvocationResult>}\n     * @example\n     * const result = await glue.agm.invoke(\"Sum\", { a: 37, b: 5 }); // everything else is optional\n     * console.log('37 + 5 = ' + result.returned.answer);\n     */\n\n    public async invoke(methodFilter: string | Glue42Core.AGM.MethodDefinition, argumentObj?: object, target?: Glue42Core.AGM.InstanceTarget, additionalOptions?: Glue42Core.AGM.InvokeOptions, success?: Glue42Core.AGM.InvokeSuccessHandler<any>, error?: Glue42Core.AGM.InvokeErrorHandler)\n        : Promise<Glue42Core.AGM.InvocationResult<any>> {\n        const getInvokePromise = async () => {\n\n            let methodDefinition: Glue42Core.AGM.MethodDefinition;\n            if (typeof methodFilter === \"string\") {\n                methodDefinition = { name: methodFilter };\n            } else {\n                methodDefinition = { ...methodFilter };\n            }\n\n            if (!methodDefinition.name) {\n                return Promise.reject(`Method definition is required. Please, provide either a unique string for a method name or a “methodDefinition” object with a required “name” property.`);\n            }\n\n            if (!argumentObj) {\n                argumentObj = {};\n            }\n            if (!target) {\n                target = \"best\";\n            }\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\" && target !== \"skipMine\") {\n                return Promise.reject(new Error(`\"${target}\" is not a valid target. Valid targets are \"all\" and \"best\".`));\n            }\n            if (!additionalOptions) {\n                additionalOptions = {};\n            }\n\n            if (additionalOptions.methodResponseTimeoutMs === undefined) {\n                // legacy support\n                additionalOptions.methodResponseTimeoutMs = (additionalOptions as any).method_response_timeout;\n                if (additionalOptions.methodResponseTimeoutMs === undefined) {\n                    // fallback to default\n                    additionalOptions.methodResponseTimeoutMs = this.configuration.methodResponseTimeout;\n                }\n            }\n\n            if (additionalOptions.waitTimeoutMs === undefined) {\n                // legacy support\n                additionalOptions.waitTimeoutMs = (additionalOptions as any).wait_for_method_timeout;\n                if (additionalOptions.waitTimeoutMs === undefined) {\n                    // fallback to default\n                    additionalOptions.waitTimeoutMs = this.configuration.waitTimeoutMs;\n                }\n            }\n\n            if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== \"number\") {\n                return Promise.reject(new Error(`\"${additionalOptions.waitTimeoutMs}\" is not a valid number for \"waitTimeoutMs\" `));\n            }\n\n            // Check if the arguments are an object\n            if (typeof argumentObj !== \"object\") {\n                return Promise.reject(new Error(`The method arguments must be an object. method: ${methodDefinition.name}`));\n            }\n\n            let serversMethodMap: ServerMethodsPair[] = this.getServerMethodsByFilterAndTarget(methodDefinition, target);\n\n            // Try to await them and then continue\n            if (serversMethodMap.length === 0) {\n                try {\n                    // because of the additionalOptions\n                    serversMethodMap = await this.tryToAwaitForMethods(methodDefinition, target, additionalOptions);\n                } catch (err) {\n                    const method: Glue42Core.Interop.Method = {\n                        ...methodDefinition,\n                        getServers: () => [],\n                        supportsStreaming: false,\n                        objectTypes: methodDefinition.objectTypes ?? [],\n                        flags: methodDefinition.flags?.metadata ?? {}\n                    };\n                    const errorObj: InvocationResult = {\n                        method,\n                        called_with: argumentObj,\n                        message: `Can not find a method matching ${JSON.stringify(methodFilter)} with server filter ${JSON.stringify(target)}`,\n                        executed_by: undefined,\n                        returned: undefined,\n                        status: undefined,\n                    };\n\n                    return Promise.reject(errorObj);\n                }\n            }\n\n            const timeout = additionalOptions.methodResponseTimeoutMs;\n            // ts be happy\n            const additionalOptionsCopy: Glue42Core.AGM.InvokeOptions = additionalOptions;\n            const invokePromises: Promise<InvokeResultMessage>[] = serversMethodMap.map(\n                (serversMethodPair) => {\n                    const invId = random();\n                    const method = serversMethodPair.methods[0];\n                    const server = serversMethodPair.server;\n                    const invokePromise = this.protocol.client.invoke(invId, method, argumentObj, server, additionalOptionsCopy);\n\n                    return Promise.race([\n                        invokePromise,\n                        rejectAfter(timeout, invokePromise, {\n                            invocationId: invId,\n                            message: `Invocation timeout (${timeout} ms) reached for method name: ${method?.name}, target instance: ${JSON.stringify(server.instance)}, options: ${JSON.stringify(additionalOptionsCopy)}`,\n                            status: InvokeStatus.Error,\n                        })\n                    ]);\n                }\n            );\n\n            const invocationMessages: InvokeResultMessage[] = await Promise.all(invokePromises);\n\n            const results = this.getInvocationResultObj(invocationMessages, methodDefinition, argumentObj);\n\n            const allRejected = invocationMessages.every((result) => result.status === InvokeStatus.Error);\n            if (allRejected) {\n                return Promise.reject(results);\n            }\n\n            return results;\n        };\n\n        // I would call this\n        return promisify(getInvokePromise(), success, error);\n    }\n\n    private getInvocationResultObj(invocationResults: InvokeResultMessage[], method: MethodDefinition, calledWith: object): InvocationResult<any> {\n        /* tslint:disable:variable-name*/\n        const all_return_values = invocationResults\n            .filter((invokeMessage) => invokeMessage.status === InvokeStatus.Success)\n            .reduce<InvocationResult[]>(\n                (allValues, currentValue) => {\n                    allValues = [\n                        ...allValues,\n                        {\n                            executed_by: currentValue.instance,\n                            returned: currentValue.result,\n                            called_with: calledWith,\n                            method,\n                            message: currentValue.message,\n                            status: currentValue.status,\n                        }\n                    ];\n\n                    return allValues;\n                }, []\n            );\n\n        /* tslint:disable:variable-name*/\n        const all_errors = invocationResults\n            .filter((invokeMessage) => invokeMessage.status === InvokeStatus.Error)\n            .reduce<object[]>((allErrors, currError) => {\n                allErrors = [\n                    ...allErrors,\n                    {\n                        executed_by: currError.instance,\n                        called_with: calledWith,\n                        name: method.name,\n                        message: currError.message,\n                    }\n                ];\n\n                return allErrors;\n            }, []);\n\n        const invResult = invocationResults[0];\n\n        const result: InvocationResult = {\n            method,\n            called_with: calledWith,\n            returned: invResult.result,\n            executed_by: invResult.instance,\n            all_return_values,\n            all_errors,\n            message: invResult.message,\n            status: invResult.status\n        };\n\n        return result;\n    }\n\n    /**\n     * Called when the user tries to invoke a method which does not exist\n     */\n    private tryToAwaitForMethods(methodDefinition: MethodDefinition, target: Glue42Core.AGM.InstanceTarget, additionalOptions: Glue42Core.AGM.InvokeOptions): Promise<ServerMethodsPair[]> {\n        return new Promise((resolve, reject) => {\n            if (additionalOptions.waitTimeoutMs === 0) {\n                reject();\n                return;\n            }\n\n            const delayStep = 500;\n            let delayTillNow = 0;\n\n            const retry = () => {\n                delayTillNow += delayStep;\n\n                // get all servers that have method(s) matching the filter\n                const serversMethodMap = this.getServerMethodsByFilterAndTarget(methodDefinition, target);\n                if (serversMethodMap.length > 0) {\n                    clearInterval(interval);\n                    resolve(serversMethodMap);\n                } else if (delayTillNow >= (additionalOptions.waitTimeoutMs || 10000)) {\n                    clearInterval(interval);\n                    reject();\n                    return;\n                }\n            };\n            const interval = setInterval(retry, delayStep);\n        });\n    }\n\n    /**\n     * Filters an array of servers and returns the ones which match the target criteria\n     */\n    private filterByTarget(target: Glue42Core.AGM.InstanceTarget, serverMethodMap: ServerMethodsPair[]): ServerMethodsPair[] {\n        // If the user specified target as string:\n        if (typeof target === \"string\") {\n            if (target === \"all\") {\n                return [...serverMethodMap];\n            } else if (target === \"best\") {\n                // Returns first app found\n                const localMachine = serverMethodMap\n                    .find((s) => s.server.instance.isLocal);\n\n                if (localMachine) {\n                    return [localMachine];\n                }\n\n                if (serverMethodMap[0] !== undefined) {\n                    return [serverMethodMap[0]];\n                }\n            } else if (target === \"skipMine\") {\n                return serverMethodMap.filter(({ server }) => server.instance.peerId !== this.instance.peerId);\n            }\n        } else {\n            let targetArray: Glue42Core.AGM.Instance[];\n            if (!Array.isArray(target)) {\n                targetArray = [target];\n            } else {\n                targetArray = target;\n            }\n\n            // Retrieve all getServers that match the filters\n            const allServersMatching = targetArray.reduce((matches: ServerMethodsPair[], filter) => {\n                // Add matches for each filter\n                const myMatches = serverMethodMap.filter((serverMethodPair) => {\n                    return this.instanceMatch(filter, serverMethodPair.server.instance);\n                });\n                return matches.concat(myMatches);\n            }, []);\n\n            return allServersMatching;\n        }\n        return [];\n    }\n\n    /**\n     * Matches a server definition against a server filter\n     */\n    private instanceMatch(instanceFilter: Glue42Core.AGM.Instance, instanceDefinition: Glue42Core.AGM.Instance): boolean {\n        return this.containsProps(instanceFilter, instanceDefinition);\n    }\n\n    /**\n     * Matches a method definition against a method filter\n     */\n    private methodMatch(methodFilter: Glue42Core.AGM.MethodDefinition, methodDefinition: Glue42Core.AGM.MethodDefinition): boolean {\n        return this.containsProps(methodFilter, methodDefinition);\n    }\n\n    /**\n     * Checks if all properties of filter match properties in object\n     */\n    private containsProps(filter: any, repoMethod: any): boolean {\n        const filterProps = Object.keys(filter)\n            .filter((prop) => {\n                return filter[prop] !== undefined\n                    && filter[prop] !== null\n                    && typeof filter[prop] !== \"function\"\n                    && prop !== \"object_types\"\n                    && prop !== \"display_name\"\n                    && prop !== \"id\"\n                    && prop !== \"gatewayId\"\n                    && prop !== \"identifier\"\n                    && prop[0] !== \"_\";\n            });\n\n        return filterProps.every((prop) => {\n            let isMatch;\n\n            const filterValue = filter[prop];\n            const repoMethodValue = repoMethod[prop];\n\n            switch (prop) {\n                case \"objectTypes\":\n                    // filterValue needs to be a subset of repoMethodValue.\n                    isMatch = ((filterValue || []) as string[]).every((filterValueEl) => {\n                        return ((repoMethodValue || []) as string[]).includes(filterValueEl);\n                    });\n                    break;\n                case \"flags\":\n                    // filterValue needs to be a subset of repoMethodValue.\n                    isMatch = isSubset(repoMethodValue || {}, filterValue || {});\n                    break;\n                default:\n                    isMatch = String(filterValue).toLowerCase() === String(repoMethodValue).toLowerCase();\n            }\n\n            return isMatch;\n        });\n    }\n\n    private getMethods(methodFilter: Glue42Core.AGM.MethodDefinition): ClientMethodInfo[] {\n        if (methodFilter === undefined) {\n            return this.repo.getMethods();\n        }\n\n        const methods = this.repo.getMethods().filter((method) => {\n            return this.methodMatch(methodFilter, method);\n        });\n\n        return methods;\n    }\n\n    private getMethodsForInstance(instanceFilter: Glue42Core.AGM.Instance): ClientMethodInfo[] {\n        const allServers: ServerInfo[] = this.repo.getServers();\n\n        const matchingServers = allServers.filter((server) => {\n            return this.instanceMatch(instanceFilter, server.instance);\n        });\n\n        if (matchingServers.length === 0) {\n            return [];\n        }\n\n        let resultMethodsObject: { [key: string]: ClientMethodInfo } = {};\n\n        if (matchingServers.length === 1) {\n            resultMethodsObject = matchingServers[0].methods;\n        } else {\n            // we have more than one server matching, join all methods\n            matchingServers.forEach((server) => {\n                Object.keys(server.methods).forEach((methodKey) => {\n                    const method = server.methods[methodKey];\n                    // group by method identifier\n                    resultMethodsObject[method.identifier] = method;\n                });\n            });\n        }\n\n        // transform the object to array\n        return Object.keys(resultMethodsObject)\n            .map((key) => {\n                return resultMethodsObject[key];\n            });\n    }\n\n    private getServers(methodFilter?: Glue42Core.AGM.MethodDefinition): ServerMethodsPair[] {\n        const servers = this.repo.getServers();\n\n        // No method - get all getServers\n        if (methodFilter === undefined) {\n            return servers.map((server) => {\n                return { server, methods: [] };\n            });\n        }\n\n        // // Non-existing method - return an empty array\n        // const methods = this.getMethods(methodFilter);\n        // if (methods === undefined) {\n        //     return [];\n        // }\n\n        return servers.reduce<ServerMethodsPair[]>((prev, current) => {\n\n            const methodsForServer = Object.values(current.methods);\n\n            const matchingMethods = methodsForServer.filter((method) => {\n                return this.methodMatch(methodFilter, method);\n            });\n\n            if (matchingMethods.length > 0) {\n                prev.push({ server: current, methods: matchingMethods });\n            }\n\n            return prev;\n        }, []);\n    }\n\n    /**\n     * Returns an array of server-methods pairs for all servers that match the target and have at lease one method matching the method filter\n     */\n    private getServerMethodsByFilterAndTarget(methodFilter: Glue42Core.AGM.MethodDefinition, target: Glue42Core.AGM.InstanceTarget): ServerMethodsPair[] {\n        // get all servers that have method(s) matching the filter\n        const serversMethodMap = this.getServers(methodFilter);\n        // filter the server-method map by target\n        return this.filterByTarget(target, serversMethodMap);\n    }\n\n}\n","import { Protocol } from \"../types\";\nimport { Glue42Core } from \"../../../glue\";\n\nimport { WrappedCallbackFunction, ResultContext, ServerMethodInfo, ServerSubscriptionInfo } from \"./types\";\n\nexport default class ServerSubscription implements Glue42Core.AGM.StreamSubscription {\n\n    constructor(private protocol: Protocol, private repoMethod: ServerMethodInfo, private subscription: ServerSubscriptionInfo) {\n    }\n\n    public get stream(): Glue42Core.AGM.Stream {\n        if (!this.repoMethod.stream) {\n            throw new Error(\"no stream\");\n        }\n        return this.repoMethod.stream;\n    }\n    public get arguments() { return this.subscription.arguments || {}; }\n    public get branchKey(): string { return this.subscription.branchKey; }\n    public get instance(): Glue42Core.AGM.Instance {\n        if (!this.subscription.instance) {\n            throw new Error(\"no instance\");\n        }\n        return this.subscription.instance;\n    }\n\n    public close() {\n        this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);\n    }\n\n    public push(data: object) {\n        this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);\n    }\n}\n","import { Protocol } from \"../types\";\nimport { Glue42Core } from \"../../../glue\";\nimport { ServerMethodInfo, RequestContext } from \"./types\";\n\nexport default class Request implements Glue42Core.AGM.SubscriptionRequest {\n    public arguments: object;\n    public instance: Glue42Core.AGM.Instance;\n\n    constructor(private protocol: Protocol, private repoMethod: ServerMethodInfo, private requestContext: RequestContext) {\n        this.arguments = requestContext.arguments;\n        this.instance = requestContext.instance;\n    }\n\n    public accept() {\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, \"\");\n    }\n\n    public acceptOnBranch(branch: string) {\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);\n    }\n\n    public reject(reason: string) {\n        this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);\n    }\n}\n","import { Protocol } from \"../types\";\r\nimport { ServerMethodInfo, RequestContext, ServerSubscriptionInfo } from \"./types\";\r\nimport ServerSubscription from \"./subscription\";\r\nimport Server from \"./server\";\r\nimport Request from \"./request\";\r\n\r\n/*\r\n The streaming module defines the user objects relevant to the streaming api, and\r\n attaches to relevant events exposed by the protocol.\r\n */\r\nexport default class ServerStreaming {\r\n    constructor(public protocol: Protocol, private server: Server) {\r\n\r\n        /** Attach to stream 'events' */\r\n        protocol.server.onSubRequest((rc, rm) => this.handleSubRequest(rc, rm));\r\n\r\n        protocol.server.onSubAdded((sub, rm) => this.handleSubAdded(sub, rm));\r\n\r\n        protocol.server.onSubRemoved((sub, rm) => this.handleSubRemoved(sub, rm));\r\n    }\r\n\r\n    private handleSubRequest(requestContext: RequestContext, repoMethod: ServerMethodInfo) {\r\n\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRequestHandler === \"function\")) {\r\n            return;\r\n        }\r\n\r\n        const request = new Request(this.protocol, repoMethod, requestContext);\r\n        repoMethod.streamCallbacks.subscriptionRequestHandler(request);\r\n    }\r\n\r\n    private handleSubAdded(subscription: ServerSubscriptionInfo, repoMethod: ServerMethodInfo) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionAddedHandler === \"function\")) {\r\n            return;\r\n        }\r\n\r\n        const sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionAddedHandler(sub);\r\n    }\r\n\r\n    private handleSubRemoved(subscription: ServerSubscriptionInfo, repoMethod: ServerMethodInfo) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === \"function\")) {\r\n            return;\r\n        }\r\n\r\n        const sub = new ServerSubscription(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);\r\n    }\r\n}\r\n","import { Protocol } from \"../types\";\r\nimport { Glue42Core } from \"../../../glue\";\r\nimport ServerSubscription from \"./subscription\";\r\nimport { ServerMethodInfo } from \"./types\";\r\n\r\nexport default class ServerBranch implements Glue42Core.AGM.StreamBranch {\r\n\r\n    constructor(public key: string, private protocol: Protocol, private repoMethod: ServerMethodInfo) {\r\n    }\r\n\r\n    public subscriptions() {\r\n        const subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);\r\n        return subList.map((sub) => {\r\n            return new ServerSubscription(this.protocol, this.repoMethod, sub);\r\n        });\r\n    }\r\n\r\n    public close() {\r\n        this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);\r\n    }\r\n\r\n    public push(data: object) {\r\n        this.protocol.server.pushData(this.repoMethod, data, [this.key]);\r\n    }\r\n}\r\n","import { Glue42Core } from \"../../../glue\";\nimport { Protocol } from \"../types\";\nimport { ServerMethodInfo } from \"./types\";\nimport ServerSubscription from \"./subscription\";\nimport ServerBranch from \"./branch\";\nimport Server from \"./server\";\n\nexport default class ServerStream implements Glue42Core.AGM.Stream {\n    public readonly name: string;\n\n    constructor(private _protocol: Protocol, private _repoMethod: ServerMethodInfo, private _server: Server) {\n        this.name = this._repoMethod.definition.name;\n    }\n\n    public branches(): Glue42Core.AGM.StreamBranch[];\n    public branches(key: string): Glue42Core.AGM.StreamBranch | undefined;\n    public branches(key?: string): Glue42Core.AGM.StreamBranch[] | Glue42Core.AGM.StreamBranch | undefined {\n        const bList: string[] = this._protocol.server.getBranchList(this._repoMethod);\n        if (key) {\n            if (bList.indexOf(key) > -1) {\n                return new ServerBranch(key, this._protocol, this._repoMethod);\n            }\n            return undefined;\n\n        } else {\n            return bList.map((branchKey: string) => {\n                return new ServerBranch(branchKey, this._protocol, this._repoMethod);\n            });\n        }\n    }\n\n    public branch(key: string) {\n        return this.branches(key);\n    }\n\n    public subscriptions(): Glue42Core.AGM.StreamSubscription[] {\n        const subList = this._protocol.server.getSubscriptionList(this._repoMethod);\n        return subList.map((sub) => {\n            return new ServerSubscription(this._protocol, this._repoMethod, sub);\n        });\n    }\n\n    public get definition(): Glue42Core.AGM.MethodDefinition {\n        const def2 = this._repoMethod.definition;\n        return {\n            accepts: def2.accepts,\n            description: def2.description,\n            displayName: def2.displayName,\n            name: def2.name,\n            objectTypes: def2.objectTypes,\n            returns: def2.returns,\n            supportsStreaming: def2.supportsStreaming,\n            flags: def2.flags?.metadata,\n        };\n    }\n\n    public close() {\n        this._protocol.server.closeAllSubscriptions(this._repoMethod);\n        this._server.unregister(this._repoMethod.definition, true);\n    }\n\n    public push(data: object, branches: string[]) {\n        if (typeof branches !== \"string\" && !Array.isArray(branches) && branches !== undefined) {\n            throw new Error(\"invalid branches should be string or string array\");\n        }\n        // TODO validate if is plain object\n        if (typeof data !== \"object\") {\n            throw new Error(\"Invalid arguments. Data must be an object.\");\n        }\n        this._protocol.server.pushData(this._repoMethod, data, branches);\n    }\n\n    public updateRepoMethod(repoMethod: ServerMethodInfo) {\n        this._repoMethod = repoMethod;\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport promisify from \"../helpers/promisify\";\nimport ServerStreaming from \"./streaming\";\nimport { Protocol } from \"../types\";\nimport ServerRepository from \"./repository\";\nimport { Glue42Core } from \"../../../glue\";\nimport { WrappedCallbackFunction, ResultContext, ServerMethodInfo } from \"./types\";\nimport ServerStream from \"./stream\";\n\n/*\n The AGM Server allows users register AGM methods.\n It exposes these methods to AGM clients (using presence messages) and listens for their invocation\n */\nexport default class Server {\n    private streaming: ServerStreaming;\n    private invocations = 0;\n    private currentlyUnregistering: { [method: string]: Promise<void> } = {};\n\n    constructor(private protocol: Protocol, private serverRepository: ServerRepository) {\n        // An array of the server's methods\n        this.streaming = new ServerStreaming(protocol, this);\n\n        this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));\n    }\n\n    // Registers a new streaming agm method\n    public createStream(streamDef: string | Glue42Core.AGM.MethodDefinition, callbacks?: Glue42Core.AGM.StreamOptions, successCallback?: (args?: object) => void, errorCallback?: (error?: string | object) => void, existingStream?: ServerStream): Promise<Glue42Core.AGM.Stream> {\n        // in callbacks we have subscriptionRequestHandler, subscriptionAddedHandler, subscriptionRemovedHandler\n        const promise = new Promise((resolve, reject) => {\n            if (!streamDef) {\n                reject(\"The stream name must be unique! Please, provide either a unique string for a stream name to “glue.interop.createStream()” or a “methodDefinition” object with a unique “name” property for the stream.\");\n                return;\n            }\n\n            // transform to a definition\n            let streamMethodDefinition: Glue42Core.AGM.MethodDefinition;\n\n            // This is important because if you change the name for example this will change here as well and it shouldn't change by reference\n            if (typeof streamDef === \"string\") {\n                streamMethodDefinition = { name: \"\" + streamDef };\n            } else {\n                streamMethodDefinition = { ...streamDef };\n            }\n\n            if (!streamMethodDefinition.name) {\n                return reject(`The “name” property is required for the “streamDefinition” object and must be unique. Stream definition: ${JSON.stringify(streamMethodDefinition)}`);\n            }\n\n            const nameAlreadyExists = this.serverRepository.getList()\n                .some((serverMethod) => serverMethod.definition.name === streamMethodDefinition.name);\n\n            if (nameAlreadyExists) {\n                return reject(`A stream with the name \"${streamMethodDefinition.name}\" already exists! Please, provide a unique name for the stream.`);\n            }\n\n            streamMethodDefinition.supportsStreaming = true;\n\n            // User-supplied subscription callbacks\n            if (!callbacks) {\n                callbacks = {};\n            }\n\n            if (typeof callbacks.subscriptionRequestHandler !== \"function\") {\n                callbacks.subscriptionRequestHandler = (request: Glue42Core.AGM.SubscriptionRequest) => {\n                    request.accept();\n                };\n            }\n            // Add the method\n            const repoMethod = this.serverRepository.add({\n                definition: streamMethodDefinition, // store un-formatted definition for checkups in un-register method\n                streamCallbacks: callbacks,\n                protocolState: {},\n            });\n\n            this.protocol.server.createStream(repoMethod)\n                .then(() => {\n                    let streamUserObject: ServerStream;\n                    if (existingStream) {\n                        streamUserObject = existingStream;\n                        existingStream.updateRepoMethod(repoMethod);\n                    } else {\n                        streamUserObject = new ServerStream(this.protocol, repoMethod, this);\n                    }\n                    repoMethod.stream = streamUserObject;\n                    resolve(streamUserObject);\n                })\n                .catch((err) => {\n                    if (repoMethod.repoId) {\n                        this.serverRepository.remove(repoMethod.repoId);\n                    }\n                    reject(err);\n                });\n        });\n\n        return promisify(promise, successCallback, errorCallback);\n    }\n\n    /**\n     * Registers a new agm method\n     * @param {MethodDefinition} methodDefinition\n     * @param {MethodHandler} callback Callback that will be called when the AGM server is invoked\n     */\n\n    public register(methodDefinition: string | Glue42Core.AGM.MethodDefinition, callback: (args: object, caller: Glue42Core.AGM.Instance) => object | Promise<object>): Promise<void> {\n        if (!methodDefinition) {\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a “methodDefinition” object with a required “name” property.\");\n        }\n\n        if (typeof callback !== \"function\") {\n            return Promise.reject(`The second parameter must be a callback function. Method: ${typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name}`);\n        }\n\n        const wrappedCallbackFunction: WrappedCallbackFunction = async (context: ResultContext, resultCallback: (err: string | undefined, result: object) => void) => {\n            // get the result as direct invocation of the callback and return it using resultCallback\n            try {\n                const result = callback(context.args, context.instance);\n                if (result && typeof (result as any).then === \"function\") {\n                    const resultValue = await result;\n                    resultCallback(undefined, resultValue);\n                } else {\n                    resultCallback(undefined, result);\n                }\n            } catch (e: any) {\n                resultCallback(e ?? \"\", e ?? \"\");\n            }\n        };\n\n        wrappedCallbackFunction.userCallback = callback;\n\n        return this.registerCore(methodDefinition, wrappedCallbackFunction);\n    }\n\n    // registers a new async agm method (the result can be returned in async way)\n    public registerAsync(methodDefinition: string | Glue42Core.AGM.MethodDefinition, callback: (args: object, caller: Glue42Core.AGM.Instance, successCallback: (args?: object) => void, errorCallback: (error?: string | object) => void) => Promise<object> | void): Promise<void> {\n        if (!methodDefinition) {\n            return Promise.reject(\"Method definition is required. Please, provide either a unique string for a method name or a “methodDefinition” object with a required “name” property.\");\n        }\n\n        if (typeof callback !== \"function\") {\n            return Promise.reject(`The second parameter must be a callback function. Method: ${typeof methodDefinition === \"string\" ? methodDefinition : methodDefinition.name}`);\n        }\n\n        const wrappedCallback: WrappedCallbackFunction = (context: ResultContext, resultCallback: (err: string | undefined, result: object | undefined) => void) => {\n            // invoke the callback passing success and error callbacks\n            try {\n                let resultCalled = false;\n                const success = (result?: object) => {\n                    if (!resultCalled) {\n                        resultCallback(undefined, result);\n                    }\n                    resultCalled = true;\n                };\n                const error = (e: any) => {\n                    if (!resultCalled) {\n                        if (!e) {\n                            e = \"\";\n                        }\n                        resultCallback(e, e);\n                    }\n                    resultCalled = true;\n                };\n\n                const methodResult = callback(context.args,\n                    context.instance,\n                    success,\n                    error\n                );\n\n                if (methodResult && typeof methodResult.then === \"function\") {\n                    methodResult\n                        .then(success)\n                        .catch(error);\n                }\n            } catch (e: any) {\n                resultCallback(e, undefined);\n            }\n        };\n        wrappedCallback.userCallbackAsync = callback;\n\n        return this.registerCore(methodDefinition, wrappedCallback);\n    }\n\n    // Unregisters a previously registered AGM method\n    public async unregister(methodFilter: string | Glue42Core.AGM.MethodDefinition, forStream = false): Promise<void> {\n        if (methodFilter === undefined) {\n            return Promise.reject(\"Please, provide either a unique string for a name or an object containing a “name” property.\");\n        }\n\n        // WHEN A FUNCTION IS PASSED\n        if (typeof methodFilter === \"function\") {\n            await this.unregisterWithPredicate(methodFilter, forStream);\n            return;\n        }\n\n        // WHEN string / object is passed\n        let methodDefinition: Glue42Core.AGM.MethodDefinition;\n        if (typeof methodFilter === \"string\") {\n            methodDefinition = { name: methodFilter };\n        } else {\n            methodDefinition = methodFilter;\n        }\n\n        if (methodDefinition.name === undefined) {\n            return Promise.reject(\"Method name is required. Cannot find a method if the method name is undefined!\");\n        }\n\n        const methodToBeRemoved: ServerMethodInfo | undefined = this.serverRepository.getList().find((serverMethod) => {\n            return serverMethod.definition.name === methodDefinition.name\n                && (serverMethod.definition.supportsStreaming || false) === forStream;\n            // return this.containsProps(methodFilter, method.definition);\n        });\n\n        if (!methodToBeRemoved) {\n            return Promise.reject(`Method with a name \"${methodDefinition.name}\" does not exist or is not registered by your application!`);\n        }\n\n        await this.removeMethodsOrStreams([methodToBeRemoved]);\n    }\n\n    private async unregisterWithPredicate(filterPredicate: (methodDefinition: Glue42Core.AGM.MethodDefinition) => ServerMethodInfo, forStream?: boolean) {\n        const methodsOrStreamsToRemove = this.serverRepository.getList()\n            .filter((sm) => filterPredicate(sm.definition))\n            .filter((serverMethod) =>\n                // because both can be undefined or false\n                (serverMethod.definition.supportsStreaming || false) === forStream\n            );\n\n        if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {\n            return Promise.reject(`Could not find a ${forStream ? \"stream\" : \"method\"} matching the specified condition!`);\n        }\n\n        await this.removeMethodsOrStreams(methodsOrStreamsToRemove);\n    }\n\n    private removeMethodsOrStreams(methodsToRemove: ServerMethodInfo[]) {\n        const methodUnregPromises: Promise<void>[] = [];\n\n        methodsToRemove.forEach((method) => {\n            const promise = this.protocol.server.unregister(method)\n                .then(() => {\n                    if (method.repoId) {\n                        this.serverRepository.remove(method.repoId);\n                    }\n                });\n\n            methodUnregPromises.push(promise);\n            this.addAsCurrentlyUnregistering(method.definition.name, promise);\n        });\n\n        return Promise.all(methodUnregPromises);\n    }\n\n    private async addAsCurrentlyUnregistering(methodName: string, promise: Promise<void>) {\n        const timeout = new Promise((resolve) => setTimeout(resolve, 5000));\n\n        // will be cleared when promise resolved\n        this.currentlyUnregistering[methodName] = Promise.race([promise, timeout]).then(() => {\n            delete this.currentlyUnregistering[methodName];\n        });\n    }\n\n    // Core method for registering agm method\n    private async registerCore(method: string | Glue42Core.AGM.MethodDefinition, theFunction: WrappedCallbackFunction): Promise<void> {\n        // transform to a definition\n        let methodDefinition: Glue42Core.AGM.MethodDefinition;\n\n        // This is important because if you change the name for example this will change here as well and it shouldn't change by reference\n        if (typeof method === \"string\") {\n            methodDefinition = { name: \"\" + method };\n        } else {\n            methodDefinition = { ...method };\n        }\n\n        if (!methodDefinition.name) {\n            return Promise.reject(`Please, provide a (unique) string value for the “name” property in the “methodDefinition” object: ${JSON.stringify(method)}`);\n        }\n\n        const unregisterInProgress = this.currentlyUnregistering[methodDefinition.name];\n        if (unregisterInProgress) {\n            await unregisterInProgress;\n        }\n\n        const nameAlreadyExists = this.serverRepository.getList()\n            .some((serverMethod) => serverMethod.definition.name === methodDefinition.name);\n\n        if (nameAlreadyExists) {\n            return Promise.reject(`A method with the name \"${methodDefinition.name}\" already exists! Please, provide a unique name for the method.`);\n        }\n\n        if (methodDefinition.supportsStreaming) {\n            return Promise.reject(`When you create methods with “glue.interop.register()” or “glue.interop.registerAsync()” the property “supportsStreaming” cannot be “true”. If you want “${methodDefinition.name}” to be a stream, please use the “glue.interop.createStream()” method.`);\n        }\n\n        // Add the method ()\n        const repoMethod = this.serverRepository.add({\n            definition: methodDefinition, // store un-formatted definition for checkups in un-register method\n            theFunction,\n            protocolState: {},\n        });\n\n        // make it then .catch for those error/success callbacks\n        return this.protocol.server.register(repoMethod)\n            .catch((err: any) => {\n                if (repoMethod?.repoId) {\n                    this.serverRepository.remove(repoMethod.repoId);\n                }\n                throw err;\n            });\n    }\n\n    private onMethodInvoked(methodToExecute: ServerMethodInfo, invocationId: string, invocationArgs: ResultContext) {\n        if (!methodToExecute || !methodToExecute.theFunction) {\n            return;\n        }\n\n        // Execute it and save the result\n        methodToExecute.theFunction(invocationArgs, (err: any, result) => {\n            if (err !== undefined && err !== null) {\n                // handle error case\n                if (err.message && typeof err.message === \"string\") {\n                    err = err.message;\n                } else if (typeof err !== \"string\") {\n                    try {\n                        err = JSON.stringify(err);\n                    } catch (unStrException) {\n                        err = `un-stringifyable error in onMethodInvoked! Top level prop names: ${Object.keys(err)}`;\n                    }\n                }\n            }\n\n            if (!result) {\n                result = {};\n            } else if (typeof result !== \"object\" || Array.isArray(result)) {\n                // The AGM library only transfers objects. If the result is not an object, put it in one\n                result = { _value: result };\n            }\n\n            this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);\n        });\n    }\n}\n","import generate from \"shortid\";\nimport { Glue42Core } from \"./../../glue\";\n\nexport class InstanceWrapper {\n    private wrapped: Glue42Core.Interop.Instance = {};\n\n    constructor(API: Glue42Core.AGM.API, instance?: Glue42Core.AGM.Instance, connection?: Glue42Core.Connection.API) {\n        this.wrapped.getMethods = function (): Glue42Core.Interop.Method[] {\n            return API.methodsForInstance(this);\n        };\n        this.wrapped.getStreams = function (): Glue42Core.Interop.Method[] {\n            return API.methodsForInstance(this).filter((m) => m.supportsStreaming);\n        };\n\n        if (instance) {\n            this.refreshWrappedObject(instance);\n        }\n        if (connection) {\n            connection.loggedIn(() => {\n                this.refresh(connection);\n            });\n            this.refresh(connection);\n        }\n    }\n\n    public unwrap(): Glue42Core.Interop.Instance {\n        return this.wrapped;\n    }\n\n    private refresh(connection: Glue42Core.Connection.API) {\n        if (!connection) {\n            return;\n        }\n\n        // Apply resolved identity (GW3 case)\n        const resolvedIdentity = connection?.resolvedIdentity;\n        const instance = Object.assign({}, resolvedIdentity ?? {}, { peerId: connection?.peerId });\n        this.refreshWrappedObject(instance);\n    }\n\n    private refreshWrappedObject(resolvedIdentity: Glue42Core.Interop.Instance) {\n        Object.keys(resolvedIdentity).forEach((key) => {\n            (this.wrapped as any)[key] = (resolvedIdentity as any)[key];\n        });\n\n        this.wrapped.user = resolvedIdentity.user;\n        this.wrapped.instance = resolvedIdentity.instance;\n        this.wrapped.application = resolvedIdentity.application ?? generate();\n        this.wrapped.applicationName = resolvedIdentity.applicationName;\n        this.wrapped.pid = resolvedIdentity.pid ?? (resolvedIdentity as any).process ?? Math.floor(Math.random() * 10000000000);\n        this.wrapped.machine = resolvedIdentity.machine;\n        this.wrapped.environment = resolvedIdentity.environment;\n        this.wrapped.region = resolvedIdentity.region;\n        this.wrapped.windowId = resolvedIdentity.windowId;\n        this.wrapped.isLocal = resolvedIdentity.isLocal ?? true;\n        this.wrapped.api = resolvedIdentity.api;\n        this.wrapped.service = resolvedIdentity.service;\n        this.wrapped.peerId = resolvedIdentity.peerId;\n    }\n}\n","/*\n * Repository holding servers and methods visible by this peer including those created by the peer itself.\n */\nimport { default as CallbackRegistryFactory, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42Core } from \"../../../glue\";\nimport { ClientMethodInfo, ServerInfo } from \"./types\";\nimport { MethodInfoMessage } from \"../protocols/gw3/messages\";\nimport { Logger } from \"../../logger/logger\";\nimport { InstanceWrapper } from \"../instance\";\nimport Client from \"./client\";\n\nconst hideMethodSystemFlags = (method: ClientMethodInfo): ClientMethodInfo => {\n    return {\n        ...method,\n        flags: method.flags.metadata || {}\n    };\n};\n\nexport default class ClientRepository {\n\n    // each server has format {id:'', info:{}, methods:{}}\n    // where methods has format {id:'', info:{}}\n    private servers: { [id: string]: ServerInfo } = {};\n    private myServer: ServerInfo;\n\n    // object keyed by method identifier - value is number of servers that offer that method\n    private methodsCount: { [id: string]: number } = {};\n\n    // store for callbacks\n    private callbacks = CallbackRegistryFactory();\n\n    constructor(private logger: Logger, private API: Glue42Core.AGM.API & { unwrappedInstance: InstanceWrapper }) {\n        const peerId = this.API.instance.peerId as string;\n        this.myServer = {\n            id: peerId,\n            methods: {},\n            instance: this.API.instance,\n            wrapper: this.API.unwrappedInstance,\n        };\n        this.servers[peerId] = this.myServer;\n    }\n\n    // add a new server to internal collection\n    public addServer(info: Glue42Core.AGM.Instance, serverId: string): string {\n        this.logger.debug(`adding server ${serverId}`);\n\n        const current = this.servers[serverId];\n        if (current) {\n            return current.id;\n        }\n\n        const wrapper = new InstanceWrapper(this.API, info);\n        const serverEntry: ServerInfo = {\n            id: serverId,\n            methods: {},\n            instance: wrapper.unwrap(),\n            wrapper,\n        };\n\n        this.servers[serverId] = serverEntry;\n        this.callbacks.execute(\"onServerAdded\", serverEntry.instance);\n        return serverId;\n    }\n\n    public removeServerById(id: string, reason?: string) {\n        const server = this.servers[id];\n        if (!server) {\n            // tslint:disable-next-line:no-console\n            this.logger.warn(`not aware of server ${id}, my state ${JSON.stringify(Object.keys(this.servers))}`);\n            return;\n        } else {\n            // tslint:disable-next-line:no-console\n            this.logger.debug(`removing server ${id}`);\n        }\n\n        Object.keys(server.methods).forEach((methodId) => {\n            this.removeServerMethod(id, methodId);\n        });\n\n        delete this.servers[id];\n        this.callbacks.execute(\"onServerRemoved\", server.instance, reason);\n    }\n\n    public addServerMethod(serverId: string, method: MethodInfoMessage) {\n\n        const server = this.servers[serverId];\n        if (!server) {\n            throw new Error(\"server does not exists\");\n        }\n\n        // server already has that method\n        if (server.methods[method.id]) {\n            return;\n        }\n\n        const identifier = this.createMethodIdentifier(method);\n        const that = this;\n        const methodDefinition: ClientMethodInfo = {\n            identifier,\n            gatewayId: method.id,\n            name: method.name,\n            displayName: method.display_name,\n            description: method.description,\n            version: method.version,\n            objectTypes: method.object_types || [],\n            accepts: method.input_signature,\n            returns: method.result_signature,\n            supportsStreaming: typeof method.flags !== \"undefined\" ? method.flags.streaming : false,\n            flags: method.flags ?? {},\n            getServers: () => {\n                return that.getServersByMethod(identifier);\n            }\n        };\n        // now add some legacy stuff\n        (methodDefinition as any).object_types = methodDefinition.objectTypes;\n        (methodDefinition as any).display_name = methodDefinition.displayName;\n        (methodDefinition as any).version = methodDefinition.version;\n\n        server.methods[method.id] = methodDefinition;\n\n        const clientMethodDefinition = hideMethodSystemFlags(methodDefinition);\n\n        // increase the ref and notify listeners\n        if (!this.methodsCount[identifier]) {\n            this.methodsCount[identifier] = 0;\n            this.callbacks.execute(\"onMethodAdded\", clientMethodDefinition);\n        }\n        this.methodsCount[identifier] = this.methodsCount[identifier] + 1;\n\n        this.callbacks.execute(\"onServerMethodAdded\", server.instance, clientMethodDefinition);\n        return methodDefinition;\n    }\n\n    public removeServerMethod(serverId: string, methodId: string) {\n        const server = this.servers[serverId];\n        if (!server) {\n            throw new Error(\"server does not exists\");\n        }\n\n        const method = server.methods[methodId];\n        delete server.methods[methodId];\n\n        const clientMethodDefinition = hideMethodSystemFlags(method);\n\n        // update ref counting\n        this.methodsCount[method.identifier] = this.methodsCount[method.identifier] - 1;\n        if (this.methodsCount[method.identifier] === 0) {\n            this.callbacks.execute(\"onMethodRemoved\", clientMethodDefinition);\n        }\n\n        this.callbacks.execute(\"onServerMethodRemoved\", server.instance, clientMethodDefinition);\n    }\n\n    public getMethods(): ClientMethodInfo[] {\n        return this.extractMethodsFromServers(Object.values(this.servers)).map(hideMethodSystemFlags);\n    }\n\n    public getServers(): ServerInfo[] {\n        return Object.values(this.servers).map(this.hideServerMethodSystemFlags);\n    }\n\n    public onServerAdded(callback: (server: Glue42Core.Interop.Instance) => void): UnsubscribeFunction {\n        const unsubscribeFunc = this.callbacks.add(\"onServerAdded\", callback);\n\n        // because we need the servers shapshot before we exist this stack\n        const serversWithMethodsToReplay = this.getServers().map((s) => s.instance);\n\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, serversWithMethodsToReplay, callback);\n    }\n\n    public onMethodAdded(callback: (method: ClientMethodInfo) => void): UnsubscribeFunction {\n        const unsubscribeFunc = this.callbacks.add(\"onMethodAdded\", callback);\n\n        // because we need the servers snapshot before we return to the application code\n        const methodsToReplay = this.getMethods();\n\n        return this.returnUnsubWithDelayedReplay(unsubscribeFunc, methodsToReplay, callback);\n    }\n\n    public onServerMethodAdded(callback: (server: Glue42Core.AGM.Instance, method: ClientMethodInfo) => void): UnsubscribeFunction {\n        const unsubscribeFunc = this.callbacks.add(\"onServerMethodAdded\", callback);\n\n        // because we want to interrupt the loop with the existing methods\n        let unsubCalled = false;\n\n        // because we need the servers shapshot before we return to the application code\n        const servers = this.getServers();\n\n        // because we want to have the unsub function before the callback is called with all existing methods\n        setTimeout(() => {\n            servers.forEach((server) => {\n                const methods = server.methods;\n                Object.keys(methods).forEach((methodId) => {\n                    if (!unsubCalled) {\n                        callback(server.instance, methods[methodId]);\n                    }\n                });\n            });\n        }, 0);\n\n        return () => {\n            unsubCalled = true;\n            unsubscribeFunc();\n        };\n    }\n\n    public onMethodRemoved(callback: (method: ClientMethodInfo) => void): UnsubscribeFunction {\n        const unsubscribeFunc = this.callbacks.add(\"onMethodRemoved\", callback);\n\n        return unsubscribeFunc;\n    }\n\n    public onServerRemoved(callback: (server: Glue42Core.Interop.Instance, reason: string) => void): UnsubscribeFunction {\n        const unsubscribeFunc = this.callbacks.add(\"onServerRemoved\", callback);\n\n        return unsubscribeFunc;\n    }\n\n    public onServerMethodRemoved(callback: (server: Glue42Core.Interop.Instance, method: ClientMethodInfo) => void): UnsubscribeFunction {\n        const unsubscribeFunc = this.callbacks.add(\"onServerMethodRemoved\", callback);\n\n        return unsubscribeFunc;\n    }\n\n    public getServerById(id: string) {\n        return this.hideServerMethodSystemFlags(this.servers[id]);\n    }\n\n    public reset() {\n        Object.keys(this.servers).forEach((key) => {\n            this.removeServerById(key, \"reset\");\n        });\n        this.servers = {\n            [this.myServer.id]: this.myServer\n        };\n        this.methodsCount = {};\n    }\n\n    private createMethodIdentifier(methodInfo: MethodInfoMessage) {\n        // Setting properties to defaults:\n        const accepts = methodInfo.input_signature ?? \"\";\n        const returns = methodInfo.result_signature ?? \"\";\n        return (methodInfo.name + accepts + returns).toLowerCase();\n    }\n\n    private getServersByMethod(identifier: string): Glue42Core.AGM.Instance[] {\n        const allServers: Glue42Core.AGM.Instance[] = [];\n        Object.values(this.servers).forEach((server) => {\n            Object.values(server.methods).forEach((method) => {\n                if (method.identifier === identifier) {\n                    allServers.push(server.instance);\n                }\n            });\n        });\n        return allServers;\n    }\n\n    // collectionToReplay: because we need a snapshot before we exist this stack\n    private returnUnsubWithDelayedReplay(unsubscribeFunc: UnsubscribeFunction, collectionToReplay: any[], callback: any) {\n\n        // because we want to interrupt the loop with the existing methods\n        let unsubCalled = false;\n\n        // because we want to have the unsub function before the callback is called with all existing methods\n        setTimeout(() => {\n            collectionToReplay.forEach((item) => {\n                if (!unsubCalled) {\n                    callback(item);\n                }\n            });\n        }, 0);\n\n        return () => {\n            unsubCalled = true;\n            unsubscribeFunc();\n        };\n    }\n\n    private hideServerMethodSystemFlags(server: ServerInfo): ServerInfo {\n        const clientMethods: { [name: string]: ClientMethodInfo } = {};\n\n        Object.entries(server.methods).forEach(([name, method]) => {\n            clientMethods[name] = hideMethodSystemFlags(method);\n        });\n\n        return {\n            ...server,\n            methods: clientMethods\n        };\n    }\n\n    private extractMethodsFromServers(servers: ServerInfo[]): ClientMethodInfo[] {\n        const methods = Object.values(servers).reduce<ClientMethodInfo[]>((clientMethods, server) => {\n            return [...clientMethods, ...Object.values(server.methods)];\n        }, []);\n\n        return methods;\n    }\n}\n","/*\n * A store for holding method back-objects registered by this instance's server\n */\nimport { ServerMethodInfo } from \"./types\";\n\nexport default class ServerRepository {\n\n    private nextId = 0;\n    private methods: ServerMethodInfo[] = [];\n\n    public add(method: Partial<ServerMethodInfo>): ServerMethodInfo {\n        method.repoId = String(this.nextId);\n        this.nextId += 1;\n        this.methods.push(method as ServerMethodInfo);\n        return method as ServerMethodInfo;\n    }\n\n    public remove(repoId: string) {\n        if (typeof repoId !== \"string\") {\n            return new TypeError(\"Expecting a string\");\n        }\n\n        this.methods = this.methods.filter((m) => {\n            return m.repoId !== repoId;\n        });\n    }\n\n    public getById(id: string): ServerMethodInfo | undefined {\n        if (typeof id !== \"string\") {\n            return undefined;\n        }\n\n        return this.methods.find((m) => {\n            return m.repoId === id;\n        });\n    }\n\n    public getList() {\n        return this.methods.map((m) => m);\n    }\n\n    public length() {\n        return this.methods.length;\n    }\n\n    public reset() {\n        this.methods = [];\n    }\n}\n","import { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { RequestContext, ServerMethodInfo, ServerSubscriptionInfo } from \"../../server/types\";\nimport ClientRepository from \"../../client/repository\";\nimport ServerRepository from \"../../server/repository\";\nimport {\n    AddInterestMessage,\n    PublishMessage,\n    PostMessage,\n    DropSubscriptionMessage,\n    RemoveInterestMessage\n} from \"./messages\";\nimport { Glue42Core } from \"../../../../glue\";\nimport { Logger } from \"../../../logger/logger\";\n\nconst SUBSCRIPTION_REQUEST = \"onSubscriptionRequest\";\nconst SUBSCRIPTION_ADDED = \"onSubscriptionAdded\";\nconst SUBSCRIPTION_REMOVED = \"onSubscriptionRemoved\";\n\n/**\n * Handles registering methods and sending data to clients\n */\nexport default class ServerStreaming {\n\n    private ERR_URI_SUBSCRIPTION_FAILED = \"com.tick42.agm.errors.subscription.failure\";\n    private callbacks = CallbackRegistryFactory();\n    private nextStreamId = 0;\n\n    constructor(private session: Glue42Core.Connection.GW3DomainSession, private repository: ClientRepository, private serverRepository: ServerRepository) {\n        session.on(\"add-interest\", (msg: AddInterestMessage) => {\n            this.handleAddInterest(msg);\n        });\n        session.on(\"remove-interest\", (msg: RemoveInterestMessage) => {\n            this.handleRemoveInterest(msg);\n        });\n    }\n\n    public acceptRequestOnBranch(requestContext: RequestContext, streamingMethod: ServerMethodInfo, branch: string) {\n        if (typeof branch !== \"string\") {\n            branch = \"\";\n        }\n\n        if (typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\n            throw new TypeError(\"The streaming method is missing its subscriptions.\");\n        }\n\n        if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\n            throw new TypeError(\"The streaming method is missing its branches.\");\n        }\n\n        const streamId = this.getStreamId(streamingMethod, branch);\n\n        // Add a new subscription to the method\n        const key = requestContext.msg.subscription_id;\n\n        const subscription: ServerSubscriptionInfo = {\n            id: key,\n            arguments: requestContext.arguments,\n            instance: requestContext.instance,\n            branchKey: branch,\n            streamId,\n            subscribeMsg: requestContext.msg,\n        };\n\n        streamingMethod.protocolState.subscriptionsMap[key] = subscription;\n\n        // Inform the gw\n        this.session.sendFireAndForget({\n            type: \"accepted\",\n            subscription_id: key,\n            stream_id: streamId,\n        });\n\n        // Pass state above-protocol for user objects\n        this.callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod);\n    }\n\n    public rejectRequest(requestContext: RequestContext, streamingMethod: ServerMethodInfo, reason: string) {\n        if (typeof reason !== \"string\") {\n            reason = \"\";\n        }\n\n        this.sendSubscriptionFailed(\n            \"Subscription rejected by user. \" + reason,\n            requestContext.msg.subscription_id,\n        );\n    }\n\n    public pushData(streamingMethod: ServerMethodInfo, data: object, branches: string | string[]) {\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\n            return;\n        }\n\n        // TODO validate data is a plain object\n        if (typeof data !== \"object\") {\n            throw new Error(\"Invalid arguments. Data must be an object.\");\n        }\n\n        if (typeof branches === \"string\") {\n            branches = [branches]; // user wants to push to single branch\n        } else if (!Array.isArray(branches) || branches.length <= 0) {\n            branches = [];\n        }\n\n        // get the StreamId's from the method's branch map\n        const streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\n            .filter((br) => {\n                if (!branches || branches.length === 0) {\n                    return true;\n                }\n                return branches.indexOf(br.key) >= 0;\n            }).map((br) => {\n                return br.streamId;\n            });\n\n        // if (streamIdList.length === 0) {\n        //     throw new Error(\"0 branches exist with the supplied name/s !\");\n        // }\n\n        streamIdList.forEach((streamId) => {\n            const publishMessage: PublishMessage = {\n                type: \"publish\",\n                stream_id: streamId,\n                // sequence: null,  // the streamingMethod might be used for this\n                // snapshot: false, // ...and this\n                data,\n            };\n\n            this.session.sendFireAndForget(publishMessage);\n        });\n    }\n\n    public pushDataToSingle(method: ServerMethodInfo, subscription: ServerSubscriptionInfo, data: object) {\n        // TODO validate data is a plain object\n        if (typeof data !== \"object\") {\n            throw new Error(\"Invalid arguments. Data must be an object.\");\n        }\n\n        const postMessage: PostMessage = {\n            type: \"post\",\n            subscription_id: subscription.id,\n            // sequence: null,  // the streamingMethod might be used for this\n            // snapshot: false, // ...and this\n            data,\n        };\n\n        this.session.sendFireAndForget(postMessage);\n    }\n\n    public closeSingleSubscription(streamingMethod: ServerMethodInfo, subscription: ServerSubscriptionInfo) {\n\n        if (streamingMethod.protocolState.subscriptionsMap) {\n            delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\n        }\n\n        const dropSubscriptionMessage: DropSubscriptionMessage = {\n            type: \"drop-subscription\",\n            subscription_id: subscription.id,\n            reason: \"Server dropping a single subscription\",\n        };\n\n        this.session.sendFireAndForget(dropSubscriptionMessage);\n\n        const subscriber = subscription.instance;\n\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\n    }\n\n    public closeMultipleSubscriptions(streamingMethod: ServerMethodInfo, branchKey?: string) {\n        if (typeof streamingMethod !== \"object\" || typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\n            return;\n        }\n        if (!streamingMethod.protocolState.subscriptionsMap) {\n            return;\n        }\n\n        const subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\n        let subscriptionsToClose = Object.keys(subscriptionsMap)\n            .map((key) => {\n                return subscriptionsMap[key];\n            });\n\n        if (typeof branchKey === \"string\") {\n            subscriptionsToClose = subscriptionsToClose.filter((sub) => {\n                return sub.branchKey === branchKey;\n            });\n        }\n\n        subscriptionsToClose.forEach((subscription) => {\n            delete subscriptionsMap[subscription.id];\n\n            const drop: DropSubscriptionMessage = {\n                type: \"drop-subscription\",\n                subscription_id: subscription.id,\n                reason: \"Server dropping all subscriptions on stream_id: \" + subscription.streamId,\n            };\n            this.session.sendFireAndForget(drop);\n        });\n    }\n\n    public getSubscriptionList(streamingMethod: ServerMethodInfo, branchKey?: string): ServerSubscriptionInfo[] {\n        if (typeof streamingMethod !== \"object\") {\n            return [];\n        }\n\n        let subscriptions = [];\n        if (!streamingMethod.protocolState.subscriptionsMap) {\n            return [];\n        }\n        const subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\n\n        const allSubscriptions = Object.keys(subscriptionsMap)\n            .map((key) => {\n                return subscriptionsMap[key];\n            });\n\n        if (typeof branchKey !== \"string\") {\n            subscriptions = allSubscriptions;\n        } else {\n            subscriptions = allSubscriptions.filter((sub) => {\n                return sub.branchKey === branchKey;\n            });\n        }\n\n        return subscriptions;\n    }\n\n    public getBranchList(streamingMethod: ServerMethodInfo): string[] {\n        if (typeof streamingMethod !== \"object\") {\n            return [];\n        }\n\n        if (!streamingMethod.protocolState.subscriptionsMap) {\n            return [];\n        }\n        const subscriptionsMap = streamingMethod.protocolState.subscriptionsMap;\n\n        const allSubscriptions =\n            Object.keys(subscriptionsMap)\n                .map((key) => {\n                    return subscriptionsMap[key];\n                });\n\n        const result: string[] = [];\n        allSubscriptions.forEach((sub) => {\n            let branch = \"\";\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\n                branch = sub.branchKey;\n            }\n\n            if (result.indexOf(branch) === -1) {\n                result.push(branch);\n            }\n        });\n\n        return result;\n    }\n\n    public onSubAdded(callback: (subscription: ServerSubscriptionInfo, repoMethod: ServerMethodInfo) => void) {\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED, callback);\n    }\n\n    public onSubRequest(callback: (requestContext: RequestContext, repoMethod: ServerMethodInfo) => void) {\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST, callback);\n    }\n\n    public onSubRemoved(callback: (subscriber: ServerSubscriptionInfo, repoMethod: ServerMethodInfo) => void) {\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED, callback);\n    }\n\n    private handleRemoveInterest(msg: RemoveInterestMessage) {\n        const streamingMethod = this.serverRepository.getById(msg.method_id);\n\n        if (typeof msg.subscription_id !== \"string\" ||\n            typeof streamingMethod !== \"object\") {\n            return;\n        }\n\n        if (!streamingMethod.protocolState.subscriptionsMap) {\n            return;\n        }\n\n        if (typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== \"object\") {\n            return;\n        }\n\n        const subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\n\n        delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\n\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\n    }\n\n    private onSubscriptionLifetimeEvent(eventName: string, handlerFunc: any) {\n        this.callbacks.add(eventName, handlerFunc);\n    }\n\n    private getNextStreamId(): string {\n        return this.nextStreamId++ + \"\";\n    }\n\n    /**\n     * Processes a subscription request\n     */\n    private handleAddInterest(msg: AddInterestMessage) {\n\n        const caller = this.repository.getServerById(msg.caller_id);\n        const instance = caller.instance;\n\n        // call subscriptionRequestHandler\n        const requestContext: RequestContext = {\n            msg,\n            arguments: msg.arguments_kv || {},\n            instance,\n        };\n\n        const streamingMethod = this.serverRepository.getById(msg.method_id);\n\n        if (streamingMethod === undefined) {\n            const errorMsg = \"No method with id \" + msg.method_id + \" on this server.\";\n            this.sendSubscriptionFailed(errorMsg, msg.subscription_id);\n            return;\n        }\n\n        if (streamingMethod.protocolState.subscriptionsMap &&\n            streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {\n            this.sendSubscriptionFailed(\"A subscription with id \" + msg.subscription_id + \" already exists.\",\n                msg.subscription_id,\n            );\n            return;\n        }\n\n        this.callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);\n    }\n\n    private sendSubscriptionFailed(reason: string, subscriptionId: string) {\n        const errorMessage = {\n            type: \"error\",\n            reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,\n            reason,\n            request_id: subscriptionId, // this overrides connection wrapper\n        };\n\n        this.session.sendFireAndForget(errorMessage);\n    }\n\n    private getStreamId(streamingMethod: ServerMethodInfo, branchKey: string) {\n        if (typeof branchKey !== \"string\") {\n            branchKey = \"\";\n        }\n\n        if (!streamingMethod.protocolState.branchKeyToStreamIdMap) {\n            throw new Error(`streaming ${streamingMethod.definition.name} method without protocol state`);\n        }\n\n        const needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter((branch) => {\n            return branch.key === branchKey;\n        })[0];\n\n        let streamId = (needleBranch ? needleBranch.streamId : undefined);\n\n        if (typeof streamId !== \"string\" || streamId === \"\") {\n            streamId = this.getNextStreamId();\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId });\n        }\n\n        return streamId;\n    }\n}\n","import { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport ServerStreaming from \"./server-streaming\";\nimport {\n    InvokeMessage,\n    RegisterMethodMessage,\n    ErrorMessage,\n    YieldMessage,\n    UnregisterMessage,\n    TaggedMessage\n} from \"./messages\";\nimport ServerRepository from \"../../server/repository\";\nimport { Glue42Core } from \"../../../../glue\";\nimport { ServerMethodInfo, ResultContext, ServerSubscriptionInfo, RequestContext } from \"../../server/types\";\nimport ClientRepository from \"../../client/repository\";\nimport { ServerProtocolDefinition } from \"../../types\";\nimport { Logger } from \"../../../logger/logger\";\n\nexport default class ServerProtocol implements ServerProtocolDefinition {\n    private callbacks: CallbackRegistry = CallbackRegistryFactory();\n    private streaming: ServerStreaming;\n\n    constructor(private session: Glue42Core.Connection.GW3DomainSession, private clientRepository: ClientRepository, private serverRepository: ServerRepository, private logger: Logger) {\n        this.streaming = new ServerStreaming(session, clientRepository, serverRepository);\n        this.session.on(\"invoke\", (msg: InvokeMessage) => this.handleInvokeMessage(msg));\n    }\n\n    public createStream(repoMethod: ServerMethodInfo): Promise<void> {\n        // Utility things for this protocol\n        repoMethod.protocolState.subscriptionsMap = {}; // ~subscription_id~ : {id:~, branchKey: '~', arguments: {~}, instance:{~}, etc.}\n        repoMethod.protocolState.branchKeyToStreamIdMap = []; // [ {branchKey: '', streamId: 7}, {...}, ...]\n\n        return this.register(repoMethod, true);\n    }\n\n    public register(repoMethod: ServerMethodInfo, isStreaming?: boolean): Promise<void> {\n        const methodDef = repoMethod.definition;\n        const flags = Object.assign({}, { metadata: methodDef.flags ?? {} }, { streaming: isStreaming || false });\n\n        const registerMsg: RegisterMethodMessage = {\n            type: \"register\",\n            methods: [{\n                id: repoMethod.repoId,\n                name: methodDef.name,\n                display_name: methodDef.displayName,\n                description: methodDef.description,\n                version: methodDef.version,\n                flags,\n                object_types: methodDef.objectTypes || (methodDef as any).object_types, // object_type for backward compatibility\n                input_signature: methodDef.accepts,\n                result_signature: methodDef.returns,\n                restrictions: undefined,\n            }],\n        };\n\n        return this.session.send(registerMsg, { methodId: repoMethod.repoId })\n            .then(() => {\n                this.logger.debug(\"registered method \" + repoMethod.definition.name + \" with id \" + repoMethod.repoId);\n            })\n            .catch((msg: ErrorMessage) => {\n                this.logger.warn(`failed to register method ${repoMethod.definition.name} with id ${repoMethod.repoId} - ${JSON.stringify(msg)}`);\n                throw msg;\n            });\n    }\n\n    public onInvoked(callback: (methodToExecute: ServerMethodInfo, invocationId: string, invocationArgs: ResultContext) => void) {\n        this.callbacks.add(\"onInvoked\", callback);\n    }\n\n    public methodInvocationResult(method: ServerMethodInfo, invocationId: string, err: string, result: object) {\n        let msg: YieldMessage | ErrorMessage;\n        if (err || err === \"\") {\n            msg = {\n                type: \"error\",\n                request_id: invocationId,\n                reason_uri: \"agm.errors.client_error\",\n                reason: err,\n                context: result,\n                peer_id: undefined,\n            };\n        } else {\n            msg = {\n                type: \"yield\",\n                invocation_id: invocationId,\n                peer_id: this.session.peerId,\n                result,\n                request_id: undefined,\n            };\n        }\n        this.session.sendFireAndForget(msg);\n    }\n\n    public async unregister(method: ServerMethodInfo): Promise<void> {\n        const msg: UnregisterMessage = {\n            type: \"unregister\",\n            methods: [method.repoId],\n        };\n\n        await this.session.send(msg);\n    }\n\n    public getBranchList(method: ServerMethodInfo): string[] {\n        return this.streaming.getBranchList(method);\n    }\n\n    public getSubscriptionList(method: ServerMethodInfo, branchKey?: string): ServerSubscriptionInfo[] {\n        return this.streaming.getSubscriptionList(method, branchKey);\n    }\n\n    public closeAllSubscriptions(method: ServerMethodInfo, branchKey?: string): void {\n        this.streaming.closeMultipleSubscriptions(method, branchKey);\n    }\n\n    public pushData(method: ServerMethodInfo, data: object, branches: string[]): void {\n        this.streaming.pushData(method, data, branches);\n    }\n\n    public pushDataToSingle(method: ServerMethodInfo, subscription: ServerSubscriptionInfo, data: object): void {\n        this.streaming.pushDataToSingle(method, subscription, data);\n    }\n\n    public closeSingleSubscription(method: ServerMethodInfo, subscription: ServerSubscriptionInfo): void {\n        this.streaming.closeSingleSubscription(method, subscription);\n    }\n\n    public acceptRequestOnBranch(requestContext: RequestContext, method: ServerMethodInfo, branch: string): void {\n        this.streaming.acceptRequestOnBranch(requestContext, method, branch);\n    }\n\n    public rejectRequest(requestContext: RequestContext, method: ServerMethodInfo, reason: string): void {\n        this.streaming.rejectRequest(requestContext, method, reason);\n    }\n\n    public onSubRequest(callback: (requestContext: RequestContext, repoMethod: ServerMethodInfo) => void): void {\n        this.streaming.onSubRequest(callback);\n    }\n\n    public onSubAdded(callback: (subscription: ServerSubscriptionInfo, repoMethod: ServerMethodInfo) => void): void {\n        this.streaming.onSubAdded(callback);\n    }\n\n    public onSubRemoved(callback: (subscriber: ServerSubscriptionInfo, repoMethod: ServerMethodInfo) => void): void {\n        this.streaming.onSubRemoved(callback);\n    }\n\n    private handleInvokeMessage(msg: InvokeMessage) {\n        const invocationId = msg.invocation_id;\n        const callerId = msg.caller_id;\n        const methodId = msg.method_id;\n        const args = msg.arguments_kv;\n        const methodList = this.serverRepository.getList();\n\n        const method = methodList.filter((m) => {\n            return m.repoId === methodId;\n        })[0];\n\n        // Stop if the message isn't for us\n        if (method === undefined) {\n            return;\n        }\n\n        const client = this.clientRepository.getServerById(callerId).instance;\n        const invocationArgs = { args, instance: client };\n\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\n    }\n}\n","import { Glue42Core } from \"../../../../glue\";\nimport { SubscriptionInner } from \"../../types\";\nimport ClientRepository from \"../../client/repository\";\n\nexport class UserSubscription implements Glue42Core.Interop.Subscription {\n    public get requestArguments() {\n        return this.subscriptionData.params.arguments || {};\n    }\n\n    public get servers(): Glue42Core.Interop.Instance[] {\n        return this.subscriptionData.trackedServers\n            .filter((pair) => pair.subscriptionId)\n            .map((pair) => this.repository.getServerById(pair.serverId).instance);\n    }\n\n    public get serverInstance(): Glue42Core.Interop.Instance {\n        return this.servers[0];\n    }\n\n    public get stream(): Glue42Core.Interop.MethodDefinition {\n        return this.subscriptionData.method;\n    }\n\n    constructor(private repository: ClientRepository, private subscriptionData: SubscriptionInner) {\n    }\n\n    public onData(dataCallback: (data: Glue42Core.Interop.StreamData) => void): void {\n        if (typeof dataCallback !== \"function\") {\n            throw new TypeError(\"The data callback must be a function.\");\n        }\n\n        this.subscriptionData.handlers.onData.push(dataCallback);\n        if (this.subscriptionData.handlers.onData.length === 1 && this.subscriptionData.queued.data.length > 0) {\n            this.subscriptionData.queued.data.forEach((dataItem) => {\n                dataCallback(dataItem);\n            });\n        }\n    }\n\n    public onClosed(closedCallback: (info: Glue42Core.Interop.OnClosedInfo) => void): void {\n        if (typeof closedCallback !== \"function\") {\n            throw new TypeError(\"The callback must be a function.\");\n        }\n        this.subscriptionData.handlers.onClosed.push(closedCallback);\n    }\n\n    public onFailed(callback: (err: any) => void): void {\n        // DO NOTHING\n    }\n\n    public onConnected(callback: (server: Glue42Core.Interop.Instance, reconnect: boolean) => void): void {\n        if (typeof callback !== \"function\") {\n            throw new TypeError(\"The callback must be a function.\");\n        }\n        this.subscriptionData.handlers.onConnected.push(callback);\n    }\n\n    public close(): void {\n        this.subscriptionData.close();\n    }\n\n    public setNewSubscription(newSub: SubscriptionInner) {\n        this.subscriptionData = newSub;\n    }\n}\n","import generate from \"shortid\";\n\nexport class TimedCache<T> {\n\n    private cache: { id: string; element: T }[] = [];\n    private timeoutIds: NodeJS.Timeout[] = [];\n\n    constructor(private readonly config: { ELEMENT_TTL_MS: number }) { }\n\n    public add(element: T): void {\n\n        const id = generate();\n\n        this.cache.push({ id, element });\n\n        const timeoutId = setTimeout(() => {\n\n            const elementIdx = this.cache.findIndex((entry) => entry.id === id);\n\n            if (elementIdx < 0) {\n                return;\n            }\n\n            this.cache.splice(elementIdx, 1);\n\n        }, this.config.ELEMENT_TTL_MS);\n\n        this.timeoutIds.push(timeoutId);\n    }\n\n    public flush(): T[] {\n        const elements = this.cache.map((entry) => entry.element);\n        this.timeoutIds.forEach((id) => clearInterval(id));\n\n        this.cache = [];\n        this.timeoutIds = [];\n\n        return elements;\n    }\n}\n","import { Glue42Core } from \"../../../../glue\";\nimport ClientRepository from \"../../client/repository\";\nimport { ServerMethodsPair } from \"../../client/types\";\nimport * as GW3Messages from \"./messages\";\nimport { SubscriptionCancelledMessage, EventMessage, SubscribedMessage, ErrorSubscribingMessage } from \"./messages\";\nimport { SubscribeError, SubscriptionInner } from \"../../types\";\nimport { Logger } from \"../../../logger/logger\";\nimport { UserSubscription } from \"./subscription\";\nimport { TimedCache } from \"../../../utils/timed-cache\";\n\nconst STATUS_AWAITING_ACCEPT = \"awaitingAccept\"; // not even one server has accepted yet\nconst STATUS_SUBSCRIBED = \"subscribed\"; // at least one server has responded as 'Accepting'\nconst ERR_MSG_SUB_FAILED = \"Subscription failed.\";\nconst ERR_MSG_SUB_REJECTED = \"Subscription rejected.\";\nconst ON_CLOSE_MSG_SERVER_INIT = \"ServerInitiated\";\nconst ON_CLOSE_MSG_CLIENT_INIT = \"ClientInitiated\";\n\n/**\n * Handles registering methods and sending data to clients\n */\nexport default class ClientStreaming {\n\n    private subscriptionsList: { [key: number]: SubscriptionInner } = {};\n    private timedCache: TimedCache<SubscriptionInner> = new TimedCache({ ELEMENT_TTL_MS: 10000 });\n    private subscriptionIdToLocalKeyMap: { [key: string]: number } = {};\n    private nextSubLocalKey = 0;\n\n    constructor(private session: Glue42Core.Connection.GW3DomainSession, private repository: ClientRepository, private logger: Logger) {\n        session.on(\"subscribed\", this.handleSubscribed);\n        session.on(\"event\", this.handleEventData);\n        session.on(\"subscription-cancelled\", this.handleSubscriptionCancelled);\n    }\n\n    public subscribe(streamingMethod: Glue42Core.AGM.MethodDefinition, params: Glue42Core.AGM.SubscriptionParams, targetServers: ServerMethodsPair[], success: (sub: Glue42Core.AGM.Subscription) => void, error: (err: SubscribeError) => void, existingSub: SubscriptionInner) {\n        if (targetServers.length === 0) {\n            error({\n                method: streamingMethod,\n                called_with: params.arguments,\n                message: ERR_MSG_SUB_FAILED + \" No available servers matched the target params.\",\n            });\n            return;\n        }\n\n        // Note: used to find the subscription in subList. Do not confuse it with the gw-generated subscription_id\n        const subLocalKey = this.getNextSubscriptionLocalKey();\n\n        const pendingSub = this.registerSubscription(\n            subLocalKey,\n            streamingMethod,\n            params,\n            success,\n            error,\n            params.methodResponseTimeout || 10000,\n            existingSub\n        );\n\n        if (typeof pendingSub !== \"object\") {\n            error({\n                method: streamingMethod,\n                called_with: params.arguments,\n                message: ERR_MSG_SUB_FAILED + \" Unable to register the user callbacks.\",\n            });\n            return;\n        }\n\n        targetServers.forEach((target) => {\n\n            const serverId = target.server.id;\n            const method = target.methods.find((m) => m.name === streamingMethod.name);\n\n            if (!method) {\n                this.logger.error(`can not find method ${streamingMethod.name} for target ${target.server.id}`);\n                return;\n            }\n\n            pendingSub.trackedServers.push({\n                serverId,\n                subscriptionId: undefined,\n            });\n\n            const msg: GW3Messages.SubscribeMessage = {\n                type: \"subscribe\",\n                server_id: serverId,\n                method_id: method.gatewayId,\n                arguments_kv: params.arguments,\n            };\n\n            this.session.send<SubscribedMessage>(msg, { serverId, subLocalKey })\n                .then((m: SubscribedMessage) => this.handleSubscribed(m))\n                .catch((err: ErrorSubscribingMessage) => this.handleErrorSubscribing(err));\n        });\n    }\n\n    public drainSubscriptions() {\n        const existing = Object.values(this.subscriptionsList);\n        this.subscriptionsList = {};\n        this.subscriptionIdToLocalKeyMap = {};\n        return existing;\n    }\n\n    public drainSubscriptionsCache() {\n        return this.timedCache.flush();\n    }\n\n    private getNextSubscriptionLocalKey() {\n        const current = this.nextSubLocalKey;\n        this.nextSubLocalKey += 1;\n        return current;\n    }\n\n    // This adds subscription and after timeout (30000 default) removes it if it isn't STATUS_SUBSCRIBED\n    private registerSubscription(subLocalKey: number, method: Glue42Core.AGM.MethodDefinition, params: Glue42Core.Interop.SubscriptionParams, success: (sub: Glue42Core.AGM.Subscription) => void, error: (err: SubscribeError) => void, timeout: number, existingSub: SubscriptionInner) {\n        const subsInfo: SubscriptionInner = {\n            localKey: subLocalKey,\n            status: STATUS_AWAITING_ACCEPT,\n            method,\n            params,\n            success,\n            error,\n            trackedServers: [],\n            handlers: {\n                onData: existingSub?.handlers.onData || [],\n                onClosed: existingSub?.handlers.onClosed || [],\n                onConnected: existingSub?.handlers.onConnected || [],\n                // onFailed: []\n            },\n            queued: {\n                data: [],\n                closers: [],\n            },\n            timeoutId: undefined,\n            close: () => this.closeSubscription(subLocalKey),\n            subscription: existingSub?.subscription // only when re-connecting\n        };\n\n        if (!existingSub) {\n            if (params.onData) {\n                subsInfo.handlers.onData.push(params.onData);\n            }\n            if (params.onClosed) {\n                subsInfo.handlers.onClosed.push(params.onClosed);\n            }\n            if (params.onConnected) {\n                subsInfo.handlers.onConnected.push(params.onConnected);\n            }\n        }\n\n        this.subscriptionsList[subLocalKey] = subsInfo;\n\n        subsInfo.timeoutId = setTimeout(() => {\n            if (this.subscriptionsList[subLocalKey] === undefined) {\n                return; // no such subscription\n            }\n\n            const pendingSub = this.subscriptionsList[subLocalKey];\n\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\n                error({\n                    method,\n                    called_with: params.arguments,\n                    message: ERR_MSG_SUB_FAILED + \" Subscription attempt timed out after \" + timeout + \" ms.\",\n                });\n\n                // None of the target servers has answered the subscription attempt\n                delete this.subscriptionsList[subLocalKey];\n\n            } else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {\n                // Clean the trackedServers, removing those without valid streamId\n                pendingSub.trackedServers = pendingSub.trackedServers.filter((server) => {\n                    return (typeof server.subscriptionId !== \"undefined\");\n                });\n\n                delete pendingSub.timeoutId;\n\n                if (pendingSub.trackedServers.length <= 0) {\n                    // There are no open streams, some servers accepted then closed very quickly\n                    //  (that's why the status changed but there's no good server with a StreamId)\n\n                    // call the onClosed handlers\n                    this.callOnClosedHandlers(pendingSub);\n\n                    delete this.subscriptionsList[subLocalKey];\n                }\n            }\n        }, timeout);\n\n        return subsInfo;\n    }\n\n    private handleErrorSubscribing = (errorResponse: ErrorSubscribingMessage) => {\n        const tag = errorResponse._tag;\n        const subLocalKey = tag.subLocalKey;\n        const pendingSub = this.subscriptionsList[subLocalKey];\n\n        if (typeof pendingSub !== \"object\") {\n            return;\n        }\n\n        pendingSub.trackedServers = pendingSub.trackedServers.filter((server) => {\n            return server.serverId !== tag.serverId;\n        });\n\n        if (pendingSub.trackedServers.length <= 0) {\n            clearTimeout(pendingSub.timeoutId);\n\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\n                // Reject with reason\n                const reason = (typeof errorResponse.reason === \"string\" && errorResponse.reason !== \"\") ?\n                    ' Publisher said \"' + errorResponse.reason + '\".' :\n                    \" No reason given.\";\n\n                const callArgs = typeof pendingSub.params.arguments === \"object\" ?\n                    JSON.stringify(pendingSub.params.arguments) :\n                    \"{}\";\n\n                pendingSub.error({\n                    message: ERR_MSG_SUB_REJECTED + reason + \" Called with:\" + callArgs,\n                    called_with: pendingSub.params.arguments,\n                    method: pendingSub.method,\n                });\n\n            } else if (pendingSub.status === STATUS_SUBSCRIBED) {\n                // The timeout may or may not have expired yet,\n                // but the status is 'subscribed' and trackedServers is now empty\n\n                this.callOnClosedHandlers(pendingSub);\n            }\n\n            delete this.subscriptionsList[subLocalKey];\n        }\n    }\n\n    private handleSubscribed = (msg: SubscribedMessage) => {\n        const subLocalKey = msg._tag.subLocalKey;\n        const pendingSub = this.subscriptionsList[subLocalKey];\n\n        if (typeof pendingSub !== \"object\") {\n            return;\n        }\n        const serverId = msg._tag.serverId;\n\n        // Add a subscription_id to this trackedServer\n\n        const acceptingServer = pendingSub.trackedServers\n            .filter((server) => {\n                return server.serverId === serverId;\n            })[0];\n\n        if (typeof acceptingServer !== \"object\") {\n            return;\n        }\n\n        acceptingServer.subscriptionId = msg.subscription_id;\n        this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;\n\n        const isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);\n\n        pendingSub.status = STATUS_SUBSCRIBED;\n\n        if (isFirstResponse) {\n            let reconnect: boolean = false;\n            let sub = pendingSub.subscription;\n            if (sub) {\n                // re-connect case, we already have subscription object\n                sub.setNewSubscription(pendingSub);\n                pendingSub.success(sub);\n                reconnect = true;\n            } else {\n                sub = new UserSubscription(this.repository, pendingSub);\n                pendingSub.subscription = sub;\n                // Pass in the subscription object\n                pendingSub.success(sub);\n            }\n\n            for (const handler of pendingSub.handlers.onConnected) {\n                try {\n                    handler(sub.serverInstance, reconnect);\n                } catch (e) {\n                    // DO nothing\n                }\n            }\n        }\n    }\n\n    private handleEventData = (msg: EventMessage) => {\n\n        const subLocalKey = this.subscriptionIdToLocalKeyMap[msg.subscription_id];\n\n        if (typeof subLocalKey === \"undefined\") {\n            return;\n        }\n\n        const subscription = this.subscriptionsList[subLocalKey];\n\n        if (typeof subscription !== \"object\") {\n            return;\n        }\n\n        const trackedServersFound = subscription.trackedServers.filter((server) => {\n            return server.subscriptionId === msg.subscription_id;\n        });\n\n        if (trackedServersFound.length !== 1) {\n            return;\n        }\n\n        // out_of_band. (main stream band)\n        const isPrivateData = msg.oob;\n\n        const sendingServerId = trackedServersFound[0].serverId;\n\n        // Create the arrivedData object, new object for each handler call\n        const receivedStreamData = (): Glue42Core.AGM.StreamData => {\n            return {\n                data: msg.data,\n                server: this.repository.getServerById(sendingServerId).instance,\n                requestArguments: subscription.params.arguments,\n                message: undefined,\n                private: isPrivateData,\n            };\n        };\n\n        const onDataHandlers = subscription.handlers.onData;\n        const queuedData = subscription.queued.data;\n\n        if (onDataHandlers.length > 0) {\n            onDataHandlers.forEach((callback) => {\n                if (typeof callback === \"function\") {\n                    callback(receivedStreamData());\n                }\n            });\n        } else {\n            queuedData.push(receivedStreamData());\n        }\n    }\n\n    // called only on stream.close() multiple times for each subscription\n    private handleSubscriptionCancelled = (msg: SubscriptionCancelledMessage) => {\n        const subLocalKey = this.subscriptionIdToLocalKeyMap[msg.subscription_id];\n\n        if (typeof subLocalKey === \"undefined\") {\n            return;\n        }\n\n        const subscription = this.subscriptionsList[subLocalKey];\n\n        if (typeof subscription !== \"object\") {\n            return;\n        }\n\n        // Filter tracked servers\n        const expectedNewLength = subscription.trackedServers.length - 1;\n\n        subscription.trackedServers = subscription.trackedServers.filter((server) => {\n            if (server.subscriptionId === msg.subscription_id) {\n                subscription.queued.closers.push(server.serverId);\n                return false;\n            } else {\n                return true;\n            }\n        });\n\n        // Check if a server was actually removed\n        if (subscription.trackedServers.length !== expectedNewLength) {\n            // TODO: Log some error\n            return;\n        }\n\n        // Check if this was the last remaining server\n        if (subscription.trackedServers.length <= 0) {\n            // this timed cache is used to ensure re-subscribing when reconnecting using a different transport and a different gateway than the default\n            this.timedCache.add(subscription);\n\n            clearTimeout(subscription.timeoutId);\n            this.callOnClosedHandlers(subscription);\n            delete this.subscriptionsList[subLocalKey];\n        }\n\n        delete this.subscriptionIdToLocalKeyMap[msg.subscription_id];\n    }\n\n    private callOnClosedHandlers(subscription: SubscriptionInner, reason?: string) {\n\n        const closersCount = subscription.queued.closers.length;\n        const closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\n\n        let closingServer: Glue42Core.AGM.Instance;\n        if (closingServerId !== undefined && typeof closingServerId === \"string\") {\n            closingServer = this.repository.getServerById(closingServerId).instance;\n        }\n\n        subscription.handlers.onClosed.forEach((callback) => {\n            if (typeof callback !== \"function\") {\n                return;\n            }\n\n            callback({\n                message: reason || ON_CLOSE_MSG_SERVER_INIT,\n                requestArguments: subscription.params.arguments || {},\n                server: closingServer,\n                stream: subscription.method,\n            });\n        });\n    }\n\n    // called on client/server close (not on stream.close)\n    private closeSubscription(subLocalKey: number) {\n        const subscription = this.subscriptionsList[subLocalKey];\n\n        if (typeof subscription !== \"object\") {\n            return;\n        }\n\n        // Tell each server that we're unsubscribing\n        subscription.trackedServers.forEach((server) => {\n            if (typeof server.subscriptionId === \"undefined\") {\n                return;\n            }\n\n            subscription.queued.closers.push(server.serverId);\n\n            this.session.sendFireAndForget({\n                type: \"unsubscribe\",\n                subscription_id: server.subscriptionId,\n                reason_uri: \"\",\n                reason: ON_CLOSE_MSG_CLIENT_INIT,\n            });\n\n            delete this.subscriptionIdToLocalKeyMap[server.subscriptionId];\n        });\n\n        subscription.trackedServers = [];\n\n        this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);\n\n        delete this.subscriptionsList[subLocalKey];\n    }\n}\n","import ClientStreaming from \"./client-streaming\";\nimport {\n    CallMessage,\n    ErrorMessage,\n    MethodsAddedMessage,\n    MethodsRemovedMessage,\n    PeerAddedMessage,\n    PeerRemovedMessage,\n    ResultMessage,\n    MethodInfoMessage\n} from \"./messages\";\nimport { Glue42Core } from \"../../../../glue\";\nimport ClientRepository from \"../../client/repository\";\nimport { ClientMethodInfo, ServerInfo, ServerMethodsPair } from \"../../client/types\";\nimport { ClientProtocolDefinition, SubscribeError, SubscriptionInner } from \"../../types\";\nimport { InvokeResultMessage, InvokeStatus } from \"../../client/client\";\nimport { Logger } from \"../../../logger/logger\";\n\n/**\n * Handles session lifetime and events\n */\nexport default class ClientProtocol implements ClientProtocolDefinition {\n\n    private streaming: ClientStreaming;\n\n    constructor(private session: Glue42Core.Connection.GW3DomainSession, private repository: ClientRepository, private logger: Logger) {\n        session.on(\"peer-added\", (msg: PeerAddedMessage) => this.handlePeerAdded(msg));\n        session.on(\"peer-removed\", (msg: PeerRemovedMessage) => this.handlePeerRemoved(msg));\n        session.on(\"methods-added\", (msg: MethodsAddedMessage) => this.handleMethodsAddedMessage(msg));\n        session.on(\"methods-removed\", (msg: MethodsRemovedMessage) => this.handleMethodsRemovedMessage(msg));\n\n        this.streaming = new ClientStreaming(session, repository, logger);\n    }\n\n    public subscribe(stream: Glue42Core.AGM.MethodDefinition, options: Glue42Core.AGM.SubscriptionParams, targetServers: ServerMethodsPair[], success: (sub: Glue42Core.AGM.Subscription) => void, error: (err: SubscribeError) => void, existingSub: SubscriptionInner): void {\n        this.streaming.subscribe(stream, options, targetServers, success, error, existingSub);\n    }\n\n    public invoke(id: string, method: ClientMethodInfo, args: object, target: ServerInfo): Promise<InvokeResultMessage> {\n\n        const serverId = target.id;\n        const methodId = method.gatewayId;\n        const msg: CallMessage = {\n            type: \"call\",\n            server_id: serverId,\n            method_id: methodId,\n            arguments_kv: args,\n        };\n\n        // we transfer the invocation id as tag\n        return this.session.send<ResultMessage>(msg, { invocationId: id, serverId })\n            .then((m: ResultMessage) => this.handleResultMessage(m))\n            .catch((err) => this.handleInvocationError(err));\n    }\n\n    public drainSubscriptions(): SubscriptionInner[] {\n        return this.streaming.drainSubscriptions();\n    }\n\n    public drainSubscriptionsCache(): SubscriptionInner[] {\n        return this.streaming.drainSubscriptionsCache();\n    }\n\n    private handlePeerAdded(msg: PeerAddedMessage) {\n        const newPeerId = msg.new_peer_id;\n        const remoteId = msg.identity;\n        const isLocal = msg.meta ? msg.meta.local : true;\n        const pid = Number(remoteId.process);\n\n        const serverInfo: Glue42Core.AGM.Instance = {\n            machine: remoteId.machine,\n            pid: isNaN(pid) ? remoteId.process : pid,\n            instance: remoteId.instance,\n            application: remoteId.application,\n            applicationName: remoteId.applicationName,\n            environment: remoteId.environment,\n            region: remoteId.region,\n            user: remoteId.user,\n            windowId: remoteId.windowId,\n            peerId: newPeerId,\n            api: remoteId.api,\n            isLocal\n        };\n\n        this.repository.addServer(serverInfo, newPeerId);\n    }\n\n    private handlePeerRemoved(msg: PeerRemovedMessage) {\n        const removedPeerId = msg.removed_id;\n        const reason = msg.reason;\n\n        this.repository.removeServerById(removedPeerId, reason);\n    }\n\n    private handleMethodsAddedMessage(msg: MethodsAddedMessage) {\n        const serverId = msg.server_id;\n        const methods = msg.methods;\n\n        methods.forEach((method: MethodInfoMessage) => {\n            this.repository.addServerMethod(serverId, method);\n        });\n    }\n\n    private handleMethodsRemovedMessage(msg: MethodsRemovedMessage) {\n        const serverId = msg.server_id;\n        const methodIdList = msg.methods;\n\n        const server = this.repository.getServerById(serverId);\n        const serverMethodKeys = Object.keys(server.methods);\n\n        serverMethodKeys.forEach((methodKey) => {\n            const method = server.methods[methodKey];\n            if (methodIdList.indexOf(method.gatewayId) > -1) {\n                this.repository.removeServerMethod(serverId, methodKey);\n            }\n        });\n    }\n\n    private handleResultMessage(msg: ResultMessage): InvokeResultMessage {\n        const invocationId = msg._tag.invocationId;\n        const result = msg.result;\n        const serverId = msg._tag.serverId;\n        const server = this.repository.getServerById(serverId);\n\n        return {\n            invocationId,\n            result,\n            instance: server.instance,\n            status: InvokeStatus.Success,\n            message: \"\"\n        };\n    }\n\n    private handleInvocationError(msg: ErrorMessage | Error): InvokeResultMessage {\n        this.logger.debug(`handle invocation error ${JSON.stringify(msg)}`);\n\n        if (\"_tag\" in msg) {\n            const invocationId = msg._tag.invocationId;\n            const serverId = msg._tag.serverId;\n            const server = this.repository.getServerById(serverId);\n            const message = msg.reason;\n            const context = msg.context;\n\n            return {\n                invocationId,\n                result: context,\n                instance: server.instance,\n                status: InvokeStatus.Error,\n                message\n            };\n        } else {\n            return {\n                invocationId: \"\",\n                message: (msg as Error).message,\n                status: InvokeStatus.Error,\n                error: msg as Error\n            };\n        }\n    }\n}\n","import ServerProtocol from \"./server\";\nimport ClientProtocol from \"./client\";\nimport { Glue42Core } from \"../../../../glue\";\nimport ClientRepository from \"../../client/repository\";\nimport ServerRepository from \"../../server/repository\";\nimport Interop from \"../../interop\";\nimport { Protocol, InteropSettings } from \"../../types\";\nimport Connection from \"../../../connection/connection\";\n\nexport default function (instance: Glue42Core.AGM.Instance, connection: Connection, clientRepository: ClientRepository, serverRepository: ServerRepository, libConfig: InteropSettings, interop: Interop): Promise<Protocol> {\n    const logger = libConfig.logger.subLogger(\"gw3-protocol\");\n    let resolveReadyPromise: ((p: Protocol) => void) | undefined;\n\n    const readyPromise = new Promise<Protocol>((resolve) => {\n        resolveReadyPromise = resolve;\n    });\n\n    // start domain join handshake\n    const session = connection.domain(\"agm\", [\"subscribed\"]);\n\n    const server = new ServerProtocol(session, clientRepository, serverRepository, logger.subLogger(\"server\"));\n    const client = new ClientProtocol(session, clientRepository, logger.subLogger(\"client\"));\n\n    async function handleReconnect(): Promise<void> {\n        // we're reconnecting\n        logger.info(\"reconnected - will replay registered methods and subscriptions\");\n\n        client.drainSubscriptionsCache().forEach((sub) => {\n            const methodInfo = sub.method;\n            const params = Object.assign({}, sub.params);\n\n            logger.info(`trying to soft-re-subscribe to method ${methodInfo.name}, with params: ${JSON.stringify(params)}`);\n\n            interop.client.subscribe(methodInfo, params, undefined, undefined, sub).then(() => logger.info(`soft-subscribing to method ${methodInfo.name} DONE`)).catch((error) => logger.warn(`subscribing to method ${methodInfo.name} failed: ${JSON.stringify(error)}}`));\n        });\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const reconnectionPromises: Promise<any>[] = [];\n\n        const existingSubscriptions = client.drainSubscriptions();\n\n        for (const sub of existingSubscriptions) {\n            const methodInfo = sub.method;\n            const params = Object.assign({}, sub.params);\n            // remove handlers, otherwise they will be added twice\n            logger.info(`trying to re-subscribe to method ${methodInfo.name}, with params: ${JSON.stringify(params)}`);\n\n            reconnectionPromises.push(\n                interop.client.subscribe(methodInfo, params, undefined, undefined, sub).then(() => logger.info(`subscribing to method ${methodInfo.name} DONE`))\n            );\n\n        }\n\n        // server side\n        const registeredMethods = serverRepository.getList();\n        serverRepository.reset();\n\n        // replay server methods\n        for (const method of registeredMethods) {\n            const def = method.definition;\n            logger.info(`re-publishing method ${def.name}`);\n\n            if (method.stream) {\n                // streaming method\n                reconnectionPromises.push(\n                    interop.server.createStream(def, method.streamCallbacks, undefined, undefined, method.stream).then(() => logger.info(`subscribing to method ${def.name} DONE`))\n                );\n            } else if (method.theFunction && method.theFunction.userCallback) {\n                reconnectionPromises.push(\n                    interop.register(def, method.theFunction.userCallback).then(() => logger.info(`subscribing to method ${def.name} DONE`))\n                );\n            } else if (method.theFunction && method.theFunction.userCallbackAsync) {\n                reconnectionPromises.push(\n                    interop.registerAsync(def, method.theFunction.userCallbackAsync).then(() => logger.info(`subscribing to method ${def.name} DONE`))\n                );\n            }\n\n            logger.info(`re-publishing method ${def.name} DONE`);\n        }\n\n        await Promise.all(reconnectionPromises);\n\n        logger.info(\"Interop is re-announced\");\n    }\n\n    function handleInitialJoin() {\n        if (resolveReadyPromise) {\n            resolveReadyPromise({\n                client,\n                server,\n            });\n\n            resolveReadyPromise = undefined;\n        }\n    }\n\n    session.onJoined((reconnect) => {\n        // add our server to the client repository\n        clientRepository.addServer(instance, connection.peerId);\n\n        if (reconnect) {\n            handleReconnect().then(() => connection.setLibReAnnounced({ name: \"interop\" })).catch((error) => logger.warn(`Error while re-announcing interop: ${JSON.stringify(error)}`));\n        } else {\n            handleInitialJoin();\n        }\n    });\n\n    session.onLeft(() => {\n        // reset the client repository when the connection is down\n        clientRepository.reset();\n    });\n\n    session.join();\n\n    return readyPromise;\n}\n","import Client from \"./client/client\";\nimport Server from \"./server/server\";\nimport { Protocol, SubscribeError, InteropSettings } from \"./types\";\nimport { Glue42Core } from \"../../glue\";\nimport ClientRepository from \"./client/repository\";\nimport ServerRepository from \"./server/repository\";\nimport { UnsubscribeFunction } from \"callback-registry\";\nimport gW3ProtocolFactory from \"./protocols/gw3/factory\";\nimport { InstanceWrapper } from \"./instance\";\nimport { PromiseWrapper } from \"../utils/pw\";\n\nexport default class Interop implements Glue42Core.AGM.API {\n    public instance: Glue42Core.AGM.Instance;\n    public readyPromise: Promise<Interop>;\n\n    public client!: Client;\n    public server!: Server;\n    public unwrappedInstance: InstanceWrapper;\n    private protocol!: Protocol;\n    private clientRepository: ClientRepository;\n    private serverRepository: ServerRepository;\n\n    constructor(configuration: InteropSettings) {\n        if (typeof configuration === \"undefined\") {\n            throw new Error(\"configuration is required\");\n        }\n\n        if (typeof configuration.connection === \"undefined\") {\n            throw new Error(\"configuration.connections is required\");\n        }\n\n        const connection = configuration.connection;\n\n        if (typeof configuration.methodResponseTimeout !== \"number\") {\n            configuration.methodResponseTimeout = 30 * 1000;\n        }\n        if (typeof configuration.waitTimeoutMs !== \"number\") {\n            configuration.waitTimeoutMs = 30 * 1000;\n        }\n\n        // Initialize our modules\n        this.unwrappedInstance = new InstanceWrapper(this, undefined, connection);\n        this.instance = this.unwrappedInstance.unwrap();\n        this.clientRepository = new ClientRepository(configuration.logger.subLogger(\"cRep\"), this);\n        this.serverRepository = new ServerRepository();\n        let protocolPromise: Promise<Protocol>;\n\n        if (connection.protocolVersion === 3) {\n            protocolPromise = gW3ProtocolFactory(this.instance, connection, this.clientRepository, this.serverRepository, configuration, this);\n        } else {\n            throw new Error(`protocol ${connection.protocolVersion} not supported`);\n        }\n\n        // wait for protocol to resolve\n        this.readyPromise = protocolPromise.then((protocol: Protocol) => {\n            this.protocol = protocol;\n            this.client = new Client(this.protocol, this.clientRepository, this.instance, configuration);\n            this.server = new Server(this.protocol, this.serverRepository);\n            return this;\n        });\n    }\n\n    public ready() {\n        return this.readyPromise;\n    }\n\n    public serverRemoved(callback: (instance: Glue42Core.AGM.Instance, reason: string) => void): UnsubscribeFunction {\n        return this.client.serverRemoved(callback);\n    }\n\n    public serverAdded(callback: (instance: Glue42Core.AGM.Instance) => void): UnsubscribeFunction {\n        return this.client.serverAdded(callback);\n    }\n\n    public serverMethodRemoved(callback: (info: { server: Glue42Core.AGM.Instance; method: Glue42Core.AGM.Method; }) => void): UnsubscribeFunction {\n        return this.client.serverMethodRemoved(callback);\n    }\n\n    public serverMethodAdded(callback: (info: { server: Glue42Core.AGM.Instance; method: Glue42Core.AGM.Method; }) => void): UnsubscribeFunction {\n        return this.client.serverMethodAdded(callback);\n    }\n\n    public methodRemoved(callback: (def: Glue42Core.AGM.Method) => void): UnsubscribeFunction {\n        return this.client.methodRemoved(callback);\n    }\n\n    public methodAdded(callback: (def: Glue42Core.AGM.Method) => void): UnsubscribeFunction {\n        return this.client.methodAdded(callback);\n    }\n\n    public methodsForInstance(instance: Glue42Core.AGM.Instance): Glue42Core.Interop.Method[] {\n        return this.client.methodsForInstance(instance);\n    }\n\n    public methods(methodFilter: Glue42Core.AGM.MethodDefinition): Glue42Core.Interop.Method[] {\n        return this.client.methods(methodFilter);\n    }\n\n    public servers(methodFilter: Glue42Core.AGM.MethodDefinition): Glue42Core.AGM.Instance[] {\n        return this.client.servers(methodFilter);\n    }\n\n    public subscribe(method: string, options: Glue42Core.AGM.SubscriptionParams, successCallback?: (subscription: Glue42Core.AGM.Subscription) => void, errorCallback?: (err: SubscribeError) => void): Promise<Glue42Core.AGM.Subscription> {\n        return this.client.subscribe(method, options, successCallback, errorCallback);\n    }\n\n    public createStream(streamDef: string | Glue42Core.AGM.MethodDefinition, callbacks: Glue42Core.AGM.StreamOptions, successCallback?: (args?: object) => void, errorCallback?: (error?: string | object) => void): Promise<Glue42Core.AGM.Stream> {\n        return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);\n    }\n\n    public unregister(methodFilter: string | Glue42Core.AGM.MethodDefinition): Promise<void> {\n        return this.server.unregister(methodFilter);\n    }\n\n    public registerAsync(methodDefinition: string | Glue42Core.AGM.MethodDefinition, callback: (args: any, caller: Glue42Core.AGM.Instance, successCallback: (args?: any) => void, errorCallback: (error?: string | object) => void) => void): Promise<void> {\n        return this.server.registerAsync(methodDefinition, callback);\n    }\n\n    public register(methodDefinition: string | Glue42Core.AGM.MethodDefinition, callback: (args: any, caller: Glue42Core.AGM.Instance) => any | Promise<void>): Promise<void> {\n        return this.server.register(methodDefinition, callback);\n    }\n\n    public invoke(methodFilter: string | Glue42Core.AGM.MethodDefinition, argumentObj?: object, target?: Glue42Core.AGM.InstanceTarget | Glue42Core.AGM.Instance | Glue42Core.AGM.Instance[], additionalOptions?: Glue42Core.AGM.InvokeOptions, success?: (result: Glue42Core.AGM.InvocationResult<any>) => void, error?: (error: { method: Glue42Core.AGM.MethodDefinition; called_with: object; executed_by: Glue42Core.AGM.Instance; message: string; status: number; returned: object; }) => void): Promise<Glue42Core.AGM.InvocationResult<any>> {\n        return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\n    }\n\n    public waitForMethod(name: string): Promise<Glue42Core.Interop.Method> {\n        const pw = new PromiseWrapper<Glue42Core.Interop.Method>();\n        const unsubscribe = this.client.methodAdded((m) => {\n            if (m.name === name) {\n                unsubscribe();\n                pw.resolve(m);\n            }\n        });\n\n        return pw.promise;\n    }\n}\n","import { Glue42Core } from \"../../glue\";\nimport Connection from \"../connection/connection\";\nimport { Logger } from \"../logger/logger\";\n\nexport interface BusSettings {\n    connection: Connection;\n    logger: Logger;\n}\ninterface SubscriptionEntry {\n    subscription_id: string;\n    topic: string;\n    callback: (data: object, topic: string, source: Glue42Core.Interop.Instance) => void;\n    source?: object;\n}\n\nconst successMessages = [\"subscribed\", \"success\"];\n\nexport class MessageBus implements Glue42Core.Bus.API {\n    public connection: Connection;\n    public logger: Logger;\n    public peerId: string;\n    public session: Glue42Core.Connection.GW3DomainSession;\n    public subscriptions: SubscriptionEntry[];\n    public readyPromise: Promise<object>;\n\n    constructor(connection: Connection, logger: Logger) {\n        this.connection = connection;\n        this.logger = logger;\n        this.peerId = connection.peerId;\n        this.subscriptions = [];\n        this.session = connection.domain(\"bus\", successMessages);\n        this.readyPromise = this.session.join();\n        this.readyPromise.then(() => {\n            this.watchOnEvent();\n        });\n    }\n\n    public ready() {\n        return this.readyPromise;\n    }\n\n    public publish = (topic: string, data: object, options?: Glue42Core.Bus.MessageOptions): void => {\n        const { routingKey, target } = options || {} as any;\n        const args = this.removeEmptyValues({\n            type: \"publish\",\n            topic,\n            data,\n            peer_id: this.peerId,\n            routing_key: routingKey,\n            target_identity: target\n        });\n        this.session.send(args);\n    }\n\n    public subscribe = (\n        topic: string,\n        callback: (data: object, topic: string, source: object) => void,\n        options?: Glue42Core.Bus.MessageOptions\n    ): Promise<Glue42Core.Bus.Subscription> => {\n        return new Promise((resolve, reject) => {\n            const { routingKey, target } = options || {} as any;\n            const args = this.removeEmptyValues({\n                type: \"subscribe\",\n                topic,\n                peer_id: this.peerId,\n                routing_key: routingKey,\n                source: target\n            });\n\n            this.session.send(args)\n                .then((response: any) => {\n                    const { subscription_id } = response;\n                    this.subscriptions.push({ subscription_id, topic, callback, source: target });\n\n                    resolve({\n                        unsubscribe: () => {\n                            this.session.send({ type: \"unsubscribe\", subscription_id, peer_id: this.peerId });\n                            this.subscriptions = this.subscriptions.filter((s) => s.subscription_id !== subscription_id);\n                            return Promise.resolve();\n                        }\n                    });\n                })\n                .catch((error: any) => reject(error));\n        });\n    }\n\n    public watchOnEvent = () => {\n        this.session.on(\"event\", (args: any) => {\n            const { data, subscription_id } = args;\n            const source = args[\"publisher-identity\"];\n            const subscription = this.subscriptions.find((s) => s.subscription_id === subscription_id);\n\n            if (subscription) {\n                if (!subscription.source) {\n                    subscription.callback(data, subscription.topic, source);\n                } else {\n                    if (this.keysMatch(subscription.source, source)) {\n                        subscription.callback(data, subscription.topic, source);\n                    }\n                }\n            }\n        });\n    }\n\n    private removeEmptyValues(obj: any) {\n        const cleaned: any = {};\n        Object.keys(obj).forEach((key) => {\n            if (obj[key] !== undefined && obj[key] !== null) {\n                cleaned[key] = obj[key];\n            }\n        });\n        return cleaned;\n    }\n\n    private keysMatch(obj1: any, obj2: any) {\n        const keysObj1 = Object.keys(obj1);\n        let allMatch = true;\n        keysObj1.forEach((key) => {\n            if (obj1[key] !== obj2[key]) {\n                allMatch = false;\n            }\n        });\n        return allMatch;\n    }\n}\n","import metrics from \"./metrics/main\";\nimport Connection from \"./connection/connection\";\nimport { Logger } from \"./logger/logger\";\nimport { Glue42Core } from \"../glue\";\nimport prepareConfig from \"./config\";\nimport timer, { getAllTimers } from \"./utils/timer\";\nimport Utils from \"./utils/utils\";\nimport { Timer } from \"./types\";\nimport { ContextsModule } from \"./contexts/contextsModule\";\nimport { ContextMessageReplaySpec } from \"./contexts/contextMessageReplaySpec\";\nimport { InteropSettings } from \"./interop/types\";\nimport Interop from \"./interop/interop\";\nimport { MessageBus } from \"./bus/main\";\nimport { version } from \"../package.json\";\nimport shortid from \"shortid\";\n\nconst GlueCore = (userConfig?: Glue42Core.Config, ext?: Glue42Core.Extension): Promise<Glue42Core.GlueCore> => {\n    const gdVersion: number | undefined = Utils.getGDMajorVersion();\n    let glue42gd: Glue42Core.GDObject | undefined;\n    let preloadPromise: Promise<any> = Promise.resolve();\n\n    if (gdVersion) {\n        if (gdVersion < 3) {\n            throw new Error(\"GD v2 is not supported. Use v4 of the API to run in that context.\");\n        } else if (gdVersion >= 3) {\n            glue42gd = window.glue42gd;\n            preloadPromise = window.gdPreloadPromise || preloadPromise;\n        }\n    }\n\n    const glueInitTimer = timer(\"glue\");\n\n    userConfig = userConfig || {};\n    ext = ext || {};\n    const internalConfig = prepareConfig(userConfig, ext, glue42gd);\n\n    // Init the GLUE namespace\n    let _connection: Connection;\n    let _interop: Interop;\n    let _logger: Logger;\n    let _metrics: Glue42Core.Metrics.API;\n    let _contexts: Glue42Core.Contexts.API;\n    let _bus: Glue42Core.Bus.API;\n    let _allowTrace: boolean; // true if trace logging is enabled\n\n    const libs: { [key: string]: any } = {};\n\n    function registerLib(name: string | string[], inner: any, t: Timer) {\n\n        _allowTrace = _logger.canPublish(\"trace\");\n        if (_allowTrace) {\n            _logger.trace(`registering ${name} module`);\n        }\n\n        const done = () => {\n            inner.initTime = t.stop();\n            inner.initEndTime = t.endTime;\n            inner.marks = t.marks;\n            if (_allowTrace) {\n                _logger.trace(`${name} is ready - ${t.endTime - t.startTime}`);\n            }\n        };\n\n        inner.initStartTime = t.startTime;\n        if (inner.ready) {\n            inner.ready().then(() => {\n                done();\n            });\n        } else {\n            done();\n        }\n\n        if (!Array.isArray(name)) {\n            name = [name];\n        }\n\n        name.forEach((n) => {\n            libs[n] = inner;\n            (GlueCore as any)[n] = inner;\n        });\n    }\n\n    function setupConnection(): Promise<object> {\n        const initTimer = timer(\"connection\");\n        _connection = new Connection(internalConfig.connection, _logger.subLogger(\"connection\"));\n\n        let authPromise: Promise<any> = Promise.resolve(internalConfig.auth);\n\n        // no auth - what we do in different protocol versions\n        if (internalConfig.connection && !internalConfig.auth) {\n            if (glue42gd) {\n                authPromise = glue42gd.getGWToken()\n                    .then((token) => {\n                        // initTimer.mark(\"got-gw-token\");\n                        return {\n                            gatewayToken: token\n                        };\n                    });\n            } else if (typeof window !== \"undefined\" && window?.glue42electron) {\n                if (typeof window.glue42electron.gwToken === \"string\") {\n                    authPromise = Promise.resolve({\n                        gatewayToken: window.glue42electron.gwToken\n                    });\n                }\n            } else {\n                // assign to auth promise so we ca cleanup the connection\n                authPromise = Promise.reject(\"You need to provide auth information\");\n            }\n        }\n\n        return authPromise\n            .then((authConfig) => {\n                initTimer.mark(\"auth-promise-resolved\");\n                // convert the authConfig to AuthRequest object\n                let authRequest: Glue42Core.Auth;\n                if (Object.prototype.toString.call(authConfig) === \"[object Object]\") {\n                    authRequest = authConfig;\n                } else {\n                    throw new Error(\"Invalid auth object - \" + JSON.stringify(authConfig));\n                }\n                // do the login\n                return _connection.login(authRequest);\n            })\n            .then(() => {\n                registerLib(\"connection\", _connection, initTimer);\n                return internalConfig;\n            })\n            .catch((e) => {\n                if (_connection) {\n                    _connection.logout();\n                }\n                throw e;\n            });\n    }\n\n    function setupLogger(): Promise<void> {\n        // Logger\n        const initTimer = timer(\"logger\");\n        _logger = new Logger(`${internalConfig.connection.identity?.application}`, undefined, internalConfig.customLogger);\n        _logger.consoleLevel(internalConfig.logger.console);\n        _logger.publishLevel(internalConfig.logger.publish);\n\n        if (_logger.canPublish(\"debug\")) {\n            _logger.debug(\"initializing glue...\");\n        }\n        registerLib(\"logger\", _logger, initTimer);\n\n        return Promise.resolve(undefined);\n    }\n\n    function setupMetrics(): Promise<void> {\n        const initTimer = timer(\"metrics\");\n        const config = internalConfig.metrics;\n\n        const metricsPublishingEnabledFunc = glue42gd?.getMetricsPublishingEnabled;\n        const identity = internalConfig.connection.identity;\n        const canUpdateMetric = metricsPublishingEnabledFunc ? metricsPublishingEnabledFunc : () => true;\n        const disableAutoAppSystem: boolean = (typeof config !== \"boolean\" && config.disableAutoAppSystem) ?? false;\n        _metrics = metrics({\n            connection: config ? _connection : undefined,\n            logger: _logger.subLogger(\"metrics\"),\n            canUpdateMetric,\n            system: \"Glue42\",\n            service: identity?.service ?? glue42gd?.applicationName ?? internalConfig.application,\n            instance: identity?.instance ?? identity?.windowId ?? shortid(),\n            disableAutoAppSystem,\n            pagePerformanceMetrics: typeof config !== \"boolean\" ? config?.pagePerformanceMetrics : undefined\n        });\n\n        registerLib(\"metrics\", _metrics, initTimer);\n        return Promise.resolve();\n    }\n\n    function setupInterop(): Promise<void> {\n        const initTimer = timer(\"interop\");\n\n        const agmConfig: InteropSettings = {\n            connection: _connection,\n            logger: _logger.subLogger(\"interop\"),\n        };\n\n        _interop = new Interop(agmConfig);\n        Logger.Interop = _interop;\n        registerLib([\"interop\", \"agm\"], _interop, initTimer);\n        return Promise.resolve();\n    }\n\n    function setupContexts() {\n        const hasActivities = ((internalConfig as any).activities && _connection.protocolVersion === 3);\n        const needsContexts = internalConfig.contexts || hasActivities;\n        if (needsContexts) {\n            const initTimer = timer(\"contexts\");\n\n            _contexts = new ContextsModule({\n                connection: _connection,\n                logger: _logger.subLogger(\"contexts\"),\n                trackAllContexts: typeof internalConfig.contexts === \"object\" ? internalConfig.contexts.trackAllContexts : false,\n                reAnnounceKnownContexts: typeof internalConfig.contexts === \"object\" ? internalConfig.contexts.reAnnounceKnownContexts : false\n            });\n            registerLib(\"contexts\", _contexts, initTimer);\n            return _contexts;\n\n            // NB: The shared contexts data is part of the global domain,\n            // which is joined implicitly and there is no 'Success' message\n            // to indicate that the initial state has arrived.\n            // We're relying on the fact that none of the other Glue libs\n            // rely on the shared contexts' state, and that the 'contexts'\n            // lib is created first so any other domain's success message\n            // will arrive after our state, so the contexts will be visible\n            // when the Glue promise resolves.\n        } else {\n            const replayer = _connection.replayer;\n            if (replayer) {\n                replayer.drain(ContextMessageReplaySpec.name);\n            }\n        }\n    }\n\n    async function setupBus(): Promise<void> {\n        if (!internalConfig.bus) {\n            return Promise.resolve();\n        }\n\n        const initTimer = timer(\"bus\");\n        _bus = new MessageBus(_connection, _logger.subLogger(\"bus\"));\n        registerLib(\"bus\", _bus, initTimer);\n        return Promise.resolve();\n    }\n\n    function setupExternalLibs(externalLibs: Glue42Core.ExternalLib[]): Promise<any> {\n        try {\n            externalLibs.forEach((lib) => {\n                setupExternalLib(lib.name, lib.create);\n            });\n\n            return Promise.resolve();\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n\n    function setupExternalLib(name: string, createCallback: (core: any) => any) {\n        const initTimer = timer(name);\n        const lib = createCallback(libs);\n        if (lib) {\n            registerLib(name, lib, initTimer);\n        }\n    }\n\n    function waitForLibs(): Promise<object[]> {\n        // get all libs that have ready promises and wait for these to be ready\n        const libsReadyPromises = Object.keys(libs).map((key) => {\n            const lib = libs[key];\n            return lib.ready ?\n                lib.ready() : Promise.resolve();\n        });\n\n        return Promise.all(libsReadyPromises);\n    }\n\n    function constructGlueObject(): Glue42Core.GlueCore {\n\n        const feedbackFunc = (feedbackInfo?: Glue42Core.FeedbackInfo) => {\n            if (!_interop) {\n                return;\n            }\n            _interop.invoke(\"T42.ACS.Feedback\", feedbackInfo, \"best\");\n        };\n\n        const info: { [key: string]: any } = {\n            coreVersion: version,\n            version: internalConfig.version\n        };\n\n        glueInitTimer.stop();\n\n        const glue: Glue42Core.GlueCore & ({ [key: string]: any }) = {\n            feedback: feedbackFunc,\n            info,\n            logger: _logger,\n            interop: _interop,\n            agm: _interop,\n            connection: _connection,\n            metrics: _metrics,\n            contexts: _contexts,\n            bus: _bus,\n            version: internalConfig.version,\n            userConfig,\n            done: () => {\n                _logger?.info(`done called by user...`);\n                return _connection.logout();\n            }\n        };\n\n        // ver performance\n        glue.performance = {\n            get glueVer() {\n                return internalConfig.version;\n            },\n            get glueConfig() {\n                return JSON.stringify(userConfig);\n            },\n            get browser() {\n                return window.performance.timing.toJSON();\n            },\n            get memory() {\n                return (window as any).performance.memory;\n            },\n            get initTimes() {\n                const all = getAllTimers();\n                return Object.keys(all).map((key) => {\n                    const t = all[key];\n                    return {\n                        name: key,\n                        duration: t.endTime - t.startTime,\n                        marks: t.marks,\n                        startTime: t.startTime,\n                        endTime: t.endTime\n                    };\n                });\n            }\n        };\n\n        // attach each lib to glue\n        Object.keys(libs).forEach((key) => {\n            const lib = libs[key];\n            glue[key] = lib;\n        });\n\n        // construct the config object to be exposed to end user\n        // transfer config keys from internalConfig and then ext\n        glue.config = {};\n\n        Object.keys(internalConfig).forEach((k) => {\n            glue.config[k] = (internalConfig as any)[k];\n        });\n\n        if (ext && ext.extOptions) {\n            Object.keys(ext.extOptions).forEach((k) => {\n                glue.config[k] = ext?.extOptions[k];\n            });\n        }\n\n        if (ext?.enrichGlue) {\n            ext.enrichGlue(glue);\n        }\n\n        if (glue42gd && glue42gd.updatePerfData) {\n            glue42gd.updatePerfData(glue.performance);\n        }\n\n        if (glue.agm) {\n            const deprecatedDecorator = (fn: any, wrong: string, proper: string) => {\n                // tslint:disable-next-line:only-arrow-functions\n                return function() {\n                    // tslint:disable-next-line:no-console\n                    glue.logger.warn(`glue.js - 'glue.agm.${wrong}' method is deprecated, use 'glue.interop.${proper}' instead.`);\n                    return fn.apply(glue.agm, arguments);\n                };\n            };\n            // extend glue.agm with legacy support\n            const agmAny: any = glue.agm;\n            agmAny.method_added = deprecatedDecorator(glue.agm.methodAdded, \"method_added\", \"methodAdded\");\n            agmAny.method_removed = deprecatedDecorator(glue.agm.methodRemoved, \"method_removed\", \"methodRemoved\");\n            agmAny.server_added = deprecatedDecorator(glue.agm.serverAdded, \"server_added\", \"serverAdded\");\n            agmAny.server_method_aded = deprecatedDecorator(glue.agm.serverMethodAdded, \"server_method_aded\", \"serverMethodAdded\");\n            agmAny.server_method_removed = deprecatedDecorator(glue.agm.serverMethodRemoved, \"server_method_removed\", \"serverMethodRemoved\");\n        }\n        return glue;\n    }\n\n    async function registerInstanceIfNeeded() {\n        const RegisterInstanceMethodName = \"T42.ACS.RegisterInstance\";\n        const UnregisterInstanceMethodName = \"T42.ACS.UnregisterInstance\";\n        // if we are running in Node, not started from GD3 and the user passes an application, try to register as an instance\n        if (Utils.isNode() && typeof process.env._GD_STARTING_CONTEXT_ === \"undefined\" && typeof userConfig?.application !== \"undefined\") {\n            const isMethodAvailable = _interop.methods({ name: RegisterInstanceMethodName }).length > 0;\n            if (isMethodAvailable) {\n                try {\n                    await _interop.invoke(RegisterInstanceMethodName, { appName: userConfig?.application, pid: process.pid });\n                } catch (error) {\n                    const typedError = error as Error;\n                    _logger.error(`Cannot register as an instance: ${JSON.stringify(typedError.message)}`);\n                }\n            }\n        }\n    }\n\n    return preloadPromise\n        .then(setupLogger)\n        .then(setupConnection)\n        .then(() => Promise.all([setupMetrics(), setupInterop(), setupContexts(), setupBus()]))\n        .then(() => _interop.readyPromise)\n        .then(() => registerInstanceIfNeeded())\n        .then(() => {\n            return setupExternalLibs(internalConfig.libs || []);\n        })\n        .then(waitForLibs)\n        .then(constructGlueObject)\n        .catch((err) => {\n            // if there is some some error include the libs object for debugging purposes\n            return Promise.reject({\n                err,\n                libs\n            });\n        });\n};\n\nif (typeof window !== \"undefined\") {\n    (window as any).GlueCore = GlueCore;\n}\n(GlueCore as any).version = version;\n// add default library for ES6 modules\n(GlueCore as any).default = GlueCore;\n\nexport default GlueCore;\n","import ActivityManager from \"../core/activityManager\";\n\n/**\n * Base class for activity entities with reference to the activity manager\n * @private\n */\nexport default class ActivityEntity {\n\n  public _manager: ActivityManager;\n  public _id: string;\n\n  constructor(id: string) {\n    this._id = id;\n  }\n\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Updates the properties of the current object using the properties of another object\n   * These two should have the same id.\n   */\n  public _update(other: ActivityEntity) {\n    if (other._id !== this._id) {\n      throw Error(\"Can not update from entity with different id.\");\n    }\n    this._updateCore(other);\n  }\n\n  public _updateCore(other: ActivityEntity) {\n    return;\n  }\n\n  public _beforeDelete(other: ActivityEntity) {\n    return;\n  }\n}\n","// some small useful functions (so we don't reference underscore or lodash)\n\nexport function isNumber(arg: any) {\n  return typeof arg === \"number\";\n}\n\nexport function isString(arg: any) {\n  return typeof arg === \"string\";\n}\n\nexport function isObject(arg: any) {\n  return typeof arg === \"object\" && arg !== null;\n}\n\nexport function isArray(arg: any) {\n  // TODO optimize\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return toString.call(arg) === \"[object Array]\";\n}\nexport function isUndefined(arg: any) {\n  return typeof arg === \"undefined\";\n}\n\nexport function isUndefinedOrNull(arg: any) {\n  return arg === null || typeof arg === \"undefined\";\n}\n\nexport function isNullOrWhiteSpace(str: string) {\n  return (typeof str !== \"string\" || !str || str.length === 0 || /^\\s*$/.test(str));\n}\n\nexport function isBoolean(obj: any) {\n  return obj === true || obj === false || toString.call(obj) === \"[object Boolean]\";\n}\n\n/**\n * Checks if an object is empty (has no properties)\n * @private\n */\nexport function isEmpty(arg: any) {\n  for (const prop in arg) {\n    if (arg.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isFunction(arg: any) {\n  return !!(arg && arg.constructor && arg.call && arg.apply);\n}\n\nexport function some<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function first<T>(array: T[], predicate: (el: any, index: number) => boolean) {\n  for (let index = 0; index < array.length; index++) {\n    if (predicate(array[index], index)) {\n      return array[index];\n    }\n  }\n  return undefined;\n}\n\nexport function ifNotUndefined<T>(what: T, doWithIt: (what: T) => void) {\n  if (typeof what !== \"undefined\") {\n    doWithIt(what);\n  }\n}\n\nexport function promisify(promise: Promise<any>, successCallback: () => void, errorCallback: () => void) {\n  \"use strict\";\n  if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\n    return promise;\n  }\n\n  if (typeof successCallback !== \"function\") {\n    successCallback = () => { return; };\n  } else if (typeof errorCallback !== \"function\") {\n    errorCallback = () => { return; };\n  }\n\n  promise.then(successCallback, errorCallback);\n}\n","import * as contracts from \"../contracts/contracts\";\nimport Activity from \"./activity\";\nimport ActivityEntity from \"./activityEntity\";\nimport WindowType from \"./windowType\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { WindowDefinition } from \"./windowDefinition\";\n\nimport { Glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\n/**\n * An activity type is a definition template for an activity, consisting of a collection of window types,\n * their layout and an initial activity context.\n *\n * @module activityType\n */\nexport default class ActivityType extends ActivityEntity {\n\n  public _name: string;\n  public _description: string;\n  public _ownerWindow: WindowType;\n  public _helperWindows: WindowType[];\n\n  constructor(name: string, ownerWindow: WindowType, helperWindows?: WindowType[], description?: string) {\n    super(name);\n    this._name = name;\n    this._description = description;\n    this._ownerWindow = ownerWindow;\n    this._helperWindows = helperWindows || [];\n  }\n\n  /**\n   * @var {string} name Name of the activity type\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * @var {string} description description for the activity type\n   */\n  public get description(): string {\n    return this._description;\n  }\n\n  /**\n   * A list of window types that should be created when initiating a new instance of that activity type\n   * @var {windowDefinition[]} helperWindows\n   */\n  public get helperWindows(): WindowType[] {\n    return this._helperWindows.map((hw) => this.covertToWindowDef(hw));\n  }\n\n  /**\n   * @var {windowDefinition} ownerWindow Returns the definition of the owner window for that activity type\n   */\n  public get ownerWindow(): WindowType {\n    return this.covertToWindowDef(this._ownerWindow);\n  }\n\n  /**\n   * Initiates a new activity of this type\n   *\n   * @function initiate\n   * @param {object} context The initial context to be used for the new activity\n   * @param callback\n   * @param configuration\n   * @returns {Promise<activity>}\n   */\n  public initiate(context: object, callback?: contracts.Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    return this._manager.initiate(this._name, context, callback, configuration);\n  }\n\n  public _updateCore(other: ActivityType) {\n    super._updateCore(other);\n    ifNotUndefined(other._description, (x) => this._description = x);\n    ifNotUndefined(other._ownerWindow, (x) => this._ownerWindow = x);\n    ifNotUndefined(other._helperWindows, (x) => this._helperWindows = x);\n  }\n\n  private covertToWindowDef(windowType: any): any {\n    // GD2 + old glue js backward compatible\n    return {\n      type: windowType?.id?.type,\n      name: windowType?.id?.name\n    };\n  }\n}\n","import ActivityEntity from \"./activityEntity\";\nimport ActivityWindow from \"./activityWindow\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport Activity from \"./activity\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window type is a definition of a window, typically configured in ACS.\n *\n * @module windowType\n */\nexport default class WindowType extends ActivityEntity {\n\n  public _name: string;\n  public _appByWindowTypeGetter: (name: string) => void;\n\n  constructor(name: string, appByWindowTypeGetter: (wt: string) => Glue42.AppManager.Application) {\n    super(name);\n    this._name = name;\n    this._appByWindowTypeGetter = appByWindowTypeGetter;\n  }\n\n  /**\n   * Name of the window type\n   * @var {string} name\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Returns the ACS configuration related to this window type (as application object from AppManager API)\n   * @returns {any}\n   */\n  public get config(): any {\n    return this._appByWindowTypeGetter(this._name);\n  }\n\n  /**\n   * @var {activityWindow[]} windows All windows from that type\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ type: this._name });\n  }\n\n  public create(activity: Activity, configuration: any): Promise<ActivityWindow> {\n    const definition: WindowDefinition = (Object as any).assign({ type: this.name, name: this.name, isIndependent: false }, configuration);\n    return this._manager.createWindow(activity, definition);\n  }\n}\n","import { ActivityStatus } from \"./activityStatus\";\n\nexport class EntityEvent<T> {\n    public entity: T;\n    public context: EntityEventContext;\n\n    constructor(entitiy: T, context: EntityEventContext) {\n        this.entity = entitiy;\n        this.context = context;\n    }\n}\n\nexport class EntityEventContext {\n    public type: string;\n\n    constructor(eventType: string) {\n        this.type = eventType;\n    }\n}\n\nexport class ActivityStatusChangeEventContext extends EntityEventContext {\n    public oldStatus: ActivityStatus;\n    public newStatus: ActivityStatus;\n\n    constructor(newStatus: ActivityStatus, oldStatus: ActivityStatus) {\n        super(EntityEventType.StatusChange);\n        this.newStatus = newStatus;\n        this.oldStatus = oldStatus;\n    }\n}\n\nexport class ActivityContextChangedEventContext extends EntityEventContext {\n    public context: object;\n    public updated: object;\n    public removed: string[];\n\n    constructor(context: string | object, updated: object, removed: string[]) {\n        super(EntityEventType.ActivityContextChange);\n        this.context = typeof context === \"string\" ? JSON.parse(context) : context;\n        this.updated = updated;\n        this.removed = removed;\n    }\n}\n\nexport class EntityEventType {\n    public static Added = \"added\";\n    public static Removed = \"removed\";\n    public static Updated = \"updated\";\n    public static Closed = \"closed\";\n    public static StatusChange = \"statusChange\";\n    public static ActivityContextChange = \"activityContextUpdate\";\n    public static ActivityWindowEvent = \"activityWindowEvent\";\n    // #deleteme TODO: these are not implemented in HC\n    public static ActivityWindowJoinedActivity = \"joined\";\n    public static ActivityWindowLeftActivity = \"left\";\n}\n\nexport class ActivityState {\n    public static Created = \"created\";\n    public static Started = \"started\";\n    public static Destroyed = \"destroyed\";\n}\n","import Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport * as util from \"../helpers/util\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { promisify } from \"../helpers/util\";\n\n// A helper class that provides lame activity AGM implementation\n// Can be initialized with or without activity - in case no activity (independent windows outside activity) only\n// subset of the methods work\nexport class ActivityAGM {\n    public static AGM: Glue42Core.AGM.API;\n\n    private _activity: Activity;\n\n    constructor(activity: Activity) {\n        this._activity = activity;\n    }\n\n    public register(definition: string | Glue42Core.AGM.MethodDefinition, handler: (args: object, caller: Glue42Core.AGM.Instance) => object) {\n        this._ensureHasAgm();\n        ActivityAGM.AGM.register(definition, handler);\n    }\n\n    public servers(): Glue42Core.AGM.Instance[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.servers()\n            return [];\n        }\n\n        return this._activity.windows.map(\n            (w: ActivityWindow) => {\n                return w.instance;\n            });\n    }\n\n    public methods(): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n\n        if (util.isUndefinedOrNull(this._activity)) {\n            // or return ActivityAGM.AGM.methods()\n            return [];\n        }\n\n        const windows = this._activity.windows;\n        const methodNames: string[] = [];\n        const methods: Glue42Core.AGM.MethodDefinition[] = [];\n\n        // get all windows and their methods, then assemble distinct methods\n        windows.forEach((window) => {\n            const windowMethods = this.methodsForWindow(window);\n            windowMethods.forEach((currentWindowMethod) => {\n                if (methodNames.indexOf(currentWindowMethod.name) === -1) {\n                    methodNames.push(currentWindowMethod.name);\n                    methods.push(currentWindowMethod);\n                }\n            });\n        });\n\n        return methods;\n    }\n\n    public methodsForWindow(window: ActivityWindow): Glue42Core.AGM.MethodDefinition[] {\n        this._ensureHasAgm();\n        // get instance and use agm to get methods for instance\n        if (!window.instance) {\n            return [];\n        }\n\n        return ActivityAGM.AGM.methodsForInstance(window.instance);\n    }\n\n    /** Possible invoke targets\n     *\n     * \"activity.all\" - [default]\n     * \"activity.best\"\n     * ActivityWindow\n     * [ActivityWindow] -\n     *\n     * classic AGM\n     * \"all\" - agm all\n     * \"best\" - agm best\n     * instance - agm\n     * [ instances ]\n     *\n     */\n    public invoke(\n        methodName: string,\n        arg: object,\n        target: string | Glue42Core.AGM.Instance | ActivityWindow | Glue42Core.AGM.Instance[] | ActivityWindow[],\n        options?: Glue42Core.AGM.InvokeOptions,\n        success?: () => void,\n        error?: () => void): Promise<object> {\n\n        this._ensureHasAgm();\n        const activityServers = this.servers();\n        let serversToInvokeAgainst: Glue42Core.AGM.Instance[] = [];\n\n        if (util.isUndefinedOrNull(target)) {\n            target = \"activity.all\";\n        }\n\n        if (util.isString(target)) {\n            if (target === \"activity.all\") {\n                serversToInvokeAgainst = activityServers;\n            } else if (target === \"activity.best\") {\n                const potentialTargets = activityServers.filter((server) => {\n                    const methods = ActivityAGM.AGM.methodsForInstance(server);\n                    return methods.filter((m) => {\n                        return m.name === methodName;\n                    }).length > 0;\n                });\n                if (potentialTargets.length > 0) {\n                    serversToInvokeAgainst = [potentialTargets[0]];\n                }\n            } else if (target === \"all\" || target === \"best\") {\n                return promisify(ActivityAGM.AGM.invoke(methodName, arg, target, options), success, error);\n            } else {\n                // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n                throw new Error(\"Invalid invoke target \" + target);\n            }\n        } else if (util.isArray(target)) {\n            // if the array is not empty\n            if ((target as any).length >= 0) {\n                const firstElem = (target as any)[0];\n                // check argument type\n                if (this._isInstance(firstElem)) {\n                    serversToInvokeAgainst = (target as Glue42Core.AGM.Instance[]).map((instance: Glue42Core.AGM.Instance) => instance);\n                } else if (this._isActivityWindow(firstElem)) {\n                    serversToInvokeAgainst = (target as ActivityWindow[]).map((win: ActivityWindow) => win.instance);\n                } else {\n                    throw new Error(\"Unknown target object\");\n                }\n            }\n        } else {\n            if (this._isInstance(target)) {\n                serversToInvokeAgainst = [target as Glue42Core.AGM.Instance];\n            } else if (this._isActivityWindow(target)) {\n                serversToInvokeAgainst = [(target as ActivityWindow).instance];\n            } else {\n                throw new Error(\"Unknown target object\");\n            }\n        }\n\n        throw new Error(\"Not implemented\");\n        // return promisify(ActivityAGM.AGM.invoke(methodName, arg, serversToInvokeAgainst, options), success, error);\n    }\n\n    public unregister(definition: string | Glue42Core.AGM.MethodDefinition) {\n        this._ensureHasAgm();\n        return ActivityAGM.AGM.unregister(definition);\n    }\n\n    public createStream(methodDefinition: string | Glue42Core.AGM.MethodDefinition,\n        subscriptionAddedHandler: (request: Glue42Core.AGM.StreamSubscription) => void,\n        subscriptionRemovedHandler: (request: Glue42Core.AGM.StreamSubscription) => void) {\n        this._ensureHasAgm();\n\n        ActivityAGM.AGM.createStream(methodDefinition, {\n            subscriptionAddedHandler,\n            subscriptionRemovedHandler,\n            subscriptionRequestHandler: undefined\n        });\n    }\n\n    public subscribe(methodDefinition: string | Glue42Core.AGM.MethodDefinition, parameters: object, target: string | Glue42Core.AGM.Instance | Glue42Core.AGM.Instance[]): Promise<Glue42Core.AGM.Subscription> {\n        this._ensureHasAgm();\n        // #deleteme TODO: check servers needed?\n        // const servers = this.servers();\n\n        return ActivityAGM.AGM.subscribe(methodDefinition, parameters);\n    }\n\n    public _ensureHasAgm() {\n        if (util.isUndefinedOrNull(ActivityAGM.AGM)) {\n            throw new Error(\"Agm should be configured to be used in activity\");\n        }\n    }\n\n    public _isInstance(obj: any) {\n        // lame check\n        return obj.application !== undefined;\n    }\n\n    public _isActivityWindow(obj: any) {\n        return obj.instance !== undefined;\n    }\n}\n","import { ActivityDescriptor } from \"./activityDescriptor\";\nimport ActivityManager from \"../core/activityManager\";\nimport Activity from \"./activity\";\n\nexport class AttachedActivityDescriptor implements ActivityDescriptor {\n  private _manager: ActivityManager;\n  private _state: ActivityDescriptor;\n  private _ownerActivityId: string;\n\n  constructor(\n    manager: ActivityManager,\n    ownerActivityId: string,\n    state: ActivityDescriptor) {\n    this._manager = manager;\n    this._ownerActivityId = ownerActivityId;\n    this._state = state;\n  }\n\n  public get ownerId() {\n    return this._state.ownerId;\n  }\n\n  public get windowIds() {\n    return this._state.windowIds;\n  }\n\n  public get frameColor() {\n    return this._state.frameColor;\n  }\n\n  public get context() {\n    return this._state.context;\n  }\n\n  public get tag() {\n    return this._state.tag;\n  }\n\n  public detach(descriptor?: ActivityDescriptor): Promise<Activity> {\n\n    descriptor = descriptor || {};\n\n    const merged: ActivityDescriptor = {};\n\n    Object.keys(this._state).forEach((prop) => {\n      merged[prop] = this._state[prop];\n    });\n\n    merged.context = descriptor.context || merged.context;\n    merged.frameColor = descriptor.frameColor || merged.frameColor;\n\n    return this._manager.detachActivities(this._ownerActivityId, merged);\n  }\n}\n","import * as util from \"../helpers/util\";\n\nconst nextTick = (cb: () => void) => {\n  setTimeout(cb, 0);\n};\n\n/**\n * Convert a Promise to node style callback\n * @private\n */\nexport function nodeify<T>(promise: Promise<T>, callback: any): Promise<T> {\n  if (!util.isFunction(callback)) {\n    return promise;\n  }\n\n  promise.then(\n    (resp) => {\n      nextTick( () => { // not sure if this is needed, promises should be already executed on the event pool\n        callback(null, resp);\n      });\n    },\n    (err) => {\n      nextTick(() => {\n        callback(err, null);\n      });\n    });\n}\n","import * as contracts from \"../contracts/contracts\";\nimport ActivityType from \"./activityType\";\nimport ActivityWindow from \"./activityWindow\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport ActivityEntity from \"./activityEntity\";\nimport { WindowDefinition } from \"./windowDefinition\";\nimport { ActivityAGM } from \"../core/activityAGM\";\nimport { CloneOptions } from \"./cloneOptions\";\nimport { AttachedActivityDescriptor } from \"./attachedActivityDescriptor\";\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ifNotUndefined } from \"../helpers/util\";\n\n/**\n * Activity is an instance of an activity type just like an object is an instance of a class\n * in class-based languages (and just like ‘John’ is an instance of a 'Person’).\n *\n * Activity is often used as a synonym for activity instance.\n *\n * Each activity instance has a single owner window and can optionally have one or more helper windows.\n *\n * @module activity\n */\nexport default class Activity extends ActivityEntity {\n\n  public _id: string;\n  public _actType: string;\n  public _status: ActivityStatus;\n  public _context: object;\n  public _ownerId: string;\n  public _agm: ActivityAGM;\n  public _attached: any;\n\n  constructor(\n    id: string,\n    actType: string,\n    status: ActivityStatus,\n    context: object,\n    ownerId: string) {\n    super(id);\n    this._id = id;\n    this._actType = actType;\n    this._status = status;\n    this._context = context;\n    this._ownerId = ownerId;\n    this._agm = new ActivityAGM(this);\n  }\n\n  /**\n   * Activity type\n   * @var {module:activityType} type\n   */\n  public get type(): ActivityType {\n    if (this._manager) {\n      return this._manager.getActivityType(this._actType);\n    }\n    return undefined;\n  }\n\n  /**\n   * Get current activity context. To update use updateContext , to replace setContext\n   * @var {object} context\n   */\n  public get context(): object {\n    return this._context;\n  }\n\n  /**\n   * Get activity status\n   * @var {activityStatus} status\n   */\n  public get status(): ActivityStatus {\n    return this._status;\n  }\n\n  /**\n   * The owner window\n   * @var {module:activityWindow} owner\n   */\n  public get owner(): ActivityWindow {\n    if (!this._ownerId) {\n      return null;\n    }\n    return this._manager.getWindows({ id: this._ownerId })[0];\n  }\n\n  /**\n   * All windows participating in the activity\n   * @var {module:activityWindow[]} windows\n   */\n  public get windows(): ActivityWindow[] {\n    return this._manager.getWindows({ activityId: this._id });\n  }\n\n  /**\n   * @var {module:activityAGM} agm\n   */\n  public get agm(): ActivityAGM {\n    return this._agm;\n  }\n\n  /**\n   * Joins a specific window to the activity\n   *\n   * @private\n   * @function join\n   * @param window    The window to join\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public addWindow(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.addWindowToActivity(this, window, callback);\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string|windowDefinition} windowType The type of the window to be created\n   * @param callback\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.createWindow(this, windowType, callback);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @param callback\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: (string | WindowDefinition)[], timeout?: number, callback?: contracts.Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    return this._manager.createStackedWindows(this, windowTypes, timeout, callback);\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @private\n   * @param window\n   * @param callback\n   * @returns     Promise for ActivityWindow\n   */\n  public leave(window: ActivityWindow, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n    return this._manager.leaveWindowFromActivity(this, window, callback);\n  }\n\n  /**\n   * Get all windows participating in the activity from a given type\n   *\n   * @param {string} windowType\n   * @returns {module:activityWindow[]}\n   */\n  public getWindowsByType(windowType: string): ActivityWindow[] {\n    const filter = { activityId: this._id, type: windowType };\n    return this._manager.getWindows(filter);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @param callback\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.setActivityContext(this, context, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @param callback\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: contracts.Callback<Activity>): Promise<object> {\n    return this._manager.updateActivityContext(this, context, callback);\n  }\n\n  /**\n   * Subscribe for status change events\n   *\n   * @function onStatusChange\n   *\n   * @param {activityStatusChangeHandler} handler Handler function that will receive status notifications\n   */\n  public onStatusChange(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._manager.subscribeActivityEvents((a, ns, os) => {\n      if (a.id === this.id) {\n        handler(a, ns, os);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for window related events, like joined, removed from activity\n   *\n   * @function onWindowEvent\n   * @param {windowEventHandler} handler Handler function that will receive windows events\n   */\n  public onWindowEvent(handler: contracts.ActivityWindowEventHandler): () => void {\n    return this._manager.subscribeWindowEvents((a, w, e) => {\n      if (a.id === this.id) {\n        handler(a, w, e);\n      }\n    });\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} handler Handler function that will receive context related events\n   */\n  public onContextChanged(handler: contracts.ContextUpdateHandler) {\n    this._manager.subscribeActivityContextChanged((act, context, updated, removed) => {\n      if (act.id === this.id) {\n        handler(context, updated, removed, act);\n      }\n    });\n\n    try {\n      // replay the context at the time of subscribing, swallow user exceptions\n      handler(this.context, this.context, [], this);\n    } catch (e) {\n      return;\n    }\n  }\n\n  /**\n   * Stops the activity\n   * @function stop\n   */\n  public stop() {\n    this._manager.stopActivity(this);\n  }\n\n  /**\n   * Clones the activity into a new one\n   * @function clone\n   * @param {CloneOptions} options\n   */\n  public clone(options: CloneOptions) {\n    return this._manager.clone(this, options);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._manager.attachActivities(activityId, this.id, tag);\n  }\n\n  public onActivityAttached(callback: (descriptor: AttachedActivityDescriptor) => void) {\n    this._manager.subscribeActivitiesAttached((newActId: string, oldActId: string, descriptor: AttachedActivityDescriptor) => {\n      if (newActId !== this._id) {\n        return;\n      }\n\n      callback(descriptor);\n    });\n  }\n\n  public onDetached(callback: (newAct: Activity, state: any) => void) {\n    this._manager.subscribeActivitiesDetached((newAct: Activity, originalActivity: Activity, state: any) => {\n      if (originalActivity.id !== this._id) {\n        return;\n      }\n\n      callback(newAct, state);\n    });\n  }\n\n  public _updateCore(other: Activity) {\n    super._updateCore(other);\n    ifNotUndefined(other._actType, (x) => this._actType = x);\n    ifNotUndefined(other._context, (x) => this._context = x);\n    ifNotUndefined(other._ownerId, (x) => this._ownerId = x);\n    if (other._status && (!this._status || (this._status.state !== other._status.state))) {\n      this._status = other._status;\n    }\n  }\n\n  public _updateDescriptors(allStates: any) {\n    this._attached = allStates.map((s: any) => {\n      return new AttachedActivityDescriptor(this._manager, this._id, s);\n    });\n  }\n\n  public get attached(): AttachedActivityDescriptor[] {\n    return this._attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n\n      let callbacksToWait = this.windows.length;\n      if (callbacksToWait === 0) {\n        resolve(this);\n      }\n\n      this.windows.forEach((w) => {\n        w.underlyingWindow.setFrameColor(color, () => {\n          callbacksToWait--;\n          if (callbacksToWait <= 0) {\n            resolve(this);\n          }\n        });\n      });\n\n      setTimeout(() => {\n\n        if (callbacksToWait > 0) {\n          reject(this.id + \" - timed out waiting for setFrameColor with\" + color);\n        }\n\n      }, 5000);\n\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public getFrameColor(): string {\n\n    if (!this.windows || this.windows.length === 0) {\n      return \"\";\n    }\n\n    return this.windows[0].underlyingWindow.frameColor;\n  }\n}\n","/* eslint-disable no-console */\n/* tslint:disable */\n\nimport * as util from \"./util\";\nimport { Glue42Core } from \"@glue42/core\";\n\nexport class LogLevel {\n  public static Trace = \"trace\";\n  public static Debug = \"debug\";\n  public static Info = \"info\";\n  public static Warn = \"warn\";\n  public static Error = \"error\";\n}\n\nexport class Logger {\n\n  public static Level: string = LogLevel.Info;\n  public static GlueLogger: Glue42Core.Logger.API;\n\n  private _glueLogger: Glue42Core.Logger.API;\n\n  public static GetNamed(name: string): Logger {\n    return new Logger(name);\n  }\n\n  public static Get(owner: any): Logger {\n    return new Logger(Logger.GetTypeName(owner));\n  }\n\n  public _name: string;\n\n  constructor(name: string) {\n    this._name = name;\n    // we have a glue logger let's create a new logger for it\n    if (!util.isUndefinedOrNull(Logger.GlueLogger)) {\n      this._glueLogger = Logger.GlueLogger.subLogger(name);\n    }\n  }\n\n  public trace(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.trace(message);\n    } else {\n      if (Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Trace));\n      }\n    }\n  }\n\n  public debug(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.debug(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace) {\n        console.info(this._getMessage(message, LogLevel.Debug));\n      }\n    }\n  }\n\n  public info(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.info(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public warn(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.warn(message);\n    } else {\n      if (Logger.Level === LogLevel.Debug ||\n        Logger.Level === LogLevel.Trace ||\n        Logger.Level === LogLevel.Info ||\n        Logger.Level === LogLevel.Warn) {\n        console.info(this._getMessage(message, LogLevel.Info));\n      }\n    }\n  }\n\n  public error(message: string) {\n    if (!util.isUndefinedOrNull(this._glueLogger)) {\n      this._glueLogger.error(message);\n    } else {\n      console.error(this._getMessage(message, LogLevel.Error));\n      console.trace();\n    }\n  }\n\n  public _getMessage(message: string, level: string): string {\n    return \"[\" + level + \"] \" + this._name + \" - \" + message;\n  }\n\n  /**\n   * Returns the function name for a given object (same as constructor.name but cross-browser)\n   */\n  public static GetTypeName(object: object): string {\n    const funcNameRegex = /function (.{1,})\\(/;\n    const results = (funcNameRegex).exec(object.constructor.toString());\n    return (results && results.length > 1) ? results[1] : \"\";\n  }\n}\n","import * as contracts from \"../contracts/contracts\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\n\nimport WindowType from \"./windowType\";\nimport ActivityEntity from \"./activityEntity\";\nimport Activity from \"./activity\";\n\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\nimport { ifNotUndefined } from \"../helpers/util\";\nimport { EntityEventType } from \"../contracts/entityEvent\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../glue\";\n\n/**\n * A window participating in an activity\n *\n * @module activityWindow\n */\nexport default class ActivityWindow extends ActivityEntity {\n\n    private _logger: Logger = Logger.Get(\"window\");\n\n    private _type: string;\n    private _activityId: string;\n    private _name: string;\n    private _instance: Glue42Core.AGM.Instance;\n    private _isIndependent: boolean;\n    private _windowGetter: () => Glue42.Windows.GDWindow;\n    private _hcWindowId: string;\n\n    constructor(id: string, name: string, type: string, activityId: string, instance: Glue42Core.AGM.Instance, isIndependent: boolean, windowGetter: any,\n                hcWindowId: string) {\n        super(id);\n        this._type = type;\n        this._activityId = activityId;\n        this._name = name;\n        this._instance = instance;\n        this._isIndependent = isIndependent;\n        this._windowGetter = windowGetter;\n        this._hcWindowId = hcWindowId;\n    }\n\n    /**\n     * Return window's title\n     * @function getBounds\n     * @return {Promise<WindowBounds>}\n     */\n    public getBounds(): Promise<WindowBounds> {\n        return this._manager.getWindowBounds(this.id);\n    }\n\n    /**\n     * @var {string} name The window name\n     */\n    public get name(): string {\n        return this._name;\n    }\n\n    /**\n     * @var {bool} isIndependent True if this is an independent window\n     */\n    public get isIndependent(): boolean {\n        return this._isIndependent;\n    }\n\n    /**\n     * @var {module:windowType} type The window type\n     */\n    public get type(): WindowType {\n        if (this._manager) {\n            return this._manager.getWindowType(this._type);\n        }\n        return undefined;\n    }\n\n    /**\n     * @var {module:activity} activity The activity that the window is part of\n     */\n    public get activity(): Activity {\n        if (util.isUndefined(this._activityId)) {\n            return undefined;\n        }\n        return this._manager.getActivityById(this._activityId);\n    }\n\n    /**\n     * @var {bool} isOwner True if the window is the owner of the activity.\n     */\n    public get isOwner(): boolean {\n        const act = this.activity;\n        if (util.isUndefined(act)) {\n            return false;\n        }\n\n        return act.owner.id === this.id;\n    }\n\n    /**\n     * Sets window's visibility\n     *\n     * @function setVisible\n     * @param {boolean} isVisible\n     * @returns {Promise<module:activityWindow>}\n     */\n    public setVisible(isVisible: boolean, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowVisibility(this.id, isVisible);\n    }\n\n    /**\n     * Activate window\n     * @function activate\n     * @param {boolean} focus If true then activate window with focus otherwise activate window without focus\n     */\n    public activate(focus: boolean): Promise<ActivityWindow> {\n        return this._manager.activateWindow(this.id, focus);\n    }\n\n    /**\n     * Sets window's bounds\n     * @function setBounds\n     *\n     * @param {bounds} bounds The new bounds to be applied\n     * @returns  {Promise<module:activityWindow>}\n     */\n    public setBounds(bounds: WindowBounds, callback?: contracts.Callback<ActivityWindow>): Promise<ActivityWindow> {\n        return this._manager.setWindowBounds(this.id, bounds, callback);\n    }\n\n    /**\n     * Closes the window\n     *\n     * @function close\n     * @returns {Promise}\n     */\n    public close(): Promise<any> {\n        return this._manager.closeWindow(this.id);\n    }\n\n    /**\n     * @var {agmInstance} instance The agm instance of that window. You can use this to invoke AGM methods against that window\n     */\n    public get instance(): Glue42Core.AGM.Instance {\n        return this._instance;\n    }\n\n    /**\n     * Returns the window as object from Windows API (glue.windows).\n     *\n     * @var {window} underlyingWindow\n     */\n    public get underlyingWindow(): any {\n        const window = this._windowGetter();\n        if (!window) {\n            // we don't have the window object any more, let's return as much as we can\n            return {\n                id: this._hcWindowId\n            };\n        }\n        return window;\n    }\n\n    public onActivityJoined(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowJoinedActivity, callback);\n    }\n\n    public onActivityRemoved(callback: (activity: Activity) => void) {\n        this._subscribeForActivityWindowEvent(EntityEventType.ActivityWindowLeftActivity, callback);\n    }\n\n    public _updateCore(other: ActivityWindow) {\n        ifNotUndefined(other._activityId, (x) => this._activityId = x);\n        ifNotUndefined(other._isIndependent, (x) => this._isIndependent = x);\n        ifNotUndefined(other._hcWindowId, (x) => this._hcWindowId = x);\n        ifNotUndefined(other._type, (x) => this._type = x);\n        ifNotUndefined(other._name, (x) => this._name = x);\n\n        if (!util.isUndefinedOrNull(other._instance)) {\n            this._instance = other._instance;\n        }\n    }\n\n    public _subscribeForActivityWindowEvent(eventName: string, callback: (activity: Activity) => void) {\n        this._manager.subscribeWindowEvents((activity, window, event) => {\n            // ignore events not related to this window\n            if (window.id !== this.id) {\n                return;\n            }\n\n            if (event === eventName) {\n                callback(activity);\n            }\n        });\n    }\n\n    public _beforeDelete(other: ActivityWindow) {\n        this._hcWindowId = other._hcWindowId;\n    }\n}\n","/**\n * @typedef {Object} activityStatus Defines activity instance status\n * @property {string} state Current state\n * @property {string} message Message\n * @property {Date} time Time of the last status update\n */\nexport class ActivityStatus {\n  public state: string;\n  public message: string;\n  public time: Date;\n\n  constructor(state: string, message: string, time: Date) {\n    this.state = state;\n    this.message = message;\n    this.time = time;\n  }\n\n  public getState(): string {\n    return this.state;\n  }\n\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public getTime(): Date {\n    return this.time;\n  }\n}\n","/* eslint-disable @typescript-eslint/unbound-method */\n/* eslint-disable prefer-const */\nimport { AnnouncementInfo } from \"../contracts/announcementInfo\";\n\nimport { ActivityBridge } from \"./activityBridge\";\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport { EventHandlerCallback } from \"../contracts/contracts\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport {\n    ActivityContextChangedEventContext,\n    ActivityStatusChangeEventContext,\n    EntityEvent,\n    EntityEventContext,\n    EntityEventType,\n} from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport {\n    ActivityGwMessage,\n    ActivityTypeGwMessage,\n    ActivityTypeGwMessageEntity,\n    GwMessage,\n    PeerCreatedGwMessage,\n    PeerFactoryGwMessage,\n    PeerFactoryGwMessageEntity,\n    PeerRequestedGwMessage,\n} from \"./gw3BridgeMessages\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Glue42 } from \"../../../glue\";\n\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport { ActivityConfig } from \"../activityConfig\";\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { Glue42 as glue42 } from \"../../../glue\";\ntype OverrideTypeDefinition = glue42.Activities.OverrideTypeDefinition;\n\nconst gwMessageSuccess = \"success\";\nconst gwMmessageError = \"error\";\n\nconst gwMessageAddActivityTypes = \"add-types\";\nconst gwMmessageActivityTypesAdded = \"types-added\";\nconst gwMessageRemoveActivityTypes = \"remove-types\";\nconst gwMessageActivityTypesRemoved = \"types-removed\";\n\nconst gwMessageActivityCreated = \"created\";\nconst gwMessageActivityDestroyed = \"destroyed\";\nconst gwMessageActivityInitiated = \"initiated\";\nconst gwMmessageJoinActivity = \"join-activity\";\nconst gwMessageJoinedActivity = \"joined\";\nconst gwMessageActivityJoined = \"activity-joined\";\nconst gwMessageLeaveActivity = \"leave-activity\";\nconst gwMessageActivityLeft = \"left\";\nconst gwNmessageMergeActivities = \"merge\";\nconst gwMessageSplitActivities = \"split\";\nconst gwMessageChildrenChanged = \"children-changed\";\nconst gwMessageOwnerChanged = \"owner-changed\";\n\nconst gwMessageAddPeerFactories = \"add-peer-factories\";\nconst gwMessagePeerFactoriesAdded = \"peer-factories-added\";\nconst gwMessageRemovePeerFactories = \"remove-peer-factories\";\nconst gwMessagePeerFactoriesRemoved = \"peer-factories-removed\";\n\nconst gwMessageCreateActivity = \"create\";\nconst gwMessageCreatePeer = \"create-peer\";\nconst gwMessagePeerRequested = \"peer-requested\";\nconst gwMessageReady = \"ready\";\nconst gwMessagePeerCreated = \"peer-created\";\n\nconst gwMessageDestroyActivity = \"destroy\";\nconst gwMessageDisposePeer = \"dispose-peer\";\nconst gwMessageDestroyPeer = \"destroy-peer\";\n\ndeclare let window: any;\ndeclare let process: any;\n\nexport default class GW3Bridge implements ActivityBridge {\n\n    private static activityTypeGwMessageEntityToActivityType(\n        entity: ActivityTypeGwMessageEntity,\n        description: string): ActivityType {\n\n        const nameToWindowType =\n            (windowName: any) =>\n                new WindowType(\n                    windowName,\n                    undefined);\n\n        return new ActivityType(\n            entity.name,\n            entity.owner_type && nameToWindowType(entity.owner_type),\n            entity.helper_types && entity.helper_types.map(nameToWindowType),\n            description);\n    }\n\n    private static peerFactoryGwMessageEntityToWindowType(entity: PeerFactoryGwMessageEntity): WindowType {\n        return new WindowType(\n            entity.peer_type,\n      /* #deleteme TODO: review - appmanager configuration? */(_) => undefined);\n    }\n\n    private static activityGwMessageToActivity(msg: ActivityGwMessage, status: ActivityStatus): Activity {\n        const ownerId = msg.owner !== undefined ? msg.owner.peer_id : msg.owner_id;\n        return new Activity(\n            msg.activity_id,\n            msg.activity_type,\n            status,\n            msg.context_snapshot,\n            ownerId);\n    }\n\n    private static activityToActivityStatusChangeEvent(act: Activity) {\n        return new EntityEvent<Activity>(act, new ActivityStatusChangeEventContext(act.status, undefined));\n    }\n\n    private _connection: Glue42.Connection.API;\n    private _logger: any;\n    private _contexts: Glue42.Contexts.API;\n    private _windows: Glue42.Windows.API;\n\n    private _gw3Session: Glue42Core.Connection.GW3DomainSession;\n\n    // callbacks\n\n    private _activityChangeCallbacks: EventHandlerCallback<EntityEvent<Activity>>[] = [];\n    private _activityTypeStatusChangeCallbacks: EventHandlerCallback<EntityEvent<ActivityType>>[] = [];\n    private _activityWindowChangeCallbacks: EventHandlerCallback<EntityEvent<ActivityWindow>>[] = [];\n    private _windowTypeStatusChangeCallbacks: EventHandlerCallback<EntityEvent<WindowType>>[] = [];\n\n    // state tracking\n    private _peerIdAndFactoryIdToPeerType: any = {};\n    private _peerFactoriesRegisteredByUs: { [index: string]: WindowFactory } = {};\n    private _gw3Subscriptions: any[] = [];\n    private _contextSubscriptions: any = {};\n    private _activityTypesInitiatedFromMe: any = {};\n\n    private _sessionJoinedPromise: Promise<GW3Bridge>;\n    private _sessionJoinedPromiseResolve: (bridge: GW3Bridge) => void;\n    private _activityJoinedPromise: Promise<object>;\n    private _activityJoinedPromiseResolve: (obj: object) => void;\n    private _config: ActivityConfig;\n\n    constructor(config: ActivityConfig) {\n        this._config = config;\n        this._connection = config.connection;\n        this._logger = config.logger;\n        this._contexts = config.contexts;\n        this._windows = config.windows;\n\n        this._sessionJoinedPromise = new Promise<GW3Bridge>((resolve /* , reject */) => {\n            this._sessionJoinedPromiseResolve = resolve;\n        });\n\n        this._activityJoinedPromise = new Promise<object>((resolve /* , reject */) => {\n            this._activityJoinedPromiseResolve = resolve;\n        });\n\n        if (!this._config.activityId) {\n            this._activityJoinedPromiseResolve({});\n        }\n\n        this._gw3Session = this._connection.domain(\n            \"activity\",\n            [\"joined\", \"initiated\", \"peer-created\", \"token\"]);\n\n        if (typeof window !== \"undefined\") {\n\n            const glue42gd = (window).glue42gd;\n\n            // only execute if in activity\n            if (glue42gd && glue42gd.activityInfo) {\n                // G4E-1343\n                if (typeof glue42gd.addRefreshHandler === \"function\") {\n\n                    glue42gd.addRefreshHandler((success: any, error: any) => {\n                        this._gw3Session\n                            .send(\n                                {\n                                    type: \"reload\"\n                                })\n                            .then(\n                                (msg: any) => {\n                                    if (!msg.token) {\n                                        error(\"Expected gateway token for refreshing.\");\n                                        return;\n                                    }\n                                    try {\n                                        glue42gd.setGWToken(msg.token as string);\n                                    } catch (e) {\n                                        error(e.message || e);\n                                        return;\n                                    }\n                                    success();\n                                },\n                                error);\n                    });\n                }\n\n                // JP_GD3-598\n                if (glue42gd && typeof glue42gd.addWillNavigateHandler === \"function\") {\n\n                    glue42gd.addWillNavigateHandler((success: any, error: any) => {\n                        this._gw3Session\n                            .send(\n                                {\n                                    type: \"reload\"\n                                })\n                            .then(\n                                (msg: any) => {\n                                    if (!msg.token) {\n                                        error(\"Expected gateway token for refreshing.\");\n                                        return;\n                                    }\n                                    try {\n                                        glue42gd.setGWToken(msg.token as string);\n                                    } catch (e) {\n                                        error(e.message || e);\n                                        return;\n                                    }\n                                    success();\n                                },\n                                error);\n                    });\n                }\n            }\n        }\n    }\n\n    public get bridgeType(): \"GW3\" {\n        return \"GW3\";\n    }\n\n    public init() {\n        // activity types\n        this.forwardActivityTypeMessagesToStatusEventHandlers();\n\n        // activities\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityCreated,\n            this.handleActivityCreatedMessage);\n\n        this.subscribe<ActivityGwMessage>(\n            gwMessageActivityDestroyed,\n            this.handleActivityDestroyedMessage);\n\n        this.forwardActivityMessagesToStatusEventHandlers();\n\n        this.forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers();\n\n        // window types / peer factories\n\n        // NB: this forward must happen before the handlePeerFactoriesRemoved subscription\n        // since the latter clears state which is used by peerFactoryIdAndOwnerIdToWindowType\n        this.forwardPeerFactoryMessagesToStatusEventHandlers();\n\n        this.forwardPeerFactoryMessagesToPeerFactoryRequests();\n\n        this.subscribe(\n            gwMessagePeerFactoriesAdded,\n            this.handlePeerFactoriesAdded);\n\n        this.subscribe(\n            gwMessagePeerFactoriesRemoved,\n            this.handlePeerFactoriesRemoved);\n\n        // activity windows\n\n        this.forwardActivityWindowMessagesToEventHandlers();\n        //\n\n        this.subscribe(\n            gwMessageDisposePeer,\n      /* (msg)*/() => {\n                if (this._config.disposeRequestHandling === \"dispose\") {\n                    this.dispose();\n                    return;\n                }\n                if (this._config.disposeRequestHandling === \"exit\") {\n                    if (this._windows && typeof this._windows.my() !== \"undefined\") {\n                        this._windows.my().close();\n                        return;\n                    }\n                    if (typeof window !== \"undefined\" && typeof (window).close === \"function\") {\n                        window.close();\n                        return;\n                    }\n                    if (typeof process !== \"undefined\" && typeof (process).exit === \"function\") {\n                        process.exit();\n                        return;\n                    }\n                }\n            });\n\n        // start domain join handshake\n        this._gw3Session.onJoined(() => {\n\n            if (this._config.mode === \"trackMyOnly\" ||\n                this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                this._sessionJoinedPromiseResolve(this);\n            } else {\n                this._gw3Session\n                    .send(\n                        {\n                            type: \"subscribe\",\n                            activity_types:\n                                (this._config.mode === \"trackAll\" ? [] :\n                                    this._config.mode === \"trackTypes\" ? this._config.typesToTrack : [])\n                        })\n                    .then(() => {\n                        this._sessionJoinedPromiseResolve(this);\n                    });\n            }\n        });\n        this._gw3Session.join();\n    }\n\n    public dispose() {\n        this._gw3Subscriptions.forEach((sub) => sub && this._connection.off(sub));\n        this._gw3Subscriptions.length = 0;\n    }\n\n    // ActivityBridge interface\n\n    public ready(): Promise<object> {\n        return Promise.all([this._sessionJoinedPromise, this._activityJoinedPromise]);\n    }\n\n    public initReady(): Promise<ActivityBridge> {\n        return this._sessionJoinedPromise;\n    }\n\n    public onActivityTypeStatusChange(callback: EventHandlerCallback<EntityEvent<ActivityType>>) {\n        this._activityTypeStatusChangeCallbacks.push(callback);\n    }\n\n    public registerActivityType(\n        activityTypeName: string,\n        ownerWindow: WindowDefinition,\n        helperWindows?: WindowDefinition[],\n        config?: any,\n        description?: string): Promise<ActivityType> {\n\n        const entity: ActivityTypeGwMessageEntity = {};\n        entity.name = activityTypeName;\n        const toActivityPeerConfig = (windowDefinition: WindowDefinition) => ({ type: windowDefinition.type, name: windowDefinition.name, configuration: windowDefinition });\n\n        entity.owner_type = toActivityPeerConfig(ownerWindow);\n        entity.helper_types = helperWindows.map(toActivityPeerConfig);\n\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageAddActivityTypes,\n                    types: [entity]\n                })\n            .then(() => {\n                const activityType = GW3Bridge.activityTypeGwMessageEntityToActivityType(entity, description);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddActivityTypes);\n                return activityType;\n            });\n    }\n\n    public unregisterActivityType(activityTypeName: string): Promise<void> {\n        return this._gw3Session\n            .send(\n                {\n                    type: gwMessageRemoveActivityTypes,\n                    types: [activityTypeName]\n                })\n            .then(() => {\n                const activityType = new ActivityType(activityTypeName, undefined, undefined, undefined);\n                this.invokeCallbacks(\n                    this._activityTypeStatusChangeCallbacks,\n                    new EntityEvent<ActivityType>(\n                        activityType,\n                        new EntityEventContext(EntityEventType.Removed)),\n                    gwMessageAddActivityTypes);\n            });\n    }\n\n    public onWindowTypeStatusChange(callback: EventHandlerCallback<EntityEvent<WindowType>>): void {\n        this._windowTypeStatusChangeCallbacks.push(callback);\n    }\n\n    // NB: in GW3, peer factories have ids separate from the ids of the peers they create\n    // in this implementation we keep the two equal for simplicity\n    // NB: we assume only one peer will register a peer factory for a given type; otherwise the\n    // add/remove window types event logic will get messy\n    public registerWindowFactory(\n        windowType: string,\n        factory: WindowFactory,\n        parameters?: any): Promise<void> {\n        if (this._peerFactoriesRegisteredByUs[windowType]) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} already registered.`));\n        }\n\n        this._peerFactoriesRegisteredByUs[windowType] = factory;\n\n        // #deleteme TODO: review success/failure code paths\n        // #deleteme TODO: review - should we create the window type here?\n        const entity = {\n            id: windowType,\n            peer_type: windowType,\n            configuration: parameters\n        };\n        return this._gw3Session.send({\n            type: gwMessageAddPeerFactories,\n            factories: [entity]\n        })\n            .then(() => {\n                this.invokeCallbacks(\n                    this._windowTypeStatusChangeCallbacks,\n                    new EntityEvent(\n                        GW3Bridge.peerFactoryGwMessageEntityToWindowType(entity),\n                        new EntityEventContext(EntityEventType.Added)),\n                    gwMessageAddPeerFactories);\n            })\n            .catch(() => {\n                delete this._peerFactoriesRegisteredByUs[windowType];\n            });\n    }\n\n    public unregisterWindowFactory(windowType: string): Promise<void> {\n        const factory = this._peerFactoriesRegisteredByUs[windowType];\n        if (!factory) {\n            return Promise.reject(new Error(`Factory for windowType ${windowType} not registered.`));\n        }\n\n        delete this._peerFactoriesRegisteredByUs[windowType];\n\n        return this._gw3Session.send({\n            type: gwMessageRemovePeerFactories,\n            factory_ids: [windowType]\n        }).then(() => {\n            this.invokeCallbacks(\n                this._windowTypeStatusChangeCallbacks,\n                new EntityEvent(\n                    new WindowType(windowType, undefined),\n                    new EntityEventContext(EntityEventType.Removed)),\n                gwMessageAddPeerFactories);\n        });\n    }\n\n    public onActivityStatusChange(callback: EventHandlerCallback<EntityEvent<Activity>>) {\n        this._activityChangeCallbacks.push(callback);\n    }\n\n    public initiateActivity(activityType: string, context?: object, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<string> {\n        const initiateMsg: any = {\n            type: gwMessageCreateActivity,\n            activity_type: activityType,\n            initial_context: context,\n        };\n\n        if (this.isOverrideTypeDefinition(configuration)) {\n            initiateMsg.types_override = {\n                owner_type: { type: configuration.owner.type, name: configuration.owner.name, configuration: configuration.owner },\n                helper_types: configuration.helpers && configuration.helpers.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }))\n            };\n        } else {\n            initiateMsg.configuration = configuration && configuration.map((wd) => ({ type: wd.type, name: wd.name, configuration: wd }));\n        }\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            initiateMsg,\n            gwMessageActivityInitiated,\n            (msg, requestId) => msg.request_id === requestId,\n            gwMessageActivityCreated,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            gwMessageActivityDestroyed,\n            (msg, requestId, initMsg) => msg.activity_id === initMsg.activity_id,\n            (msg) => msg.activity_id,\n            null).then((id) => {\n                if (this._config.mode === \"trackMyTypeAndInitiatedFromMe\") {\n                    if (!this._activityTypesInitiatedFromMe[activityType]) {\n                        this._activityTypesInitiatedFromMe[activityType] = true;\n\n                        return this._gw3Session\n                            .send(\n                                {\n                                    type: \"subscribe\",\n                                    activity_types: [activityType]\n                                })\n                            .then(() => {\n                                return id;\n                            });\n                    }\n                }\n                return id;\n            });\n    }\n\n    public stopActivity(activity: Activity): Promise<boolean> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyActivity,\n            activity_id: activity.id,\n            reason_uri: \"com.tick42.glue.activity.constants.destroyReason.general\",\n            reason: \"Destroying activity\"\n        }).then((_) => true);\n    }\n\n    public updateActivityContext(activity: Activity, context: any, fullReplace: boolean, removedKeys?: string[]): Promise<void> {\n        if (fullReplace) {\n            // this will currently fail on GW3\n            return this._contexts.set(activity.id, context);\n        } else {\n            removedKeys = removedKeys || [];\n            for (const x of removedKeys) {\n                context[x] = null;\n            }\n            return this._contexts.update(activity.id, context);\n        }\n    }\n\n    public announceWindow(windowType?: string, activityWindowId?: string) {\n        // in the GW3 case we are only joined to an activity after we announce ourselves\n        // so all announcement calls should go in 'registerWindow', not here\n        // (registerWindow registers a window that's not part of an activity, at least yet)\n        throw new Error(\"Invalid operation 'announceWindow' for GW3 protocol\");\n    }\n\n    public registerWindow(type: string, name: string, independent: boolean): Promise<string> {\n\n        let shouldSendReady = typeof this._connection.gatewayToken !== \"undefined\";\n        const peerId = this._connection.peerId;\n\n        // if running in GD3 (glue42gd is there) we should send ready only if we have the activityInfo object in glue\n        if (typeof window !== \"undefined\") {\n            const glue42gd = window.glue42gd;\n            if (glue42gd) {\n                shouldSendReady = typeof glue42gd.activityInfo !== \"undefined\";\n            }\n        }\n\n        if (shouldSendReady) {\n            this._gw3Session.send({\n                type: gwMessageReady,\n            });\n        }\n\n        this.invokeCallbacks(\n            this._activityWindowChangeCallbacks,\n            new EntityEvent<ActivityWindow>(\n                new ActivityWindow(peerId, name, type, undefined, this.getAgmInstance(peerId), independent, this.generateWindowGetter(peerId), undefined),\n                new EntityEventContext(EntityEventType.Added)),\n            \"register window\");\n\n        return Promise.resolve(peerId);\n    }\n\n    public onActivityWindowChange(callback: EventHandlerCallback<EntityEvent<ActivityWindow>>) {\n        this._activityWindowChangeCallbacks.push(callback);\n    }\n\n    public createWindow(activityId: string, windowDefinition: WindowDefinition): Promise<string> {\n\n        // if the user hasn't provided a layout option but has some of left,top,width,height\n        // insert a layout\n        if (!windowDefinition.layout) {\n            if (windowDefinition.left || windowDefinition.width || windowDefinition.height || windowDefinition.top) {\n                windowDefinition.layout = {\n                    mode: \"pixels\",\n                    cellSize: 1,\n                };\n            }\n        }\n\n        const joinPeer = (id: string) => {\n            if (!activityId) {\n                return;\n            }\n            return this.joinActivity(activityId, id, windowDefinition.name)\n                .then(() => {\n                    return id;\n                });\n        };\n\n        return this.sendCreateAndMapResultingMessagesToPromise(\n            {\n                type: gwMessageCreatePeer,\n                peer_type: windowDefinition.type,\n                peer_name: windowDefinition.name || windowDefinition.type,\n                configuration: windowDefinition,\n                activity_id: activityId,\n            },\n            undefined,\n            undefined,\n            gwMessagePeerCreated,\n            (msg, requestId) => msg.request_id === requestId,\n            undefined,\n            undefined,\n            (msg) => msg.created_id,\n            joinPeer)\n            .then(joinPeer);\n    }\n\n    public closeWindow(id: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageDestroyPeer,\n            destroy_peer_id: id\n        }).then((_) => undefined);\n    }\n\n    public getAnnouncementInfo(): AnnouncementInfo {\n        let activityId = this._config.activityId || (this._config.announcementInfo && this._config.announcementInfo.activityId);\n        let activityWindowType = (this._config.announcementInfo && this._config.announcementInfo.activityWindowType);\n        let activityWindowIndependent = (this._config.announcementInfo && this._config.announcementInfo.activityWindowIndependent);\n        let activityWindowName = (this._config.announcementInfo && this._config.announcementInfo.activityWindowName);\n\n        if (typeof window !== \"undefined\" &&\n            typeof window.location !== \"undefined\" &&\n            window.location.search &&\n            typeof URLSearchParams === \"function\") {\n            const searchParams = new URLSearchParams(location.search.slice(1));\n            activityWindowType = activityWindowType || searchParams.get(\"t42PeerType\");\n            activityWindowType = activityWindowType || searchParams.get(\"t42ActivityWindowType\");\n            if (typeof activityWindowIndependent === \"undefined\") {\n                activityWindowIndependent = searchParams.get(\"t42ActivityWindowIndependent\");\n            }\n            activityWindowName = activityWindowName || searchParams.get(\"t42ActivityWindowName\");\n            activityId = activityId || searchParams.get(\"t42ActivityId\");\n        }\n\n        activityWindowType = activityWindowType || \"unknown\";\n        activityWindowIndependent = activityWindowIndependent || false;\n        activityWindowName = activityWindowName || this._connection.peerId;\n\n        return {\n            activityWindowId: undefined, // not member of activity from the get go\n            activityId,\n            activityWindowType,\n            activityWindowIndependent,\n            activityWindowName,\n        };\n    }\n\n    public joinActivity(activityId: string, windowId: string, name?: string): Promise<void> {\n        const maybeName = (name && { name }) || {};\n        return this._gw3Session.send({\n            type: gwMmessageJoinActivity,\n            target_id: windowId,\n            activity_id: activityId,\n            ...maybeName\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, activityId, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                \"activity joined - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity joined - Activity\");\n        });\n    }\n\n    public leaveActivity(activityId: string, windowId: string): Promise<void> {\n        return this._gw3Session.send({\n            type: gwMessageLeaveActivity,\n            target_id: windowId,\n            activity_id: activityId\n        }).then(() => {\n            this.invokeCallbacks(\n                this._activityWindowChangeCallbacks,\n                new EntityEvent<ActivityWindow>(\n                    new ActivityWindow(windowId, undefined, undefined, null, this.getAgmInstance(windowId), undefined, this.generateWindowGetter(windowId), undefined),\n                    new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                \"activity left - ActivityWindow\");\n\n            this.invokeCallbacks(\n                this._activityChangeCallbacks,\n                new EntityEvent<Activity>(\n                    new Activity(activityId, undefined, new ActivityStatus(\"created\", undefined, undefined), undefined, undefined),\n                    new EntityEventContext(EntityEventType.Updated)),\n                \"activity left - Activity\");\n        });\n    }\n\n    // purposefully returning empty arrays\n    public getActivityTypes(): Promise<ActivityType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getWindowTypes(): Promise<WindowType[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivities(): Promise<Activity[]> {\n        return Promise.resolve([]);\n    }\n\n    public getActivityWindows(): Promise<ActivityWindow[]> {\n        return Promise.resolve([]);\n    }\n\n    // N/A\n\n    // ignore for now\n\n    // POSTPONED\n    public createStackedWindows(id: string, windowDefinitions: WindowDefinition[], timeout: number): Promise<string[]> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public getWindowBounds(id: string): Promise<WindowBounds> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowBounds(id: string, bounds: WindowBounds): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public activateWindow(id: string, focus: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public setWindowVisibility(id: string, visible: boolean): Promise<void> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public cloneActivity(id: string, cloneOptions: CloneOptions): Promise<string> {\n        return undefined;\n    }\n\n    // POSTPONED\n    public attachActivities(from: string, to: string, tag: object): Promise<any> {\n        return this._gw3Session.send({\n            type: gwNmessageMergeActivities,\n            into: to,\n            merge: from\n        });\n    }\n\n    // POSTPONED\n    public detachActivities(activityId: string, newActivityInfo: ActivityDescriptor): Promise<string> {\n        return this._gw3Session.send({\n            type: gwMessageSplitActivities,\n            from: activityId,\n            // split: from\n        }).then(() => \"\");\n    }\n\n    // POSTPONED\n    public onActivitiesAttached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public onActivitiesDetached(callback: (info: any) => void) {\n        // POSTPONED\n    }\n\n    public onActivityAttachedDescriptorsRefreshed(callback: (info: any) => void): void {\n        // POSTPONED\n    }\n\n    // POSTPONED\n    public getAttachedDescriptors(): Promise<any[]> {\n        return Promise.resolve([]);\n    }\n\n    // helpers\n\n    // Protocol handling\n\n    private getRandomRequestId() {\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        return this._connection.peerId + \":\" + Math.floor(Math.random() * 1e9) + \"\";\n    }\n\n    private forwardAddedAndRemovedMessagesToEventHandler<TMessage, TEntity>(\n        addedMessageType: string,\n        removedMessageType: string,\n        mapper: (msg: TMessage, isAdded: boolean) => TEntity[],\n        handlers: EventHandlerCallback<EntityEvent<TEntity>>[]) {\n\n        const getGetEntityEvent = (isAdded: boolean) => (entity: any) => new EntityEvent<TEntity>(\n            entity,\n            new EntityEventContext(\n                isAdded ?\n                    EntityEventType.Added :\n                    EntityEventType.Removed));\n\n\n        const sub1 = addedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            addedMessageType,\n            (msg) => mapper(msg, true),\n            getGetEntityEvent(true),\n            handlers);\n\n        const sub2 = removedMessageType && this.forwardMessageToEventHandler<TMessage, TEntity>(\n            removedMessageType,\n            (msg) => mapper(msg, false),\n            getGetEntityEvent(false),\n            handlers);\n\n        return [sub1, sub2].filter((x) => x);\n    }\n\n    private forwardMessageToEventHandler<TMessage, TEntity>(\n        messageType: string,\n        mapper: (msg: TMessage) => TEntity[],\n        getEntityEvent: (entity: TEntity, msg: TMessage) => EntityEvent<TEntity>,\n        handler: EventHandlerCallback<EntityEvent<TEntity>>[]) {\n        return this.subscribe(\n            messageType,\n            (msg: TMessage) => {\n                mapper(msg)\n                    .forEach((ent: any) =>\n                        handler.forEach((h) => h(getEntityEvent(ent, msg))));\n            });\n    }\n\n    private sendCreateAndMapResultingMessagesToPromise<TCreatedMessage extends GwMessage, TPromiseType>(\n        msg: any,\n        initiatedMessageType: string,\n        initiatedMessageFilter: (msg: any, requestId: string) => boolean,\n        createdMessageType: string,\n        createdMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        cancelledMessageType: string,\n        cancelledMessageFilter: (msg: any, requestId: string, initMsg: any) => boolean,\n        createdMessageToPromiseResolution: (TCreatedMessage: any) => TPromiseType,\n        listenForRecreates: (result: TPromiseType) => void): Promise<TPromiseType> {\n\n        const reqId = this.getRandomRequestId();\n\n        let resolveCreatedPromise: (arg: any) => void;\n        let rejectCreatedPromise: (arg: any) => void;\n        const createdPromise = new Promise<TPromiseType>((resolve, reject) => {\n            resolveCreatedPromise = resolve;\n            rejectCreatedPromise = reject;\n        });\n\n        let initiatedMessageAck: any = null;\n\n        let initiatedSubscription: any;\n        let createdSubscription: any;\n        let cancelledSubscription: any;\n        let errorSubscription: any;\n\n        const dropSubscriptions = () => {\n            this.dropSubscription(initiatedSubscription);\n            if (!listenForRecreates) {\n                this.dropSubscription(createdSubscription);\n            }\n            this.dropSubscription(cancelledSubscription);\n            this.dropSubscription(errorSubscription);\n        };\n\n        initiatedSubscription = initiatedMessageType &&\n            this.subscribe(\n                initiatedMessageType,\n                (msg4: any) => {\n                    if (!initiatedMessageFilter(msg4, reqId)) {\n                        return;\n                    }\n                    initiatedMessageAck = msg4;\n                    this.dropSubscription(initiatedSubscription);\n                });\n\n        let recreated = false;\n        createdSubscription =\n            this.subscribe(\n                createdMessageType,\n                (msg1: TCreatedMessage) => {\n                    if (!createdMessageFilter(msg1, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    if (recreated) {\n                        if (listenForRecreates) {\n                            listenForRecreates(createdMessageToPromiseResolution(msg1));\n                        }\n                    } else {\n                        recreated = true;\n                        resolveCreatedPromise(createdMessageToPromiseResolution(msg1));\n                    }\n                });\n        cancelledSubscription = cancelledMessageType &&\n            this.subscribe(\n                cancelledMessageType,\n                (msg2: any) => {\n                    if (!cancelledMessageFilter(msg2, reqId, initiatedMessageAck)) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg2);\n                });\n        errorSubscription = cancelledMessageType &&\n            this.subscribe(\n                gwMmessageError,\n                (msg3: any) => {\n                    if (msg3.request_id !== reqId) {\n                        return;\n                    }\n                    rejectCreatedPromise(msg3);\n                });\n\n        msg.request_id = reqId;\n\n        const toReturn = this._gw3Session\n            .send(msg)\n            .then(() => {\n                return createdPromise;\n            });\n        toReturn.then(dropSubscriptions, dropSubscriptions);\n        return toReturn;\n    }\n\n    // Entity Mapping\n\n    private peerFactoryIdAndOwnerIdToWindowType(factoryId: string, ownerId: string) {\n        const peerType = this._peerIdAndFactoryIdToPeerType[ownerId + \":\" + factoryId];\n        if (!peerType) {\n            return null;\n        } else {\n            return new WindowType(peerType, undefined);\n        }\n    }\n\n    private subscribe<TMessage>(messageType: string, handler: (msg: TMessage) => void) {\n        const sub = this._connection.on(\n            messageType,\n            (msg: TMessage) => handler.bind(this)(msg));\n\n        this._gw3Subscriptions.push(sub);\n\n        return sub;\n    }\n\n    private dropSubscription(subscription: any) {\n        if (subscription) {\n            this._connection.off(subscription);\n            delete this._gw3Subscriptions[this._gw3Subscriptions.indexOf(subscription)];\n        }\n    }\n\n    private invokeCallbacks<TEvent>(\n        callbacks: EventHandlerCallback<EntityEvent<TEvent>>[],\n        event: EntityEvent<TEvent>,\n        description?: string) {\n        callbacks.forEach((cb) => {\n            try {\n                cb(event);\n            } catch (err) {\n                this._logger.error(`Error in ${description || event.context.type} callback: ` + JSON.stringify(err));\n            }\n        });\n    }\n\n    private handleActivityCreatedMessage(msg: ActivityGwMessage) {\n        if (!msg.context_id) {\n            this._logger.error(\"Activity created with unknown context_id: \" + msg.activity_id);\n        } else {\n            if (!this._contextSubscriptions[msg.activity_id]) {\n                this.subscribeToContext(msg);\n            }\n        }\n    }\n\n    private async subscribeToContext(msg: ActivityGwMessage): Promise<void> {\n        const activityId = msg.activity_id;\n        this._contextSubscriptions[activityId] =\n            await this._contexts.subscribe(activityId,\n                (data: any, updated: any, removed: string[]) => {\n                    const event = new EntityEvent<Activity>(\n                        new Activity(activityId, undefined, undefined, data, undefined),\n                        new ActivityContextChangedEventContext(data, updated, removed));\n\n                    this.invokeCallbacks(\n                        this._activityChangeCallbacks,\n                        event,\n                        \"context updated\");\n                });\n    }\n\n    private handleActivityDestroyedMessage(msg: ActivityGwMessage) {\n        const unsubscribeContext = this._contextSubscriptions[msg.activity_id];\n        if (typeof unsubscribeContext === \"function\") {\n            unsubscribeContext();\n        }\n        delete this._contextSubscriptions[msg.activity_id];\n    }\n\n    private handlePeerFactoriesAdded(msg: PeerFactoryGwMessage) {\n        msg.factories.forEach((entity: PeerFactoryGwMessageEntity) => {\n            this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + entity.id] = entity.peer_type;\n        });\n    }\n\n    private handlePeerFactoriesRemoved(msg: PeerFactoryGwMessage) {\n        msg.factory_ids.forEach((factoryId: string) => {\n            delete this._peerIdAndFactoryIdToPeerType[msg.owner_id + \":\" + factoryId];\n        });\n    }\n\n    private forwardActivityTypeMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<ActivityTypeGwMessage, ActivityType>(\n            gwMmessageActivityTypesAdded,\n            gwMessageActivityTypesRemoved,\n            (msg: ActivityTypeGwMessage, isAdded) => isAdded\n                ? msg.types.map((t) => GW3Bridge.activityTypeGwMessageEntityToActivityType(t, undefined))\n                : msg.types.map((t) => new ActivityType(t.name, undefined, undefined, undefined)),\n            this._activityTypeStatusChangeCallbacks);\n\n    }\n\n    private forwardActivityCreatedAndJoinedActivityToActivityWindowEventHandlers() {\n        // if we're created as part of this activity, the JOINED ACTIVITY is\n\n        // the first time we'll hear about it; so let's record the participants\n        for (const activityCreatedMessage of [gwMessageActivityCreated, gwMessageJoinedActivity, gwMessageOwnerChanged]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, ActivityWindow>(\n                activityCreatedMessage,\n                (msg) =>\n                    ([msg.owner || { ...msg, type: msg.peer_type, name: msg.peer_name, peer_id: msg.owner_id }])\n                        .concat(msg.participants || [])\n                        .map((info: any) => new ActivityWindow(info.peer_id, info.name, info.type, msg.activity_id, this.getAgmInstance(info.peer_id), undefined, this.generateWindowGetter(info.peer_id), undefined)),\n                (ent, msg) => new EntityEvent<ActivityWindow>(ent, new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                this._activityWindowChangeCallbacks);\n        }\n    }\n\n    private forwardActivityMessagesToStatusEventHandlers() {\n\n        // see dot-net-activity\\Activity\\ActivityState.cs\n\n        for (const createdMessage of [gwMessageActivityCreated, gwMessageJoinedActivity]) {\n            this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n                createdMessage,\n                (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"started\", \"\", new Date()))],\n                (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n                this._activityChangeCallbacks);\n        }\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityDestroyed,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"destroyed\", msg.reason, new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageActivityInitiated,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n\n        this.forwardMessageToEventHandler<ActivityGwMessage, Activity>(\n            gwMessageOwnerChanged,\n            (msg) => [GW3Bridge.activityGwMessageToActivity(msg, new ActivityStatus(\"created\", \"\", new Date()))],\n            (ent, msg) => GW3Bridge.activityToActivityStatusChangeEvent(ent),\n            this._activityChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToStatusEventHandlers() {\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerFactoryGwMessage, WindowType>(\n            gwMessagePeerFactoriesAdded,\n            gwMessagePeerFactoriesRemoved,\n            (msg: PeerFactoryGwMessage, isAdded: boolean) => isAdded\n                ? msg.factories.map(GW3Bridge.peerFactoryGwMessageEntityToWindowType)\n                : msg.factory_ids.map((id) => this.peerFactoryIdAndOwnerIdToWindowType(id, msg.owner_id)).filter((x) => x != null),\n            this._windowTypeStatusChangeCallbacks);\n    }\n\n    private forwardPeerFactoryMessagesToPeerFactoryRequests() {\n        this.subscribe(\n            gwMessagePeerRequested,\n            (msg: PeerRequestedGwMessage) => {\n                const factory = this._peerFactoriesRegisteredByUs[msg.peer_factory];\n                if (!factory) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: `Unknown peer factory ${msg.peer_factory}`\n                        });\n                    return;\n                }\n\n                try {\n                    const configuration = msg.configuration || {};\n                    // NB: peer factories (or whoever they're delegating to) need to support whatever activity\n                    // environment (GW3, HC) we're targeting when they're creating peers\n                    // the manager is env agnostic, the bridge will augment the configuration with whatever's required\n\n                    // NB: also, since peers are requested in two ways (single peer with just its configuration,\n                    // or peer created as part of new activity, where the factory receives the aggregate config of\n                    // all peers, combined from ADD ACTIVITY TYPE and CREATE ACTIVITY), the peer factories need to\n                    // be able to handle both configuration structures intelligently.\n                    configuration.gateway_token = configuration.gateway_token || msg.gateway_token;\n                    configuration.peer_factory = configuration.peer_factory || msg.peer_factory;\n                    const promise = factory({\n                        activityId: msg.activity && msg.activity.id,\n                        activityType: msg.activity && msg.activity.type,\n                        type: msg.configuration && msg.configuration.type,\n                        gwToken: configuration.gateway_token,\n                        configuration\n                    });\n                    if (promise && promise.then && promise.catch) {\n                        promise.catch((err) => this._gw3Session.send(\n                            {\n                                type: gwMmessageError,\n                                request_id: msg.request_id,\n                                reason: err && (err.message || JSON.stringify(err))\n                            }));\n                    }\n                } catch (err) {\n                    this._gw3Session.send(\n                        {\n                            type: gwMmessageError,\n                            request_id: msg.request_id,\n                            reason: err && (err.message || JSON.stringify(err))\n                        });\n                }\n            });\n    }\n\n    private forwardActivityWindowMessagesToEventHandlers() {\n        for (const joinedMessage of [gwMessageActivityJoined, gwMessageJoinedActivity]) {\n            this.subscribe(joinedMessage,\n                (msg: any) => {\n                    const joinedId = (joinedMessage === gwMessageActivityJoined) ? msg.joined_id : msg.peer_id;\n                    const joinedType = (joinedMessage === gwMessageActivityJoined) ? msg.joined_type : msg.peer_type;\n                    const joinedName = (joinedMessage === gwMessageActivityJoined) ? msg.joined_name : msg.peer_name;\n\n                    const entity = new ActivityWindow(\n                        joinedId,\n                        joinedName,\n                        joinedType /* for ACTIVITY JOINED */,\n                        msg.activity_id,\n                        this.getAgmInstance(joinedId),\n                        undefined,\n                        this.generateWindowGetter(joinedId),\n                        undefined);\n\n                    // TODO review - what if it's our activity, do we\n                    // even need to subscribe\n                    if (!this._contextSubscriptions[msg.activity_id]) {\n                        this.subscribeToContext(msg).then(() => {\n                            if (joinedMessage === gwMessageJoinedActivity) {\n                                this._activityJoinedPromiseResolve({});\n                            }\n                        });\n                    } else if (joinedMessage === gwMessageJoinedActivity) {\n                        this._activityJoinedPromiseResolve({});\n                    }\n\n                    // TODO review: we might have the context data here already\n                    // why not update it here instead of waiting for subscribeToContext\n                    this.invokeCallbacks(\n                        this._activityWindowChangeCallbacks,\n                        new EntityEvent<ActivityWindow>(\n                            entity,\n                            new EntityEventContext(EntityEventType.ActivityWindowJoinedActivity)),\n                        joinedMessage);\n\n                });\n        }\n\n        this.subscribe(\n            gwMessageActivityLeft,\n            (msg: any) => {\n                const entity = new ActivityWindow(\n                    msg.left_id,\n                    undefined,\n                    undefined,\n                    null,\n                    this.getAgmInstance(msg.left_id),\n                    undefined,\n                    this.generateWindowGetter(msg.left_id),\n                    undefined);\n\n                this.invokeCallbacks(\n                    this._activityWindowChangeCallbacks,\n                    new EntityEvent<ActivityWindow>(\n                        entity,\n                        new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)),\n                    gwMessageActivityLeft);\n            });\n\n        this.forwardAddedAndRemovedMessagesToEventHandler<PeerCreatedGwMessage, ActivityWindow>(\n            gwMessagePeerCreated,\n            undefined,\n            (msg) => [\n                new ActivityWindow(\n                    msg.created_id,\n                    undefined /* #deleteme TODO: review - we should know the name if any */,\n                    undefined /* #deleteme TODO: review - we should know the type */,\n                    undefined,\n                    undefined,\n                    undefined,\n                    this.generateWindowGetter(msg.created_id),\n                    undefined)],\n            this._activityWindowChangeCallbacks);\n    }\n\n    private getAgmInstance(id: string): Glue42.AGM.Instance {\n        return this._config.agm.servers().find((s) => s.peerId === id || s.windowId === id);\n    }\n\n    private generateWindowGetter(peerId: string): () => Glue42.Windows.GDWindow {\n        return () => {\n            const server = this.getAgmInstance(peerId);\n            if (!server) {\n                return;\n            }\n            const windowId = server.windowId;\n            return this._config.windows.list().filter((w) => w.id === windowId)[0];\n        };\n    }\n\n    private isOverrideTypeDefinition(value: OverrideTypeDefinition | WindowDefinition[]): value is OverrideTypeDefinition {\n        if (typeof value === \"undefined\") {\n            return false;\n        }\n        if ((value as OverrideTypeDefinition).owner) {\n            return true;\n        }\n        return false;\n    }\n}\n","/* eslint-disable @typescript-eslint/restrict-plus-operands */\nimport { EntityEventType } from \"./../contracts/entityEvent\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\n\nimport ActivityManager from \"./../core/activityManager\";\nimport { Logger } from \"./../helpers/logger\";\nimport * as util from \"./../helpers/util\";\n\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { Callback } from \"../contracts/contracts\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface My {\n\n  activity: Activity;\n\n  window: ActivityWindow;\n\n  context: object;\n\n  updateContext(context: object, callback?: any): Promise<object>;\n\n  setContext(context: object, callback?: any): Promise<object>;\n\n  onActivityJoined(callback: (activity: Activity) => void): void;\n\n  onActivityLeft(callback: (activity: Activity) => void): void;\n\n  onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void): void;\n\n  clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity>;\n\n  attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor>;\n\n  setFrameColor(color: string, callback: () => void): Promise<Activity>;\n\n  getFrameColor(): string;\n\n  onFrameColorChanged(callback: () => void): void;\n}\n\n/**\n * A lightweight, single activity oriented subset of the API which should be used by most activity applications.\n * Provides access to the activity of your application (my.activity) and shortcuts to the most commonly used methods\n * (e.g. my.createWindow is a shortcut for my.activity.createWindow)\n *\n * @module my\n */\nexport default class ActivityMy implements My {\n\n  public _myAttached: ((state: AttachedActivityDescriptor) => void)[] = [];\n  public _myDetached: ((state: AttachedActivityDescriptor) => void)[] = [];\n  public _myAttachedTo: ((activity: Activity, state: AttachedActivityDescriptor) => void)[] = [];\n  public _myDetachedFrom: ((detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void)[] = [];\n  public _myActivityFrameColorChanged: ((frameColor: string) => void)[] = [];\n  public _myActivityJoinedCallbacks: ((activity: Activity, event: any) => void)[] = [];\n  public _myActivityRemovedCallbacks: ((activity: Activity, event: any) => void)[] = [];\n  public _myContextUpdateCallbacks: ((context: object, delta: object, removed: string[], activity: Activity) => void)[] = [];\n  public _w: ActivityWindow;\n  public _m: ActivityManager;\n  public _logger: Logger = Logger.Get(this);\n\n  constructor(manager: ActivityManager, windows: any) {\n    this._m = manager;\n    manager.ready()\n      .then((am) => {\n        // Subscribe for events for driving \"my\" logic\n        am.subscribeActivityContextChanged(this._subscribeMyContextChanged.bind(this));\n        am.subscribeWindowEvents(this._subscribeMyWindowEvent.bind(this));\n        am.subscribeActivitiesAttached(this._subscribeActivitiesAttached.bind(this));\n        am.subscribeActivitiesDetached(this._subscribeActivitiesDetached.bind(this));\n        if (windows) {\n          windows.onWindowFrameColorChanged(this._subscribeWindowFrameColorChanged.bind(this));\n        }\n      });\n  }\n\n  /**\n   * The current activity window; can be undefined (if the window is not part of any activity)\n   *\n   * @var {Window} window\n   */\n  public get window(): ActivityWindow {\n    if (util.isUndefinedOrNull(this._w)) {\n      const announcedWindows = this._m.announcedWindows;\n      if (announcedWindows.length > 0) {\n        this._w = announcedWindows[0];\n      }\n    }\n    return this._w;\n  }\n\n  /**\n   * The current activity that the application participates in.\n   * Can be undefined (if currently not part of any activity)\n   *\n   * @var {module:activity} activity\n   */\n  public get activity(): Activity {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return undefined;\n    }\n    return myWin.activity;\n  }\n\n  /**\n   * Creates a new window and joins it to the activity\n   *\n   * @function createWindow\n   * @param {string| windowDefinition} windowType The type of the window to be created\n   * @returns {Promise<module:activityWindow>}\n   */\n  public createWindow(windowType: string | WindowDefinition): Promise<ActivityWindow> {\n    return this._m.createWindow(this.activity, windowType);\n  }\n\n  /**\n   * Creates a stacked set of windows and joins them to the\n   *\n   * @function createStackedWindows\n   * @param {string[] | windowDefinition[]} windowTypes The types of the windows to be created\n   * @param {number} timeout\n   * @returns {Promise<module:activityWindow[]>}\n   */\n  public createStackedWindows(windowTypes: (string | WindowDefinition)[], timeout?: number): Promise<ActivityWindow[]> {\n    return this._m.createStackedWindows(this.activity, windowTypes, timeout);\n  }\n\n  /**\n   * The current activity context. To update use my.updateContext, to replace my.setContext\n   *\n   * @var {object} context\n   */\n  public get context(): object {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return {};\n    }\n\n    return activity.context;\n  }\n\n  /**\n   * Updates activity context using the properties from the context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @function updateContext\n   * @param {object} context\n   * @return {Promise<object>}\n   */\n  public updateContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise<object>((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.updateContext(context, callback);\n  }\n\n  /**\n   * Replaces the activity context with a new one.\n   *\n   * @function setContext\n   * @param {object} context   The new context\n   * @returns {Promise<Object>}\n   */\n  public setContext(context: object, callback?: any): Promise<object> {\n    const activity = this.activity;\n    if (util.isUndefined(activity)) {\n      return new Promise((resolve, reject) => {\n        reject(\"Not in activity\");\n      });\n    }\n\n    return activity.setContext(context, callback);\n  }\n\n  public onActivityJoined(callback: (activity: Activity) => void) {\n    this._myActivityJoinedCallbacks.push(callback);\n\n    // replay joined event\n    const myWin = this.window;\n    if (!util.isUndefinedOrNull(myWin) && !util.isUndefinedOrNull(myWin.activity)) {\n      callback(myWin.activity);\n    }\n  }\n\n  public onActivityLeft(callback: (activity: Activity) => void) {\n    this._myActivityRemovedCallbacks.push(callback);\n  }\n\n  /**\n   * Subscribe for context updates\n   *\n   * @function onContextChanged\n   * @param {contextChangedHandler} callback Handler function that will receive context related events\n   */\n  public onContextChanged(callback: (context: object, delta: object, removed: string[], activity: Activity) => void) {\n    this._myContextUpdateCallbacks.push(callback);\n\n    // publish initial event\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const activity = myWin.activity;\n    if (util.isUndefinedOrNull(activity)) {\n      return;\n    }\n\n    // NB: either the callback is added before the activity is recorded in the API, or\n    // the activity is recorded before the callback\n    // in the former case, when the activity is seen, the callback will be invoked in _notifyMyContextChanged\n    // in the latter, the callback will be invoked here\n    // in both cases, the callback will be invoked at least once as soon as an activity is recorded\n\n    // see \"long analysis for callback behavior in GW3: several cases\" for full explanation\n\n    callback(activity.context, activity.context, [], activity);\n  }\n\n  public clone(options: CloneOptions, callback: Callback<Activity>): Promise<Activity> {\n    const act = this.activity;\n    return this._m.clone(act, options, callback);\n  }\n\n  public attach(activity: Activity | string, tag?: object): Promise<AttachedActivityDescriptor> {\n    let activityId: string;\n    if (typeof activity === \"string\") {\n      activityId = activity;\n    } else {\n      activityId = activity.id;\n    }\n    return this._m.attachActivities(activityId, this.activity.id, tag);\n  }\n\n  public onActivityAttached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myAttached.push(callback);\n  }\n\n  public onActivityDetached(callback: (state: AttachedActivityDescriptor) => void) {\n    this._myDetached.push(callback);\n  }\n\n  public onAttachedToActivity(callback: (activity: Activity, state: AttachedActivityDescriptor) => void) {\n    this._myAttachedTo.push(callback);\n  }\n\n  public onDetachedFromActivity(callback: (detached: Activity, existing: Activity, state: AttachedActivityDescriptor) => void) {\n    this._myDetachedFrom.push(callback);\n  }\n\n  public get attached() {\n    if (!this.activity) {\n      return [];\n    }\n\n    return this.activity.attached;\n  }\n\n  public setFrameColor(color: string, callback: () => void): Promise<Activity> {\n\n    if (this.activity) {\n      return this.activity.setFrameColor(color, callback);\n    } else {\n      return Promise.resolve(null);\n    }\n  }\n\n  public getFrameColor(): string {\n\n    if (this.activity) {\n      return this.activity.getFrameColor();\n    }\n\n    return \"\";\n  }\n\n  public onFrameColorChanged(callback: () => void) {\n    this._myActivityFrameColorChanged.push(callback);\n  }\n\n  private _subscribeMyContextChanged(activity: Activity, context: object, delta: object, removed: string[]) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (activity.id !== myActivity.id) {\n      return;\n    }\n\n    this._notifyMyContextChanged(activity, context, delta, removed);\n  }\n\n  private _subscribeMyWindowEvent(activity: Activity, window: ActivityWindow, event: any) {\n\n    if (util.isUndefinedOrNull(this.window)) {\n      return;\n    }\n\n    // ignore events not related to my window\n    if (this.window.id !== window.id) {\n      return;\n    }\n\n    if (event === EntityEventType.ActivityWindowJoinedActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityJoinedCallbacks);\n\n      // NB: tick42-contexts doesn't raise automatically an update event on join if the snapshot matches\n      // the currently recorded data\n      // revisited: however, it is pushing an update on subscribe() (which is performed by js-activity)\n      // long analysis for callback behavior in GW3: several cases\n      // 1 client calls onContextChanged before joined-activity arrives\n      // then callback is pushed but onContextChanged callback call is skipped\n      //    1-1 js-activity handles joined-activity first; it calls js-context subscribe\n      //    1-1-1 js-context has not seen the activity so far so it doesn't invoke an update\n      //    however, js-context then handles joined-activity and raises an update\n      //    1-1-2 js-context has seen the activity, so it raises an update\n      //    js-context then handles joined-activity and doesn't raise a second update unless the received snapshot is\n      //    different from the last seen context value (can this even happen?)\n      //    1-2 js-context handles joined-activity first\n      //    since js-activity is not subscribed, whether it raises an update or not, it's not propagated\n      //    js-activity then handles joined-activity, performs a subscribe and js-context raises an update\n      // 2 joined-activity arrives, whatever updates are raised by js-activity's subscribe() or js-context's\n      // message handler are not propagated since the callback is not pushed, client then calls onContextChanged,\n      // and the callback is called inside that\n      // also, the callback cannot be invoked first in 1 then 2 or first 2 then 1\n      // => in all cases, a callback is called exactly once as soon as (it's subscribed && the activity is joined)\n      // (in 1-1-2 it *might* be possible to be called twice, first with a slightly out of date context,\n      // then with the joined-activity snapshot, see \"different from the last seen context value\", but it's unlikely,\n      // and not a real issue anyway)\n      // in the HC case, however, case 1 doesn't work since js-context doesn't raise updates on subscribe() nor\n      // joining the activity (#deleteme TODO LATER MINOR: verify), so we need to raise it ourselves\n\n      // 2017-09-08: final revisit (@vnikolov)\n      // since SBGW_D-163 allows automatic subscription to contexts of pre-existing activities, 1-1-2 no longer works\n      // (we might have already seen the latest state before joined-activity so no update will be raised)\n      // for this reason I'm invoking notifyMyContextChanged unconditionally - so we might have multiple\n      // invocations; if this turns into a problem we might add a guard inside notifyMyContextChanged that\n      // checks we're not raising it twice with the same context value\n      //\n      // we might also get a duplicate raise if the sender of an update is also subscribed to the context\n      // if (this._m.usingHc) {\n      this._notifyMyContextChanged(activity, activity.context, null, null);\n      // }\n\n      // #deleteme TODO LATER MAJOR: what about the cases when we're not watching foreign activity contexts?\n    } else if (event === EntityEventType.ActivityWindowLeftActivity) {\n      this._notifyMyWindowEvent(activity, this._myActivityRemovedCallbacks);\n      // #deleteme TODO LATER MINOR: should we send null update here?\n    }\n  }\n\n  private _notifyMyWindowEvent(activity: Activity, callbackStore: ((activity: Activity, event: any) => void)[]) {\n    callbackStore.forEach((element) => {\n      try {\n        element(activity, event);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyMyContextChanged(activity: Activity, context: object, delta?: object, removed?: string[]) {\n    delta = delta || {};\n    removed = removed || [];\n\n    this._myContextUpdateCallbacks.forEach((element) => {\n      try {\n        element(context, delta, removed, activity);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttached(state: AttachedActivityDescriptor) {\n\n    this._myAttached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetached(state: AttachedActivityDescriptor) {\n\n    this._myDetached.forEach((cb) => {\n      try {\n        cb(state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyAttachedTo(state: AttachedActivityDescriptor) {\n\n    this._myAttachedTo.forEach((cb) => {\n      try {\n        cb(this.activity, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _notifyDetachedFrom(detached: Activity, existing: Activity, state: AttachedActivityDescriptor) {\n\n    this._myDetachedFrom.forEach((cb) => {\n      try {\n        cb(detached, existing, state);\n      } catch (e) {\n        this._logger.warn(\"error in user callback \" + e);\n      }\n    });\n  }\n\n  private _subscribeActivitiesAttached(newAct: Activity, state: AttachedActivityDescriptor) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (newAct.id !== myActivity.id) {\n      return;\n    }\n\n    if (state.windowIds.indexOf(myWin.id) >= 0) {\n      this._notifyAttachedTo(state);\n      return;\n    }\n\n    this._notifyAttached(state);\n  }\n\n  private _subscribeActivitiesDetached(newAct: Activity, oldAct: Activity, state: any) {\n    const myWin = this.window;\n    if (util.isUndefinedOrNull(myWin)) {\n      return;\n    }\n\n    const myActivity = myWin.activity;\n    if (util.isUndefinedOrNull(myActivity)) {\n      return;\n    }\n\n    // ignore events not related to my activity\n    if (oldAct.id === myActivity.id) {\n      this._notifyDetached(state);\n    }\n\n    if (newAct.id === myActivity.id) {\n      this._notifyDetachedFrom(newAct, oldAct, state);\n    }\n  }\n\n  private _subscribeWindowFrameColorChanged(window: Glue42.Windows.GDWindow) {\n    const act = this.activity;\n    if (!act) {\n      return;\n    }\n\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id === window.id) {\n      this._myActivityFrameColorChanged.forEach((callback) => {\n        callback(window.frameColor);\n      });\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/restrict-plus-operands */\nimport { Logger } from \"./logger\";\nimport * as util from \"../helpers/util\";\n/**\n * Class that can be used as a marker for successful completion of a set of events\n * @private\n * @module readyMarker\n */\nexport class ReadyMarker {\n  private _callbacks: ((err: any) => void)[];\n  private _signals: number;\n  private _error: any;\n  private _logger: Logger;\n  private _name: string;\n\n  /**\n   * Creates new marker\n   * @param name Name of the marker, useful in logging\n   * @param signalsToWait Number of signals(events) that needs to be signaled (completed) before the marker is set as completed\n   */\n  constructor(name: string, signalsToWait: number) {\n    this._logger = Logger.Get(\"ReadyMarker [\" + name + \"]\");\n    this._logger.debug(\"Initializing ready marker for '\" + name + \"' with \" + signalsToWait + \" signals to wait\");\n    if (signalsToWait <= 0) {\n      throw new Error(\"Invalid signal number. Should be > 0\");\n    }\n    this._signals = signalsToWait;\n    this._callbacks = [];\n    this._name = name;\n  }\n\n  /**\n   * Adds a new callback that will be notified when the events are completed (success) or some error happened\n   */\n  public setCallback(callback: (err: any) => void) {\n    if (this.isSet()) {\n      callback(undefined);\n      return;\n    } else if (this.isError()) {\n      callback(this._error);\n      return;\n    }\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Signals for a completion of an event. If this is the last event success callbacks will be called\n   */\n  public signal(message?: string) {\n    this._logger.debug(\"Signaled - \" + message + \" - signals left \" + (this._signals - 1));\n    this._signals--;\n    if (this._signals < 0) {\n      throw new Error(\"Error in ready marker '\" + this._name + \" - signals are \" + this._signals);\n    }\n\n    if (this.isSet()) {\n      this._callbacks.forEach((callback) => {\n        callback(undefined);\n      });\n    }\n  }\n\n  /**\n   * Signals for an error in some of the events. This will notify all callbacks that the marker has failed\n   */\n  public error(error: string) {\n    this._error = error;\n    this._callbacks.forEach((errorCallback) => {\n      errorCallback(error);\n    });\n  }\n\n  /**\n   * Checks if the marker is set (completed)\n   */\n  public isSet() {\n    if (this.isError()) {\n      return false;\n    }\n    return this._signals === 0;\n  }\n\n  /**\n   * Checks if the marker has failed (some of the events has failed)\n   */\n  public isError() {\n    return !util.isUndefined(this._error);\n  }\n\n  /**\n   * Returns the last reported error (undefined if no error)\n   */\n  public getError() {\n    return this._error;\n  }\n}\n","import ActivityEntity from \"../entities/activityEntity\";\nimport {\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\nimport Activity from \"../entities/activity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport { ActivityState } from \"..//contracts/entityEvent\";\n\ndeclare const htmlContainer: any;\n\n/**\n * Collection of ActivityEntities that provides change notifications\n * @module entityCollection\n * @private\n */\nexport class EntityObservableCollection<T extends ActivityEntity> {\n\n  private _items: { [key: string]: T } = {};\n  private _listeners: ((item: T, action: EntityEventContext) => void)[] = [];\n  private _processNew: (entity: T) => void;\n\n  constructor(processNew: (entity: T) => void) {\n    this._processNew = processNew;\n  }\n\n  /**\n   * Adds one item to the collection\n   */\n  public addOne(item: T) {\n    this.add([item]);\n  }\n\n  /**\n   * Adds an array of items to the collection\n   */\n  public add(items: T[]) {\n    items.forEach((element) => {\n      this.process(new EntityEvent<T>(element, new EntityEventContext(EntityEventType.Added)));\n    });\n  }\n\n  /**\n   * Process existing EntityEvent\n   */\n  public process(event: EntityEvent<T>): T {\n\n    const context = event.context;\n    const type = context.type;\n    const entity = event.entity;\n\n    // here we're populating some data which particular implementations (e.g.\n    // GW3) can't provide\n\n    // TODO: extract these cases into external filters\n\n    // activity status change without old status?\n    // grab it from the existing entity\n    if (type === EntityEventType.StatusChange &&\n      !(context as ActivityStatusChangeEventContext).oldStatus) {\n      const act = this._items[entity.id] as any as Activity;\n      if (act) {\n        (context as ActivityStatusChangeEventContext).oldStatus = act.status;\n      }\n    }\n\n    // the GW3 bridge notifies us of possible status changes (it's mostly stateless so\n    // it can't/doesn't distinguish between JOINED ACTIVITY for an activity we already\n    // know about vs a brand new activity. for this reason, we just coalesce status\n    // updates which indicate the same state.\n    if (type === EntityEventType.StatusChange &&\n      (context as ActivityStatusChangeEventContext).oldStatus &&\n      (context as ActivityStatusChangeEventContext).newStatus &&\n      (context as ActivityStatusChangeEventContext).oldStatus.state ===\n      (context as ActivityStatusChangeEventContext).newStatus.state) {\n      context.type = EntityEventType.Updated;\n    }\n\n    // GW3: coalesce multiple joined/left events\n\n    if (typeof htmlContainer === \"undefined\") {\n      if (type === EntityEventType.ActivityWindowJoinedActivity &&\n        this._items[entity.id] &&\n        (this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n      if (type === EntityEventType.ActivityWindowLeftActivity &&\n        this._items[entity.id] &&\n        !(this._items[entity.id] as any as ActivityWindow).activity) {\n        context.type = EntityEventType.Updated;\n      }\n    }\n\n    // update internal collections (adding the entity or updating existing entity). From that\n    // point start using the internalEntity\n    // NB: undefined properties are coalesced, null properties represent removals\n    const internalEntity = this._updateInternalCollections(entity, type, context);\n    this._notifyListeners(internalEntity, context);\n    return internalEntity;\n  }\n\n  /**\n   * Gets all items from the collection.\n   */\n  public get(): T[] {\n    const result = [];\n    for (const key in this._items) {\n      if (this._items.hasOwnProperty(key)) {\n        const element = this._items[key];\n        result.push(element);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets item by name/id\n   * @param name  Name/id of the item to get\n   * @returns     Item if found; undefined if not\n   */\n  public getByName(name: string) {\n    // this does not work for some reason\n    // return this._items[name];\n    for (const key in this._items) {\n      if (key === name) {\n        return this._items[key];\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Gets a item if in the collection or waits for it to appear\n   * @param name\n   * @returns {Promise<T>}\n   */\n  public getOrWait(name: string): Promise<T> {\n    return new Promise<T>((resolve) => {\n      const entityAddedHandler = (entity: T) => {\n        if (entity.id !== name) {\n          return;\n        }\n        resolve(entity);\n        this.unsubscribe(entityAddedHandler);\n      };\n      this.subscribe(entityAddedHandler);\n\n      // try to get right away - if not here wait for it to appear\n      const window = this.getByName(name);\n      if (window) {\n        this.unsubscribe(entityAddedHandler);\n        resolve(window);\n        return;\n      }\n    });\n  }\n\n  /**\n   * Subscribes a listener for changes\n   * @param handler Callback for changes\n   */\n  public subscribe(handler: (act: T, action: EntityEventContext) => void): () => void {\n    this._listeners.push(handler);\n    // replay existing items for new subscribers\n    Object.keys(this._items).forEach((key) => {\n      const element = this._items[key];\n      handler(element, new EntityEventContext(EntityEventType.Added.toString()));\n    });\n\n    return () => {\n      this.unsubscribe(handler);\n    };\n  }\n\n  /**\n   * Unsubscribes a listener\n   */\n  public unsubscribe(handler: (act: T, action: EntityEventContext) => void) {\n    const index = this._listeners.indexOf(handler);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Notify all listeners for some event\n   */\n  private _notifyListeners(entity: T, context: EntityEventContext) {\n    this._listeners.forEach((listener) => {\n      try {\n        listener(entity, context);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n\n  /**\n   * Update internal collections (usually after some kind of modification event has arrived)\n   */\n  private _updateInternalCollections(entity: T, type: EntityEventType, context: any) {\n    const entityAsAny = (entity as any);\n\n    // #deleteme TODO: refactor - currently we apply some rules for each type\n    const isActivityDestroy =\n      (type === EntityEventType.StatusChange &&\n        entityAsAny.status &&\n        entityAsAny.status.state === ActivityState.Destroyed) ||\n      (type === EntityEventType.StatusChange &&\n        context &&\n        context.newStatus &&\n        context.newStatus.state === ActivityState.Destroyed);\n\n    // #deleteme TODO: verify this stuff\n    // windows have two states - removed from activity and closed (TODO: this only works in GD 2.1 and later)\n    const isWindowClose = type === EntityEventType.Closed;\n    const isTypeRemove = type === EntityEventType.Removed && typeof entityAsAny.isIndependent === \"undefined\";\n\n    if (isTypeRemove || isWindowClose || isActivityDestroy) {\n\n      const oldEntity = this._items[entity.id];\n      delete this._items[entity.id];\n      // on remove return the input entity\n      this._processNew(entity);\n      if (oldEntity) {\n        entity._beforeDelete(oldEntity);\n      }\n      return entity;\n    } else {\n      const key = entity.id;\n      // if new object add, otherwise clone object properties\n      if (!this._items.hasOwnProperty(key)) {\n        this._processNew(entity);\n        this._items[entity.id] = entity;\n      } else {\n        this._items[entity.id]._update(entity);\n      }\n    }\n\n    return this._items[entity.id];\n  }\n}\n","﻿/* eslint-disable @typescript-eslint/restrict-plus-operands */\n/* tslint:disable */\nimport { ActivityContextUpdateHandler, Callback } from \"../contracts/contracts\";\nimport { ActivityStatus } from \"../contracts/activityStatus\";\nimport {\n  ActivityContextChangedEventContext,\n  ActivityStatusChangeEventContext,\n  EntityEvent,\n  EntityEventContext,\n  EntityEventType\n} from \"../contracts/entityEvent\";\n\nimport ActivityType from \"../entities/activityType\";\nimport WindowType from \"../entities/windowType\";\nimport Activity from \"../entities/activity\";\nimport ActivityEntity from \"../entities/activityEntity\";\nimport ActivityWindow from \"../entities/activityWindow\";\nimport WindowSource from \"../entities/windowSource\";\n\nimport { nodeify } from \"../helpers/promiseExtensions\";\nimport { ReadyMarker } from \"../helpers/readyMarker\";\nimport { EntityObservableCollection } from \"../helpers/entityObservableCollection\";\nimport { Logger } from \"../helpers/logger\";\nimport * as util from \"../helpers/util\";\n\nimport { ActivityBridge } from \"../bridges/activityBridge\";\nimport { WindowDefinition } from \"../entities/windowDefinition\";\nimport { WindowBounds } from \"../contracts/windowBounds\";\nimport { CloneOptions } from \"../entities/cloneOptions\";\nimport { AttachedActivityDescriptor } from \"../entities/attachedActivityDescriptor\";\nimport { ActivityDescriptor } from \"../entities/activityDescriptor\";\nimport { ActivityState } from \"../contracts/entityEvent\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n/* tslint:enable */\n\ntype OverrideTypeDefinition = Glue42.Activities.OverrideTypeDefinition;\n\nexport default class ActivityManager {\n  private _bridge: ActivityBridge;\n  private _readyMarker: ReadyMarker;\n  private _dataReadyMarker: ReadyMarker;\n  private _descriptorsMarker: ReadyMarker;\n\n  private _activityTypes: EntityObservableCollection<ActivityType>;\n  private _windowTypes: EntityObservableCollection<WindowType>;\n  private _activities: EntityObservableCollection<Activity>;\n  private _windows: EntityObservableCollection<ActivityWindow>;\n  private _logger: Logger = Logger.Get(\"activityManager\");\n  private _announcedWindows: ActivityWindow[] = [];\n  private _attachedCallbacks: ((newAct: any, descriptor: any) => void)[] = [];\n  private _detachedCallbacks: ((newAct: any, oldAct: Activity, descriptor: any) => void)[] = [];\n  private _frameColorChangesCallbacks: ((act: Activity, frameColor: string) => void)[] = [];\n  private _windowHandlers: any[][] = [];\n\n  public get usingHc(): boolean {\n    return this._bridge.bridgeType === \"HC\";\n  }\n\n  public get announcedWindows(): ActivityWindow[] {\n    return this._announcedWindows;\n  }\n\n  public set announcedWindows(v: ActivityWindow[]) {\n    throw new Error(\"not allowed\");\n  }\n\n  constructor(bridge: ActivityBridge, autoAnnounce: boolean, windows: any) {\n    this._bridge = bridge;\n    this._activityTypes = new EntityObservableCollection<ActivityType>((e) => this._grabEntity(e));\n    this._windowTypes = new EntityObservableCollection<WindowType>((e) => this._grabEntity(e));\n    this._activities = new EntityObservableCollection<Activity>((e) => this._grabEntity(e));\n    this._windows = new EntityObservableCollection<ActivityWindow>((e) => this._grabEntity(e));\n\n    // signals to wait for - get AT, get WT, get Activities and get Windows\n    this._dataReadyMarker = new ReadyMarker(\"Activity Manager Data\", [\"GetActivityTypes\", \"GetWindowTypes\", \"GetActivities\", \"GetWindows\"].length);\n    this._descriptorsMarker = new ReadyMarker(\"Attached Activities Descriptors\", [\"GetDescriptors\"].length);\n\n    // waiting for activity data first\n\n    // NB: in the GW3 case, we don't have the ability to request data at will\n    // but need wait for delta messages\n    // So GW3Bridge returns empty arrays from the get() calls\n    // We're relying on the fact that the GW3 bridge will wait\n    // until resolving its .ready()\n\n    if (autoAnnounce) {\n      // if auto announce replace the ready marker, so:\n      // 1) wait for data\n      // 2) get descriptors\n      // 3) announce the current window\n\n      this._readyMarker = new ReadyMarker(\"Activity Manager Announce\", [\"Announcement\"].length);\n      this._dataReadyMarker.setCallback((dataErr: any) => {\n        if (dataErr) {\n          this._readyMarker.error(dataErr);\n        }\n\n        this._descriptorsMarker.setCallback((err: any) => {\n\n          if (err) {\n            this._readyMarker.error(err);\n          }\n\n          this._logger.debug(\"Auto announcing window\");\n          // signal no matter if it failed or not\n          this.announceWindow()\n            .then((w) => {\n              // NB: this creates glue.activities.my.window\n              this._announcedWindows.push(w);\n              this._readyMarker.signal(\"Successfully announced window with id '\" + w.id + \"'\");\n            })\n            .catch((errCatch) => {\n              this._logger.debug(\"Will not announce window - \" + errCatch);\n              this._readyMarker.signal();\n            });\n        });\n\n        this.refreshDescriptors();\n      });\n    } else {\n      // TODO: not sure if this still works\n      this._readyMarker = this._dataReadyMarker;\n    }\n\n    this._bridge.onActivitiesAttached((e) => {\n      this._handleActivitiesAttached(e);\n    });\n    this._bridge.onActivitiesDetached((e) => {\n      this._handleActivitiesDetached(e);\n    });\n    this._bridge.onActivityAttachedDescriptorsRefreshed((e) => {\n      this._handleActivityDescriptorsRefreshed(e);\n    });\n    if (windows) {\n      windows.onWindowFrameColorChanged(this._handleWindowFrameColorChanged.bind(this));\n    }\n\n    // initialize the bridge\n    this._bridge.init();\n\n    // NB: there is no race condition here.\n    // Since browser/Node JS is a single-threaded environment, assuming no events on _bridge\n    // fire inside .init(), this subscribe will catch anything that comes between it and the init() call\n    this._subscribeForData();\n\n    // NB: in GW3 case, the initial state messages after a JOIN come in before the JOIN's SUCCESS\n    // message (see https://confluence.tick42.com:8443/display/TD/Global+Gateway+Domain#GlobalGatewayDomain-JOIN)\n    // so the .initReady().then() callback will only get invoked after we've received the initial domain\n    // state. We need to be ready to handle events before that, hence the _subscribeForData() above.\n    // what's more, our own JOINED ACTIVITY will come only after we've sent our READY, hence waiting\n    // for bridge.ready() in the manager's ready()\n\n    // wait for it to become ready and then start getting/subscribing for data\n    this._bridge\n      .initReady()\n      .then((aw) => {\n        this._getInitialData();\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      });\n  }\n\n  public ready(callback?: (err: string, manager: ActivityManager) => void): Promise<ActivityManager> {\n    const promise = new Promise<ActivityManager>((resolve, reject) => {\n      this._readyMarker.setCallback(\n        (err) => {\n          if (!err) {\n            resolve(this);\n          } else {\n            reject(this._readyMarker.getError());\n          }\n        });\n    });\n\n    return nodeify(Promise.all([this._bridge.ready(), promise]).then(() => this), callback);\n  }\n\n  /**\n   * @returns All known activity types\n   */\n  public getActivityTypes(): ActivityType[] {\n    return this._activityTypes.get();\n  }\n\n  /**\n   * Gets ActivityType by name\n   * @param name  Name to search for\n   * @returns     If found the @type ActivityType; otherwise undefined\n   */\n  public getActivityType(name: string): ActivityType {\n    return this._activityTypes.getByName(name);\n  }\n\n  /**\n   * Registers a new activity type\n   * @param activityTypeName      The name of the activity type to be created\n   * @param ownerWindowType       The type of the owner window or a WindowDefinition for the owner window\n   * @param helperWindowTypes     Types of helper windows (or WindowDefinitions for helper windows) for that activity type\n   * @param config                (HC only, deprecated) Layout config\n   * @param description           (HC only, deprecated) Description for the new activity type\n   * @param callback              (Optional) Callback for results - if not specified the method will return a promise\n   */\n  public registerActivityType(\n    activityTypeName: string,\n    ownerWindowType: string | WindowDefinition,\n    helperWindowTypes?: string[] | WindowDefinition[],\n    config?: any,\n    description?: string,\n    callback?: Callback<ActivityType>): Promise<ActivityType> {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n\n      // activityTypeName checks\n      if (util.isUndefinedOrNull(activityTypeName)) {\n        reject(\"activityTypeName argument can not be undefined\");\n        return;\n      }\n      if (!util.isString(activityTypeName)) {\n        reject(\"activityTypeName should be string\");\n        return;\n      }\n      // check if type is already defined\n      const actType = this.getActivityType(activityTypeName);\n      if (!util.isUndefinedOrNull(actType)) {\n        reject(\"Activity type '\" + activityTypeName + \"' already exists\");\n        return;\n      }\n\n      // ownerWindowType checks\n      let ownerDefinition: WindowDefinition;\n      if (util.isUndefined(ownerWindowType)) {\n        reject(\"Owner window type can not be undefined\");\n        return;\n      }\n      if (util.isString(ownerWindowType)) {\n        ownerDefinition = { type: (ownerWindowType as string), name: \"\", isIndependent: false, arguments: {} };\n      } else {\n        ownerDefinition = (ownerWindowType as WindowDefinition);\n      }\n\n      // helperWindowTypes checks\n      const helperDefinitions: WindowDefinition[] = [];\n      if (!util.isUndefined(helperWindowTypes) && util.isArray(helperWindowTypes)) {\n        // eslint-disable-next-line @typescript-eslint/no-for-in-array, guard-for-in\n        for (const index in helperWindowTypes) {\n          const item = helperWindowTypes[index];\n          if (util.isString(item)) {\n            const definition = {\n              type: (item as string),\n              name: \"\",\n              isIndependent: false,\n              arguments: {},\n              relativeTo: \"\",\n              relativeDirection: \"\",\n              windowStyleAttributes: {}\n            };\n            helperDefinitions.push(definition);\n          } else {\n            helperDefinitions.push(item as WindowDefinition);\n          }\n        }\n      }\n\n      // redirect to bridge\n      this._bridge\n        .registerActivityType(activityTypeName,\n          ownerDefinition,\n          helperDefinitions,\n          config,\n          description)\n        .then((activityType) => {\n          // add to from collections\n          this._grabEntity(activityType);\n          resolve(activityType);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregister existing activity type\n   * @param type The name of the activity type to be removed\n   */\n  public unregisterActivityType(type: string, callback?: Callback<any>) {\n    const promise = new Promise<ActivityType>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(type);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + type + \"' does not exists\");\n        return;\n      }\n      this._bridge.unregisterActivityType(type).then(() => resolve(actType), reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Initiates a new activity from the given type.\n   * @param activityType  The ActivityType to initiate\n   * @param context       The initial context of the activity\n   * @param callback      Callback for result\n   * @param configuration Optional configuration passed to window/peer factories for the new activity's participants\n   * @returns             Promise for activity\n   */\n  public initiate(activityType: string, context?: object, callback?: Callback<Activity>, configuration?: WindowDefinition[] | OverrideTypeDefinition): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      // check if type is defined\n      const actType = this.getActivityType(activityType);\n      if (util.isUndefined(actType)) {\n        reject(\"Activity type '\" + activityType + \"' does not exists\");\n        return;\n      }\n\n      this._bridge\n        .initiateActivity(activityType, context, configuration)\n        .then((actId) => {\n\n          this._activities\n            .getOrWait(actId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivityTypeEvents(handler: (act: ActivityType, action: string) => void) {\n    this._activityTypes.subscribe((at, context) => {\n      handler(at, context.type);\n    });\n  }\n\n  /**\n   * @returns All known WindowTypes\n   */\n  public getWindowTypes(): WindowType[] {\n    return this._windowTypes.get();\n  }\n\n  /**\n   * Gets WindowType by name\n   * @param name  The name of the type @type WindowType\n   * @returns     WindowType if found; undefined otherwise\n   */\n  public getWindowType(name: string): WindowType {\n    return this._windowTypes.getByName(name);\n  }\n\n  /**\n   * Registers a factory for a given WindowType. The factory will be called once window of that type is requested\n   * @param windowType   Window type that will be constructed from the factory. Can be a string (name of the window type)\n   * or object that has name, description properties\n   * @param factoryMethod      The factory that will construct Windows of that type\n   * @param description\n   * @param callback\n   * @param configuration\n   * @returns {}\n   */\n  public registerWindowFactory(\n    windowType: any,\n    factoryMethod: WindowFactory,\n    callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (util.isObject(windowType)) {\n        windowType = windowType.getName();\n      } else if (!util.isString(windowType)) {\n        reject(\"windowType should be string or object that has getName method\");\n        return;\n      }\n\n      this._bridge\n        .registerWindowFactory(windowType, factoryMethod)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Unregisters all factories for a given WindowType.\n   * @param windowType   Window type that is constructed from the factory.\n   * @param callback\n   * @returns {}\n   */\n  public unregisterWindowFactory(windowType: string, callback?: any): Promise<any> {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowType)) {\n        reject(\"no windowType specified\");\n        return;\n      }\n\n      if (!util.isString(windowType)) {\n        reject(\"windowType should be a string\");\n        return;\n      }\n\n      this._bridge\n        .unregisterWindowFactory(windowType)\n        .then((v) => {\n          resolve(v);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * @returns All started activities\n   * @param activityType Can be a string or @type ActivityType. If string a new activityType will be created using the string for name.\n   * @returns Array of Activity objects\n   */\n  public getActivities(activityType?: string | ActivityType | string[] | ActivityType[]): Activity[] {\n    let act = this._activities.get();\n    act = act.filter((a) => a._ownerId);\n    if (!activityType) {\n      return act;\n    }\n    let types: any = activityType;\n    if (util.isString(activityType)) {\n      types = [activityType];\n    } else if (activityType instanceof ActivityType) {\n      types = [activityType.name];\n    } else if (activityType instanceof Array) {\n      // TODO check if string array or array of ActivityTypes\n    } else {\n      throw new Error(\"Invalid input argument 'activityType' = \" + activityType);\n    }\n\n    return act.filter((at: Activity) => {\n      const type = at.type;\n      return util.some(types, (t: ActivityType) => {\n        return type.id === t.id;\n      });\n    });\n  }\n\n  /**\n   * Returns Activity by ID\n   */\n  public getActivityById(id: string): Activity {\n    return this._activities.getByName(id);\n  }\n\n  /**\n   * Initialises activity for the current window - by doing this the window is announced as activity aware to the other participants\n   * @param windowType            Type of window\n   * @param activityWindowId      The id of the window that was created\n   * @returns {}                  Promise for an activity window (joined to an activity, if the activity creation fails the promise will be rejected)\n   */\n  public announceWindow(activityWindowId?: string, windowType?: string): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n\n      // get the announcement info from the bridge (e.g. the context in HC) - this will be used if no arguments passed\n      const announcementInfo = this._bridge.getAnnouncementInfo();\n      if (util.isUndefined(activityWindowId)) {\n        activityWindowId = announcementInfo.activityWindowId;\n      }\n      if (util.isUndefined(windowType)) {\n        windowType = announcementInfo.activityWindowType;\n      }\n      if (util.isUndefinedOrNull(windowType)) {\n        throw new Error(\"Can not announce - unknown windowType\");\n      }\n\n      const activityId = announcementInfo && announcementInfo.activityId;\n\n      // We cover two cases here:\n      // * no activityWindowId supplied (neither in arguments or announcement info) - in that case we register new window by type. Most of the time this is the case when an independent window is created outside activity\n      // * activityWindowId supplied - window created as part of activity creation\n\n      // NB: in GW3, windows are created standalone, and receive 'JOINED' after they send a 'READY'\n      // so we always go in 'if' case, not 'else'\n      if (util.isUndefinedOrNull(activityWindowId)) {\n        this._logger.debug(\"Registering window with type:'\" + windowType + \"', name:'\" + announcementInfo.activityWindowName + \"', ind.:'\" + announcementInfo.activityWindowIndependent + \"'\");\n        // register new window created outside activity\n        this._bridge.registerWindow(windowType, announcementInfo.activityWindowName, announcementInfo.activityWindowIndependent)\n          .then(this._windows.getOrWait.bind(this._windows))\n          .then((w: any) => {\n            if (activityId) {\n              return this._activities.getOrWait(activityId).then((_: any) => w);\n            } else {\n              return w;\n            }\n          })\n          .then((w: any) => {\n            resolve(w);\n          })\n          .catch((err) => {\n            this._logger.error(err);\n          });\n\n      } else {\n        // announce new window created in an activity creation process\n        this._logger.debug(\"Announcing window with id '\" + activityWindowId + \"' and type '\" + windowType + \"'\");\n\n        // check if the window is already created -\n        const currentWindow = this._windows.getByName(activityWindowId);\n        if (!util.isUndefinedOrNull(currentWindow)) {\n          this._logger.debug(\"Window with id '\" + activityWindowId + \"' already announced - reusing the window\");\n          resolve(currentWindow);\n          return;\n        }\n\n        // window events handler\n        const windowEventHandler = (a: Activity, w: ActivityWindow, e: any) => {\n          if (activityWindowId === w.id) {\n            if (e === EntityEventType.ActivityWindowJoinedActivity) {\n              const activity = w.activity;\n              if (util.isUndefined(activity)) {\n                reject(\"UNDEFINED ACTIVITY\");\n              }\n              this._logger.trace(\"Got joined event for id '\" + activityWindowId + \"'\");\n              resolve(w);\n              this.unsubscribeWindowEvents(windowEventHandler);\n            }\n          }\n        };\n\n        this.subscribeWindowEvents(windowEventHandler);\n        this._logger.trace(\"Waiting for joined event for id '\" + activityWindowId + \"'\");\n        this._bridge.announceWindow(windowType, activityWindowId);\n      }\n    });\n    return promise;\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window type registered\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowTypeEvents(handler: (act: WindowType, event: string) => void) {\n    this._windowTypes.subscribe((wt, context) => {\n      handler(wt, context.type);\n    });\n  }\n\n  /**\n   * Subscribe for activity status events\n   * @param handler Handler function that will receive status notifications\n   * @returns {}\n   */\n  public subscribeActivityEvents(handler: (activity: Activity, newStatus: ActivityStatus, oldStatus: ActivityStatus) => void): () => void {\n    return this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.StatusChange) {\n        const p = (context as ActivityStatusChangeEventContext);\n        handler(act, p.newStatus, p.oldStatus);\n      }\n\n      // implicitly leave the activity on destroy\n      if (context.type === EntityEventType.Removed ||\n        (context.type === EntityEventType.StatusChange &&\n          (context as ActivityStatusChangeEventContext).newStatus.getState() === ActivityState.Destroyed)) {\n        for (const window of this._windows.get()) {\n          if (window.activity && window.activity.id === act.id) {\n            this._windows.process(new EntityEvent<ActivityWindow>(window, new EntityEventContext(EntityEventType.ActivityWindowLeftActivity)));\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Allows you to subscribe for windows events, e.g. window joining to activity\n   * @param handler   The handler to receive notifications\n   * @returns {}\n   */\n  public subscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void): () => void {\n    const wrappingHandler = (window: ActivityWindow, context: any) => {\n      let eventType = context.type;\n      if (eventType === EntityEventType.Added) {\n        // rename added to opened (because added is misleading - semantically it's the opposite of remove);\n        eventType = \"opened\";\n      }\n      handler(window.activity, window, eventType);\n    };\n    this._windowHandlers.push([handler, wrappingHandler]);\n    return this._windows.subscribe(wrappingHandler);\n  }\n\n  public unsubscribeWindowEvents(handler: (activity: Activity, window: ActivityWindow, event: any) => void) {\n    const found = this._windowHandlers.find((pair) => pair[0] === handler);\n    if (found) {\n      this._windowHandlers.splice(this._windowHandlers.indexOf(found), 1);\n      this._windows.unsubscribe(found[1]);\n    }\n  }\n\n  /**\n   * Creates a new window from a given type and joins it to an activity\n   *\n   * @param activity      Activity to join the window to\n   * @param windowType    The window type to join (string or window definition)\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public createWindow(activity: Activity, windowTypeOrConfiguration: string | WindowDefinition | any, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const promise = new Promise<ActivityWindow>((resolve, reject) => {\n      if (util.isUndefinedOrNull(windowTypeOrConfiguration)) {\n        reject(\"windowType is undefined\");\n      }\n\n      let windowDefinition: WindowDefinition;\n      if (util.isString(windowTypeOrConfiguration)) {\n        windowDefinition = { type: (windowTypeOrConfiguration as string), name: \"\", isIndependent: false, arguments: {} };\n      } else if (windowTypeOrConfiguration instanceof WindowType) {\n        windowDefinition = {\n          type: (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          name: windowTypeOrConfiguration.name || (windowTypeOrConfiguration as any).type || windowTypeOrConfiguration.id,\n          isIndependent: false\n        };\n      } else {\n        // G4E-3178 When creating a window in activity, the loading animation doesn't hide - extra property URL\n        const invalidKeys: string[] = [\"url\"];\n\n        const filteredWindowTypeOrConfiguration: any = {};\n\n        Object.keys(windowTypeOrConfiguration).forEach((key) => {\n          if (invalidKeys.indexOf(key) === -1) {\n            filteredWindowTypeOrConfiguration[key] = windowTypeOrConfiguration[key];\n          }\n        });\n        windowDefinition = filteredWindowTypeOrConfiguration as WindowDefinition;\n      }\n\n      let relativeToWindow: string | WindowSource;\n      if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n        relativeToWindow = windowDefinition.relativeTo;\n        if (typeof relativeToWindow === \"string\") {\n          const windows = this.getWindows({ type: relativeToWindow });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n          const windows = this.getWindows({ type: relativeToWindow.type });\n          if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n            windowDefinition.relativeTo = windows[0].id;\n          }\n        } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n          windowDefinition.relativeTo = relativeToWindow.windowId;\n        }\n      }\n\n      this._bridge.createWindow(activity && activity.id, windowDefinition)\n        .then((wid) => {\n\n          this._logger.debug(\"Window created, waiting for window entity with id \" + wid);\n          const handler = (window: ActivityWindow, context: EntityEventContext) => {\n            // wait until the window has activity property (this means it was joined)\n            if (window.id === wid && (!activity || window.activity)) {\n              this._logger.debug(\"Got entity window with id \" + wid);\n              resolve(window);\n              this._windows.unsubscribe(handler);\n            }\n          };\n\n          // if we can not get the window right away, wait for event\n          this._windows.subscribe(handler);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Creates relative windows from a given types and joins them to an activity\n   *\n   * @param activity               Activity to join relative windows to\n   * @param relativeWindowTypes    Relative window types to join (string or window definitions array)\n   * @param callback               (Optional) Result callback\n   * @returns                      Promise for ActivityWindow\n   */\n  public createStackedWindows(activity: Activity, relativeWindowTypes: (string | WindowDefinition)[], timeout?: number, callback?: Callback<ActivityWindow[]>): Promise<ActivityWindow[]> {\n    const promise = new Promise<ActivityWindow[]>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity is undefined\");\n      }\n      if (util.isUndefinedOrNull(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes is undefined\");\n      }\n\n      if (!Array.isArray(relativeWindowTypes)) {\n        reject(\"relativeWindowTypes has to be an array\");\n      }\n      if (util.isUndefinedOrNull(timeout)) {\n        timeout = 20000; // default timeout: 20 seconds\n      }\n\n      const windowDefinitions: WindowDefinition[] = [];\n      relativeWindowTypes.forEach((element) => {\n        let windowDefinition: WindowDefinition;\n        if (util.isString(element)) {\n          windowDefinition = { type: (element as string), name: \"\", isIndependent: false, arguments: {} };\n        } else {\n          windowDefinition = (element as WindowDefinition);\n        }\n\n        // a hint that this comes from createStackedWindows\n        windowDefinition.stackedWindow = true;\n        windowDefinition.timeout = timeout;\n\n        let relativeToWindow: WindowSource;\n        if (!util.isUndefinedOrNull(windowDefinition.relativeTo)) {\n          // this can not be string, converted in the prev. layer\n          relativeToWindow = windowDefinition.relativeTo as WindowSource;\n          if (!util.isUndefinedOrNull(relativeToWindow.type)) {\n            windowDefinition.relativeTo = relativeToWindow.type;\n          } else if (!util.isUndefinedOrNull(relativeToWindow.windowId)) {\n            const windows = this.getWindows({ id: relativeToWindow.windowId });\n            if (!util.isUndefinedOrNull(windows) && windows.length > 0) {\n              windowDefinition.relativeTo = windows[0].type.name;\n            }\n          }\n        }\n        windowDefinitions.push(windowDefinition);\n      });\n\n      const tasks: Promise<ActivityWindow>[] = [];\n      windowDefinitions.forEach((wd) => tasks.push(this.createWindow(activity, wd)));\n\n      Promise.all(tasks).then(resolve).catch(reject);\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Joins a new window from a given type to the activity\n   *\n   * @param activity      Activity to join the window to\n   * @param window        The window to join\n   * @param callback      (Optional) Result callback\n   * @returns             Promise for ActivityWindow\n   */\n  public addWindowToActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.joinActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Removes a window from the activity\n   *\n   * @param activity  Activity to remove the window from\n   * @param           The window to remove\n   * @param           (Optional) Result callback\n   * @returns         Promise for ActivityWindow\n   */\n  public leaveWindowFromActivity(activity: Activity, window: ActivityWindow, callback?: Callback<ActivityWindow>): Promise<ActivityWindow> {\n    const toReturn = this._bridge.leaveActivity(activity.id, window.id)\n      .then(() => window);\n    nodeify(toReturn, callback);\n    return toReturn;\n  }\n\n  /**\n   * Replaces the activity context\n   * @param activity  Activity\n   * @param context   The new context\n   * @param callback  (Optional) Result callback\n   * @returns         Promise for Activity\n   */\n  public setActivityContext(activity: Activity, context: object, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      // TODO: duplication with updateActivityContext\n\n      // DONE: verify is the change visible here when 'updateActivityContext' resolves?\n      this._bridge\n        .updateActivityContext(activity, context, true)\n        .then((_) => {\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Updates activity context using the properties from  context argument.\n   * If old context is {a:1, b:2, c:3} and invoking updateContext({b:3, c:null}) will result a context\n   * be {a:1, b:3}\n   *\n   * @param activity\n   * @param context\n   * @param callback\n   */\n  public updateActivityContext(activity: Activity, context: any, callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      if (util.isUndefinedOrNull(activity)) {\n        reject(\"activity can not be null\");\n      }\n\n      const removedKeys = [];\n      for (const key in context) {\n        if (context.hasOwnProperty(key) && context[key] === null) {\n          removedKeys.push(key);\n        }\n      }\n      for (const removedKey of removedKeys) {\n        delete context[removedKey];\n      }\n\n      this._bridge\n        .updateActivityContext(activity, context, false, removedKeys)\n        .then((_) => {\n          // DONE: verify is the change already visible here when 'updateActivityContext' resolves?\n          resolve(activity);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Subscribe for activity context update events\n   *\n   * @param activity  Activity\n   * @param handler   Handler function that will receive context related events\n   * @returns {}\n   */\n  public subscribeActivityContextChanged(handler: ActivityContextUpdateHandler) {\n    this._activities.subscribe((act, context) => {\n      if (context.type === EntityEventType.ActivityContextChange) {\n        const updateContext = context as ActivityContextChangedEventContext;\n        handler(act, updateContext.context, updateContext.updated, updateContext.removed);\n      }\n    });\n  }\n\n  /**\n   * Stops an activity\n   * @returns {}\n   */\n  public stopActivity(activity: Activity, callback?: Callback<boolean>): Promise<boolean> {\n    const promise = this._bridge.stopActivity(activity);\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * Returns activity windows based on some filter. If no filter supplied all activity windows are returned.\n   * @param filter  Filter that\n   * @returns Array of ActivityWindows that match the filter object\n   */\n  public getWindows(filter: { id?: string, type?: string, name?: string, activityId?: string }): ActivityWindow[] {\n    if (util.isUndefined(filter)) {\n      return this._windows.get();\n    }\n\n    if (!util.isUndefined(filter.id)) {\n      return [this._windows.getByName(filter.id)];\n    }\n\n    const allWindows = this._windows.get();\n\n    return allWindows.filter((w) => {\n\n      if (!util.isUndefined(filter.type) && w.type.id !== filter.type) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.name) && w.name !== filter.name) {\n        return false;\n      }\n\n      if (!util.isUndefined(filter.activityId)) {\n        if (util.isUndefinedOrNull(w.activity)) {\n          return false;\n        }\n\n        if (w.activity.id !== filter.activityId) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n\n  public getWindowBounds(id: string): Promise<WindowBounds> {\n    return this._bridge.getWindowBounds(id);\n  }\n\n  public setWindowBounds(id: string, bounds: WindowBounds, callback?: Callback<ActivityWindow>): Promise<any> {\n    const promise = new Promise<void>((resolve, reject) => {\n      this._bridge.setWindowBounds(id, bounds)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public closeWindow(id: string): Promise<any> {\n    return this._bridge.closeWindow(id);\n  }\n\n  public activateWindow(id: string, focus: boolean): Promise<any> {\n    return this._bridge.activateWindow(id, focus);\n  }\n\n  public setWindowVisibility(id: string, visible: boolean): Promise<any> {\n    return this._bridge.setWindowVisibility(id, visible);\n  }\n\n  public clone(activity: Activity, cloneOptions: CloneOptions, callback?: Callback<Activity>) {\n    const promise = new Promise<any>((resolve, reject) => {\n      if (!activity) {\n        reject(\"activity can not be null\");\n      }\n\n      this._bridge.cloneActivity(activity.id, cloneOptions)\n        .then((activityId) => {\n          this._activities\n            .getOrWait(activityId)\n            .then((act: Activity) => {\n              resolve(act);\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => reject(err));\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public attachActivities(from: string, to: string, tag?: object, callback?: Callback<AttachedActivityDescriptor>): Promise<AttachedActivityDescriptor> {\n\n    tag = tag || {};\n\n    const promise = new Promise<AttachedActivityDescriptor>((resolve, reject) => {\n\n      const fromActivity = this._activities.getByName(from);\n      if (!fromActivity) {\n        reject(\"can not find activity with id \" + from);\n        return;\n      }\n\n      const toActivity = this._activities.getByName(to);\n      if (!toActivity) {\n        reject(\"can not find activity with id \" + to);\n        return;\n      }\n\n      return this._bridge.attachActivities(from, to, tag)\n        .then((data: any) => {\n          const newActId = data.to;\n          const state = data.descriptor;\n          const allStates = data.descriptors;\n\n          this._activities.getOrWait(newActId).then((act) => {\n            act._updateDescriptors(allStates);\n            const stateWrapped = act.attached.filter((u) => u.ownerId === state.ownerId)[0];\n\n            resolve(stateWrapped);\n          });\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public detachActivities(\n    activityId: string,\n    descriptor: ActivityDescriptor,\n    callback?: Callback<Activity>): Promise<Activity> {\n    const promise = new Promise<Activity>((resolve, reject) => {\n      return this._bridge.detachActivities(activityId, descriptor)\n        .then(/* (params)*/() => {\n          // #deleteme TODO: deal with this\n          const oldActId: string = undefined; // params.oldActivityId;\n          const newActId: string = undefined; // params.newActivityId;\n          const descriptors: any = undefined; // params.descriptors;\n\n          this._activities\n            .getOrWait(oldActId)\n            .then((oldAct: Activity) => {\n              oldAct._updateDescriptors(descriptors);\n\n              this._activities\n                .getOrWait(newActId)\n                .then((newAct: Activity) => {\n                  resolve(newAct);\n                });\n            })\n            .catch((err) => reject(err));\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n\n    return nodeify(promise, callback);\n  }\n\n  public subscribeActivitiesAttached(callback: any) {\n    this._attachedCallbacks.push(callback);\n  }\n\n  public subscribeActivitiesDetached(callback: any) {\n    this._detachedCallbacks.push(callback);\n  }\n\n  public subscribeActivityFrameColorChanged(callback: () => void) {\n    this._frameColorChangesCallbacks.push(callback);\n  }\n\n  /** Assigns a manager to a given ActivityEntity */\n  private _grabEntity(entity: ActivityEntity) {\n    entity._manager = this;\n  }\n\n  private _getInitialData() {\n    this._logger.debug(\"Request initial data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.getActivityTypes()\n      .then((at) => {\n        this._activityTypes.add(at);\n        this._dataReadyMarker.signal(\"Got act types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity types -\" + error);\n      });\n\n    this._bridge.getWindowTypes()\n      .then((wt) => {\n        this._windowTypes.add(wt);\n        this._dataReadyMarker.signal(\"Got window types\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting window types  \" + error);\n      });\n\n    this._bridge.getActivities()\n      .then((ac) => {\n        this._activities.add(ac);\n        this._dataReadyMarker.signal(\"Got activities\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity instances -\" + error);\n      });\n\n    this._bridge.getActivityWindows()\n      .then((aw) => {\n        this._windows.add(aw);\n        this._dataReadyMarker.signal(\"Got windows\");\n      })\n      .catch((error) => {\n        this._logger.error(error);\n        this._dataReadyMarker.error(\"Can not initialize ActivityManager - error getting activity windows -\" + error);\n      });\n  }\n\n  private _subscribeForData() {\n    this._logger.debug(\"Subscribe for data...\");\n\n    // NB: there's no possibility for duplicate entities from events that have come\n    // in between _bridge.init() and _bridge.ready()'s resolve, since the ObservableCollections\n    // coalesce items by id.\n\n    this._bridge.onActivityTypeStatusChange((event) => {\n      this._activityTypes.process(event);\n    });\n\n    this._bridge.onWindowTypeStatusChange((event) => {\n      this._windowTypes.process(event);\n    });\n\n    this._bridge.onActivityWindowChange((event) => {\n      this._windows.process(event);\n    });\n\n    this._bridge.onActivityStatusChange((event: EntityEvent<Activity>) => {\n      this._activities.process(event);\n    });\n  }\n\n  private _handleActivitiesAttached(data: any) {\n\n    const newActId = data.to;\n    const descriptor = data.descriptor;\n    const descriptors = data.descriptors;\n\n    this._activities.getOrWait(newActId).then((act) => {\n      act._updateDescriptors(descriptors);\n      const descriptorAsObjectFromAPI = act.attached.filter((u) => u.ownerId === descriptor.ownerId)[0];\n\n      this._attachedCallbacks.forEach((callback) => {\n        try {\n          callback(act, descriptorAsObjectFromAPI);\n        } catch (err) {\n          return;\n        }\n      });\n\n    });\n  }\n\n  private _handleActivitiesDetached(data: any) {\n    const oldActId = data.oldActivityId;\n    const newActId = data.newActivityId;\n    const descriptors = data.descriptors;\n    const descriptor = data.descriptor;\n\n    this._activities.getOrWait(oldActId).then((oldAct) => {\n\n      oldAct._updateDescriptors(descriptors);\n\n      this._activities.getOrWait(newActId).then((newAct) => {\n\n        this._detachedCallbacks.forEach((callback) => {\n          try {\n            callback(newAct, oldAct, descriptor);\n          } catch (err) {\n            return;\n          }\n        });\n      });\n    });\n  }\n\n  private _handleActivityDescriptorsRefreshed(data: any) {\n    const id = data.id;\n    const descriptors = data.descriptors;\n\n    const act = this._activities.getByName(id);\n    if (act) {\n      act._updateDescriptors(descriptors);\n    }\n  }\n\n  private refreshDescriptors() {\n    this._bridge.getAttachedDescriptors()\n      .then((map: any) => {\n\n        // populate descriptors\n        if (map) {\n          Object.keys(map).forEach((key: string) => {\n            const actId = key;\n            const descriptors = map[key];\n\n            const act = this._activities.getByName(actId);\n            if (act) {\n              act._updateDescriptors(descriptors);\n            }\n          });\n        }\n\n        this._descriptorsMarker.signal(\"Successfully got descriptors\");\n      })\n      .catch((err) => {\n        this._descriptorsMarker.error(\"failed to get descriptors - \" + err);\n      });\n  }\n\n  private _handleWindowFrameColorChanged(win: Glue42.Windows.GDWindow) {\n    if (!win.activityId) {\n      return;\n    }\n\n    const act = this._activities.getByName(win.activityId);\n    if (!act) {\n      return;\n    }\n\n    // notify for the owner only\n    if (!act.owner) {\n      return;\n    }\n\n    if (act.owner.underlyingWindow.id !== win.id) {\n      return;\n    }\n\n    this._frameColorChangesCallbacks.forEach((callback) => {\n      try {\n        callback(act, win.frameColor);\n      } catch (e) {\n        return;\n      }\n    });\n  }\n}\n","import ActivityType from \"./../entities/activityType\";\nimport WindowType from \"./../entities/windowType\";\nimport * as util from \"./../helpers/util\";\nimport ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { WindowDefinition } from \"./../entities/windowDefinition\";\nimport { Callback } from \"./../contracts/contracts\";\nimport Activity from \"./../entities/activity\";\nimport ActivityWindow from \"./../entities/activityWindow\";\nimport { ActivityStatus } from \"./../contracts/activityStatus\";\nimport { WindowFactory } from \"../contracts/windowFactory\";\nimport { Glue42 } from \"../../../glue\";\n\nexport interface ManagementAPI {\n  activityTypes: Glue42.Activities.ActivityTypesAPI;\n  windowTypes: Glue42.Activities.WindowTypesAPI;\n  windows: Glue42.Activities.WindowingAPI;\n  instances: Glue42.Activities.InstancesAPI;\n\n  onAttached(callback: () => void): void;\n  onDetached(callback: () => void): void;\n  onActivityFrameColorChanged(callback: () => void): void;\n}\n\nexport class ActivityManagementAPI implements ManagementAPI {\n\n  public _m: ActivityManager;\n\n  public _my: My;\n\n  public activityTypes: Glue42.Activities.ActivityTypesAPI;\n\n  public windowTypes: Glue42.Activities.WindowTypesAPI;\n\n  public windows: Glue42.Activities.WindowingAPI;\n\n  public instances: Glue42.Activities.InstancesAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._m = manager;\n    this._my = my;\n\n    this.activityTypes = {\n      get: this._getActivityTypesWrapper.bind(this),\n      register: this._m.registerActivityType.bind(this._m),\n      unregister: this._m.unregisterActivityType.bind(this._m),\n      subscribe: this._m.subscribeActivityTypeEvents.bind(this._m),\n      unsubscribe: undefined,\n      initiate: this._m.initiate.bind(this._m)\n    };\n\n    this.windowTypes = {\n      get: this._getWindowTypesWrapper.bind(this),\n      registerFactory: this._m.registerWindowFactory.bind(this._m),\n      unregisterFactory: this._m.unregisterWindowFactory.bind(this._m),\n      subscribe: this._m.subscribeWindowTypeEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n\n    this.windows = {\n      get: this._m.getWindows.bind(this._m),\n      subscribe: this._m.subscribeWindowEvents.bind(this._m),\n      announce: this._m.announceWindow.bind(this._m),\n      unsubscribe: undefined,\n      create: this._m.createWindow.bind(this._m)\n    };\n\n    this.instances = {\n      get: this._m.getActivities.bind(this._m),\n      subscribe: this._m.subscribeActivityEvents.bind(this._m),\n      unsubscribe: undefined\n    };\n  }\n\n  public onAttached(callback: () => void) {\n    this._m.subscribeActivitiesAttached(callback);\n  }\n\n  public onDetached(callback: () => void) {\n    this._m.subscribeActivitiesDetached(callback);\n  }\n\n  public onActivityFrameColorChanged(callback: () => void) {\n    this._m.subscribeActivityFrameColorChanged(callback);\n  }\n\n  private _getActivityTypesWrapper(name?: string): ActivityType[] | ActivityType {\n    if (util.isUndefined(name)) {\n      return this._m.getActivityTypes();\n    }\n    return this._m.getActivityType(name);\n  }\n\n  private _getWindowTypesWrapper(name?: string): WindowType[] | WindowType {\n    if (util.isUndefined(name)) {\n      return this._m.getWindowTypes();\n    }\n    return this._m.getWindowType(name);\n  }\n}\n","import ActivityManager from \"./../core/activityManager\";\nimport My from \"./activityMyAPI\";\nimport { nodeify } from \"./../helpers/promiseExtensions\";\nimport { ActivityManagementAPI, ManagementAPI } from \"./activityManagementAPI\";\nimport { ActivityAGM } from \"../core/activityAGM\";\n\nexport interface API {\n\n  aware: boolean;\n\n  inActivity: boolean;\n\n  my: My;\n\n  agm: ActivityAGM;\n\n  all: ManagementAPI;\n\n  ready(callback?: (api: API) => void): Promise<API>;\n\n  getAvailableFrameColors(): string[];\n}\n\n/**\n * The entry points of activities API - accessible from glue.activities\n *\n * @module activities\n */\nexport class ActivityAPI implements API {\n\n  public _mgr: ActivityManager;\n  public _my: My;\n\n /**\n  * Extended API that provides access to all running activities and windows and available activity and window types\n  *\n  * @var {module:all} all\n  */\n public all: ManagementAPI;\n\n  constructor(manager: ActivityManager, my: My) {\n    this._mgr = manager;\n    this._my = my;\n    this.all = new ActivityManagementAPI(manager, my);\n  }\n\n  /**\n   * The entry point for your activity code.\n   *\n   * @function ready\n   * @returns {Promise<module:activities>} A promise for activity API\n   */\n  public ready(callback?: any): Promise<API> {\n    const promise = new Promise<any>((resolve, reject) => {\n      this._mgr.ready()\n        .then(() => {\n          resolve(this);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n    return nodeify(promise, callback);\n  }\n\n  /**\n   * A lightweight, single activity oriented subset of the API which should be used by most activity applications\n   *\n   * @var {module:my} my\n   */\n  public get my(): My {\n    return this._my;\n  }\n\n  /**\n   * True if the current window is activity aware - meaning that the window has been created as\n   * an activity participant - either a helper or an independent window.\n   * Check this after the API is ready.\n   *\n   * @var {bool} aware\n   */\n  public get aware(): boolean {\n    return this._my.window !== undefined;\n  }\n\n  /**\n   * Returns true if the current window is activity aware and is currently participating in activity\n   *\n   * @var {bool} inActivity\n   */\n  public get inActivity(): boolean {\n    return this.aware && this._my.activity !== undefined;\n  }\n\n  /**\n   * Defines an Activity-specific version of the AGM API which:\n   * * restricts method registrations to activity-only windows\n   * * restricts method discovery and invocation to activity-only methods, unless you explicitly specify otherwise\n   * Other than that, the API is pretty much the same.\n   *\n   * @var  {module:activityAGM} agm\n   *\n   */\n  public get agm(): ActivityAGM {\n    if (!this.aware) {\n      // no agm if not activity aware\n      return undefined;\n    }\n    if (!this.inActivity) {\n      // if we're not in activity no\n      return new ActivityAGM(null);\n    }\n\n    return this._my.activity.agm;\n  }\n\n  /**\n   * Returns a list of frame colors that can be used as activity frame colors\n   *\n   * @returns {string[]}\n   */\n  public getAvailableFrameColors(): string[] {\n    // TODO - not available in GD3\n    return [];\n  }\n}\n","import GW3Bridge from \"./bridges/gw3Bridge\";\n\nimport My from \"./API/activityMyAPI\";\nimport ActivityManager from \"./core/activityManager\";\n\nimport { ActivityBridge } from \"./bridges/activityBridge\";\n\nimport { ActivityConfig } from \"./activityConfig\";\nimport { ActivityAPI } from \"./API/activityAPI\";\nimport { ActivityAGM } from \"./core/activityAGM\";\nimport { Logger } from \"./helpers/logger\";\nimport * as util from \"./helpers/util\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\nimport { nodeify } from \"./helpers/promiseExtensions\";\n\n/**\n * Activity context update handler - used when we want to subscribe for context changes in a specific activity\n *\n * @callback contextChangedHandler\n * @param {Object} context The full context of the activity after the update\n * @param {Object} delta The delta (contains the added/removed keys at top level)\n * @param {string[]} removed  Array of keys that were removed from context\n * @param {module:activity} activity The activity instance that owns the context\n *\n */\n\n/**\n * @callback windowEventHandler Handler for ActivityWindow events - e.g window joined to activity, window removed from\n * activity\n * @param {module:activity} activity\n * @param {module:activityWindow} window\n * @param {string} event 'joined' or 'removed'\n */\n\n/**\n * @callback activityStatusChangeHandler Handler for activity status changed events\n * @param {module:activity} activity\n * @param {activityStatus} newStatus\n * @param {activityStatus} oldStatus\n *\n */\n\n/**\n * @typedef {Object} windowDefinition\n * @property {string} type\n * @property {string} name\n * @property {Object} arguments\n */\n\n/**\n * @typedef {Object} bounds\n * @param {number} top\n * @param {number} left\n * @param {number} width\n * @param {number} height\n *\n */\n\n/**\n * @typedef {Object} agmInstance\n * @param {string} application\n * @param {string} pid\n * @param {string} machine\n * @param {string} user\n * @param {string} environment\n * @param {string} region\n */\n\n// Factory function for activity API\nexport class ActivityModule {\n    public static checkIsUsingGW3Implementation(connection: Glue42Core.Connection.API) {\n        return connection.protocolVersion === 3;\n    }\n\n    private _api: ActivityAPI;\n    private _isUsingGW3Implementation: boolean;\n    private _isUsingHCImplementation: boolean;\n    private _readyPromise: Promise<ActivityModule>;\n\n    get api(): ActivityAPI {\n        return this._api;\n    }\n\n    set api(value: ActivityAPI) {\n        this._api = value;\n    }\n\n    constructor(config: ActivityConfig) {\n        if (!config) {\n            throw new Error(\"config can not be null\");\n        }\n\n        // set log level\n        if (!util.isUndefined(config.logLevel)) {\n            Logger.Level = config.logLevel;\n        }\n\n        if (!util.isUndefinedOrNull(config.logger)) {\n            Logger.GlueLogger = config.logger;\n        }\n\n        // choose the correct bridge\n        let bridge: ActivityBridge;\n        this._isUsingHCImplementation = config.gdMajorVersion === 2;\n        this._isUsingGW3Implementation = ActivityModule.checkIsUsingGW3Implementation(config.connection);\n\n        if (this._isUsingHCImplementation) {\n            throw new Error(\"GD2 not supported\");\n        } else if (this._isUsingGW3Implementation) {\n            bridge = new GW3Bridge(config);\n        } else {\n            throw new Error(\"Unable to instantiate activity bridge implementation\");\n        }\n\n        if (!bridge) {\n            throw new Error(\"A bridge to native activity is needed to create activity lib.\");\n        }\n\n        ActivityAGM.AGM = config.agm;\n        const activityManager = new ActivityManager(bridge, !config.disableAutoAnnounce, config.windows);\n        const my = new My(activityManager, config.windows);\n        this._api = new ActivityAPI(activityManager, my);\n        this._readyPromise = activityManager.ready().then((_) => this);\n    }\n\n    public get isUsingHCImplementation(): boolean {\n        return this._isUsingHCImplementation;\n    }\n\n    public get isUsingGW3Implementation(): boolean {\n        return this._isUsingGW3Implementation;\n    }\n\n    public ready(callback?: (err: string, module: ActivityModule) => void): Promise<void> {\n        return nodeify(this._readyPromise, callback) as any as Promise<void>;\n    }\n}\n","export const ShutdownMethodName = \"T42.ACS.Shutdown\";\nexport const OnGDShutdownMethodName = \"T42.ACS.OnGDShutdown\";\nexport const RestartMethodName = \"T42.ACS.Restart\";\n\nexport const FeedbackMethodName = \"T42.ACS.Feedback\";\n\nexport const GetConfigurationRegionMethodName = \"T42.ACS.GetConfigurationRegion\";\nexport const SetConfigurationRegionMethodName = \"T42.ACS.SetConfigurationRegion\";\n\nexport const GetUserMethodName = \"T42.ACS.GetUser\";\nexport const GetBranchesMethodName = \"T42.ACS.GetBranches\";\nexport const GetCurrentBranchMethodName = \"T42.ACS.GetCurrentBranch\";\nexport const SetCurrentBranchMethodName = \"T42.ACS.SetCurrentBranch\";\n\nexport const GetFunctionalEntitlementMethodName = \"T42.ACS.GetFunctionalEntitlement\";\nexport const CanIMethodName = \"T42.ACS.CanI\";\n\nexport const StartApplicationMethodName = \"T42.ACS.StartApplication\";\nexport const StopApplicationMethodName = \"T42.ACS.StopApplication\";\nexport const ActivateApplicationMethodName = \"T42.ACS.ActivateApplication\";\nexport const RunApplicationMethodName = \"T42.ACS.RunApplication\";\n\nexport const OnEventMethodName = \"T42.ACS.OnEvent\";\n\nexport const GetApplicationsMethodName = \"T42.ACS.GetApplications\";\n","\"use strict\";\nfunction createRegistry(options) {\n    if (options && options.errorHandling\n        && typeof options.errorHandling !== \"function\"\n        && options.errorHandling !== \"log\"\n        && options.errorHandling !== \"silent\"\n        && options.errorHandling !== \"throw\") {\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\n    }\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\n    var callbacks = {};\n    function add(key, callback, replayArgumentsArr) {\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey) {\n            callbacksForKey = [];\n            callbacks[key] = callbacksForKey;\n        }\n        callbacksForKey.push(callback);\n        if (replayArgumentsArr) {\n            setTimeout(function () {\n                replayArgumentsArr.forEach(function (replayArgument) {\n                    var _a;\n                    if ((_a = callbacks[key]) === null || _a === void 0 ? void 0 : _a.includes(callback)) {\n                        try {\n                            if (Array.isArray(replayArgument)) {\n                                callback.apply(undefined, replayArgument);\n                            }\n                            else {\n                                callback.apply(undefined, [replayArgument]);\n                            }\n                        }\n                        catch (err) {\n                            _handleError(err, key);\n                        }\n                    }\n                });\n            }, 0);\n        }\n        return function () {\n            var allForKey = callbacks[key];\n            if (!allForKey) {\n                return;\n            }\n            allForKey = allForKey.reduce(function (acc, element, index) {\n                if (!(element === callback && acc.length === index)) {\n                    acc.push(element);\n                }\n                return acc;\n            }, []);\n            if (allForKey.length === 0) {\n                delete callbacks[key];\n            }\n            else {\n                callbacks[key] = allForKey;\n            }\n        };\n    }\n    function execute(key) {\n        var argumentsArr = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            argumentsArr[_i - 1] = arguments[_i];\n        }\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey || callbacksForKey.length === 0) {\n            return [];\n        }\n        var results = [];\n        callbacksForKey.forEach(function (callback) {\n            try {\n                var result = callback.apply(undefined, argumentsArr);\n                results.push(result);\n            }\n            catch (err) {\n                results.push(undefined);\n                _handleError(err, key);\n            }\n        });\n        return results;\n    }\n    function _handleError(exceptionArtifact, key) {\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\n        if (_userErrorHandler) {\n            _userErrorHandler(errParam);\n            return;\n        }\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\n        if (options) {\n            switch (options.errorHandling) {\n                case \"log\":\n                    return console.error(msg);\n                case \"silent\":\n                    return;\n                case \"throw\":\n                    throw new Error(msg);\n            }\n        }\n        console.error(msg);\n    }\n    function clear() {\n        callbacks = {};\n    }\n    function clearKey(key) {\n        var callbacksForKey = callbacks[key];\n        if (!callbacksForKey) {\n            return;\n        }\n        delete callbacks[key];\n    }\n    return {\n        add: add,\n        execute: execute,\n        clear: clear,\n        clearKey: clearKey\n    };\n}\n;\ncreateRegistry.default = createRegistry;\nmodule.exports = createRegistry;\n//# sourceMappingURL=index.js.map","import { Configuration } from \"./types\";\n\nexport function objectValues(source: { [key: string]: any }): any[] {\n    if (!source) {\n        return [];\n    }\n    return Object.keys(source).map((key) => source[key]);\n}\n\nexport function objectClone(obj: { [key: string]: any }): any {\n    let result;\n    try {\n        result = JSON.parse(JSON.stringify(obj || {}));\n    } catch (error) {\n        result = {};\n    }\n\n    return result;\n}\n\nexport function validate<T>(callback: (item: T) => any, configuration: Configuration) {\n    if (configuration.throwErrors) {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n    }\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, Configuration, StartAppResult } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { objectClone, validate } from \"./helper\";\nimport { isUndefinedOrNull } from \"../activity/helpers/util\";\n\nexport default class ApplicationImpl implements Glue42.AppManager.Application {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    // Additional properties of the Application\n    private _props: AppProps;\n\n    constructor(private _appManager: AppManagerImpl, private _name: string, private _agm: Glue42Core.AGM.API, private _configuration: () => Configuration) {\n\n        // TODO: Replace string events with constants. The string declaration of the registry event name should only ever appear once. Ever. Period.\n\n        // subscribe for events from app-manager\n        _appManager.onInstanceStarted((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStarted\", instance);\n        });\n\n        _appManager.onInstanceStopped((instance) => {\n            if (instance.application && instance.application.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"instanceStopped\", instance);\n        });\n\n        _appManager.onAppRemoved((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appRemoved\", app);\n        });\n\n        _appManager.onAppChanged((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n\n            this._registry.execute(\"appChanged\", app);\n        });\n\n        _appManager.onAppAvailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n            this._props.IsReady = true;\n            this._registry.execute(\"appAvailable\", app);\n        });\n\n        _appManager.onAppUnavailable((app) => {\n            if (app.name !== this._name) {\n                return;\n            }\n            this._props.IsReady = false;\n            this._registry.execute(\"appUnavailable\", app);\n        });\n    }\n\n    get name(): string { return this._name; }\n    get title(): string { return this._props.Title; }\n    get version(): string { return this._props.Version; }\n    get autoStart(): boolean { return this._props.AutoStart; }\n    get isShell(): boolean { return this._props.IsShell; }\n    get caption(): string { return this._props.Caption; }\n    get hidden(): boolean { return this._props.IsHidden; }\n    get container(): string { return this._props.ApplicationName; }\n    get activityType(): string { return this._props.ActivityType; }\n    get activityWindowType(): string { return this._props.ActivityWindowType; }\n    get windowSettings(): { [key: string]: any } {\n        if (!this._props.Arguments) {\n            return {};\n        }\n        return objectClone(this._props.Arguments);\n    }\n    get allowMultiple(): boolean { return this._props.AllowMultiple; }\n    get available(): boolean { return this._props.IsReady || true; }\n    get icon(): string { return this._props.Icon; }\n    get iconURL(): string { return this._props.IconUrl; }\n    get sortOrder(): number { return this._props.SortOrder; }\n\n    get userProperties(): { [key: string]: any } {\n        if (!this._props.UserProperties) {\n            return {};\n        }\n        return objectClone(this._props.UserProperties);\n    }\n\n    get keywords(): string[] {\n        if (!this._props.Keywords) {\n            return [];\n        }\n        return this._props.Keywords;\n    }\n\n    get isActivity(): boolean {\n        return this._props.ActivityType !== undefined && this._props.ActivityType !== \"\";\n    }\n\n    get configuration(): Glue42.AppManager.LegacyAppConfigProperties {\n        return {\n            autoStart: this._props.AutoStart,\n            caption: this._props.Caption,\n            hidden: this._props.IsHidden,\n            container: this._props.ApplicationName,\n            activityType: this._props.ActivityType,\n            allowMultiple: this._props.AllowMultiple\n        };\n    }\n\n    get instances() {\n        return this._appManager.instances().filter((instance: Glue42.AppManager.Instance) => instance.application.name === this._name);\n    }\n\n    get type() {\n        return this._props.Type;\n    }\n\n    get mode() {\n        if (!this._props) {\n            // no info about the app\n            return \"unknown\";\n        }\n\n        // GD3 - we always have Mode from the stream object\n        if (this._props.Mode && typeof this._props.Mode === \"string\") {\n            return this._props.Mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // GD2\n        // return unknown for activity applications\n        if (this.isActivity) {\n            return \"unknown\";\n        }\n\n        // check definition -> hc.args.mode\n        if (this._props.Arguments && this._props.Arguments.mode && typeof this._props.Arguments.mode === \"string\") {\n            return this._props.Arguments.mode.toLowerCase() as Glue42.Windows.WindowMode;\n        }\n\n        // if no hc.args.mode, check hc.WindowStyleAttributes\n        let styleAttributes = this._props.WindowStyleAttributes;\n        if (styleAttributes) {\n            // WindowStyleAttributes is not a valid JSON, we will need to find mode in the string\n            styleAttributes = styleAttributes.split(\" \").join(\"\");\n            const searchFor = \"mode:\\\"\";\n            const modeIndex = styleAttributes.indexOf(searchFor);\n            if (modeIndex !== -1) {\n                const startModeIndex = modeIndex + searchFor.length;\n                const stopModeIndex = styleAttributes.indexOf(\"\\\"\", startModeIndex);\n                const style = styleAttributes.substr(startModeIndex, stopModeIndex - startModeIndex);\n                if (style && typeof style === \"string\") {\n                    return style.toLowerCase() as Glue42.Windows.WindowMode;\n                }\n            }\n        }\n\n        // default mode for GD2\n        return \"flat\";\n    }\n\n    public async getConfiguration() {\n        const result = await this._agm.invoke(AgmNames.GetApplicationsMethodName, { v2: { apps: [this._name] } });\n        const config = result.returned.applications[0];\n        return config;\n    }\n\n    public updateFromProps(props: AppProps) {\n        if (!this._props) {\n            this._props = { Name: props.Name };\n        }\n\n        Object.keys(props).forEach((key) => {\n            (this._props as any)[key] = (props as any)[key];\n        });\n    }\n\n    public start(context?: unknown, options?: Glue42.AppManager.ApplicationStartOptions): Promise<Glue42.AppManager.Instance> {\n        return new Promise<Glue42.AppManager.Instance>(async (resolve, reject) => {\n            const name = this._name;\n            let startTimeout = 60000;\n            if (isUndefinedOrNull(context)) {\n                context = {};\n            } else if (typeof context !== \"object\" || Array.isArray(context)) {\n                return reject(new Error(`Invalid \"context\" parameter - must be an object.`));\n            }\n\n            if (isUndefinedOrNull(options)) {\n                options = {};\n            } else if (typeof options !== \"object\") {\n                return reject(new Error(`Invalid \"options\" parameter - must be an object.`));\n            }\n\n            let waitForAGMInstance = options.waitForAGMReady ?? true;\n\n            const waitForApplicationInstance = (id: string) => {\n                let unsub: () => void;\n                // reject after some timeout\n                const timeout = setTimeout(() => {\n                    if (unsub) {\n                        unsub();\n                    }\n                    reject(`timed out while waiting for instance id ${id} for app ${this.name}`);\n                }, startTimeout);\n\n                const waitFunc = (i: Glue42.AppManager.Instance) => {\n                    if (i.id !== id) {\n                        return;\n                    }\n                    if (unsub) {\n                        unsub();\n                        unsub = undefined;\n                    }\n                    clearTimeout(timeout);\n                    resolve(i);\n                };\n\n                if (waitForAGMInstance) {\n                    unsub = this._appManager.onInstanceAgmServerReady(waitFunc);\n                } else {\n                    // if not there subscribe for instance events\n                    unsub = this._appManager.onInstanceStarted(waitFunc);\n                }\n            };\n\n            try {\n                const result = await this._agm.invoke<StartAppResult>(AgmNames.StartApplicationMethodName,\n                    {\n                        Name: name,\n                        Context: context,\n                        Options: options\n                    },\n                    \"best\",\n                    {\n                        methodResponseTimeoutMs: startTimeout\n                    });\n\n                const acsResult: StartAppResult = result.returned;\n                if (typeof acsResult.timeout !== \"undefined\") {\n                    startTimeout = acsResult.timeout * 1000;\n                }\n                if (typeof acsResult.waitForInterop !== \"undefined\" && typeof options.waitForAGMReady === \"undefined\") {\n                    waitForAGMInstance = acsResult.waitForInterop;\n                }\n\n                if (acsResult && acsResult.Id) {\n                    if (this._appManager.mode === \"startOnly\") {\n                        // we're in startOnly mode, no stream, so we will simulate the instance\n                        // based on the data received from GD\n                        const instance = this._appManager.handleInstanceStarted({\n                            ActivityId: undefined,\n                            IsActivityOwner: undefined,\n                            Context: undefined,\n                            Title: undefined,\n                            AgmServers: undefined,\n                            Id: acsResult.Id,\n                            Name: acsResult.Name,\n                        });\n                        resolve(instance);\n                    } else {\n                        // we received instance from ACS, let's wait until it appears on the stream\n                        waitForApplicationInstance(acsResult.Id);\n                    }\n                } else {\n                    // we haven't received instance from ACS - this might happen if the app does not\n                    // support tracking instances (e.g. we start internet explorer with some url)\n                    resolve(undefined);\n                }\n            } catch (error) {\n                reject(error.message ?? error);\n            }\n        });\n    }\n\n    public onInstanceStarted(callback: (instance: Glue42.AppManager.Instance) => any): UnsubscribeFunction {\n        validate(callback, this._configuration());\n        return this._registry.add(\"instanceStarted\", callback);\n    }\n\n    public onInstanceStopped(callback: (instance: Glue42.AppManager.Instance) => any): UnsubscribeFunction {\n        validate(callback, this._configuration());\n        return this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onAvailable(callback: (app: Glue42.AppManager.Application) => any): UnsubscribeFunction {\n        validate(callback, this._configuration());\n        if (this._props.IsReady) {\n            setTimeout(() => {\n                this._registry.execute(\"appAvailable\", this);\n            }, 0);\n        }\n        return this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onUnavailable(callback: (app: Glue42.AppManager.Application) => any): UnsubscribeFunction {\n        validate(callback, this._configuration());\n        if (this._props.IsReady === false) {\n            setTimeout(() => {\n                this._registry.execute(\"appUnavailable\", this);\n            }, 0);\n        }\n        return this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onChanged(callback: (app: Glue42.AppManager.Application) => any): void {\n        validate(callback, this._configuration());\n        this._registry.add(\"appChanged\", callback);\n    }\n\n    public onRemoved(callback: (app: Glue42.AppManager.Application) => any): void {\n        validate(callback, this._configuration());\n        this._registry.add(\"appRemoved\", callback);\n    }\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Configuration, InstanceProps, WindowContext } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { isUndefinedOrNull } from \"../activity/helpers/util\";\nimport { validate } from \"./helper\";\n\nexport default class InstanceImpl implements Glue42.AppManager.Instance {\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    private _startUpContext: WindowContext;\n    private _title: string;\n    private _isActivityInstance: boolean;\n    private _activityId: string;\n    private _inActivity: boolean;\n    private _isActivityOwner: boolean;\n    private _agmInstance: Partial<Glue42Core.AGM.Instance>;\n    private _unsubscribeInstanceAgmServerReady: UnsubscribeFunction;\n    private _unsubscribeInstanceStopped: UnsubscribeFunction;\n\n    constructor(\n        private _id: string,\n        private _appName: string,\n        private _appManager: AppManagerImpl,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        startFailed: boolean,\n        private _configuration: () => Configuration\n    ) {\n        if (startFailed) {\n            return;\n        }\n\n        this._unsubscribeInstanceStopped = this._appManager.onInstanceStopped((instance: Glue42.AppManager.Instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"stopped\", instance);\n        });\n\n        this._unsubscribeInstanceAgmServerReady = this._appManager.onInstanceAgmServerReady((instance) => {\n            if (instance.id !== this._id) {\n                return;\n            }\n\n            this._registry.execute(\"agmReady\", instance);\n        });\n    }\n\n    get id(): string { return this._id; }\n\n    get application(): Glue42.AppManager.Application { return this._appManager.application(this._appName); }\n\n    get activity(): Glue42.Activities.Activity {\n        if (!this._activities) {\n            throw new Error(\"This method requires glue.activities library to be enabled.\");\n        }\n        return this._activities.all.instances.get()\n            .filter((activityInstance: Glue42.Activities.Activity) => activityInstance.id === this._activityId)[0];\n    }\n\n    get isActivityOwner(): boolean { return this._isActivityOwner; }\n\n    // this property returns a list of activity window instances (not activity instances)\n    get activityInstances(): Glue42.AppManager.Instance[] {\n        return this._appManager.instances().filter((i) =>\n            i.application.type !== \"activity\" && // GD2 backward compatibility -  do not show activity instances into the activity window instances list\n            i.activityId && // glue js 2 and 3 bug and breaking change - they will show non activity window instances as activity in case of activityId === undefined\n            i.activityId === this._activityId);\n    }\n\n    get activityOwnerInstance(): Glue42.AppManager.Instance {\n        if (!this._activityId) {\n            return undefined;\n        }\n        return this.activityInstances.filter((inst) => (inst as InstanceImpl)?.isActivityOwner)[0];\n    }\n\n    get window(): Glue42.Windows.GDWindow {\n        if (!this._windows) {\n            throw new Error(\"This method requires glue.windows library to be enabled.\");\n        }\n\n        let win = this._windows.list().filter((w) => w.id === this._id)[0];\n        if (!win && this._activities && this.activity && this.activityOwnerInstance) {\n            // This is covering GD3 activity instance\n            win = this.activityOwnerInstance.window;\n        }\n\n        return win;\n    }\n\n    get context(): WindowContext {\n        return this._startUpContext ?? this.window?.context ?? {};\n    }\n\n    get title(): string { return this._title; }\n\n    get isActivityInstance(): boolean { return this._isActivityInstance; }\n\n    get activityId(): string { return this._activityId; }\n\n    get inActivity(): boolean { return this._inActivity; }\n\n    get isSingleWindowApp(): boolean { return !this._inActivity; }\n\n    get agm(): Partial<Glue42Core.AGM.Instance> {\n        return this._agmInstance;\n    }\n\n    public onAgmReady(callback: (instance: Glue42.AppManager.Instance) => any) {\n        validate(callback, this._configuration());\n        if (this._agmInstance) {\n            setTimeout(() => {\n                this._registry.execute(\"agmReady\", this);\n            }, 0);\n        }\n        return this._registry.add(\"agmReady\", callback);\n    }\n\n    public onStopped(callback: (instance: Glue42.AppManager.Instance) => any) {\n        validate(callback, this._configuration());\n        return this._registry.add(\"stopped\", callback);\n    }\n\n    // uses this.window and waits for the window to appear if needed\n    // we can not remove this.window for legacy reasons\n    public getWindow(): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            // try to get it the normal way\n            const result = this.window;\n            if (result) {\n                resolve(result);\n                return;\n            }\n\n            // if we can not find it directly wait for it to appear\n            const done = (error?: Error, window?: Glue42.Windows.GDWindow) => {\n                if (error) {\n                    reject(error);\n                }\n\n                if (window) {\n                    resolve(window);\n                }\n\n                setTimeout(() => {\n                    clearTimeout(timeout);\n                    unsub();\n                }, 0);\n            };\n\n            // if not found for 30 sec reject\n            const timeout = setTimeout(() => {\n                done(new Error(`can not find a window with id ${this._id}`));\n            }, 30000);\n\n            const unsub = this._windows.onWindowAdded((w) => {\n                if (w.id === this._id) {\n                    done(undefined, w);\n                }\n            });\n        });\n    }\n\n    public updateFromProps(props: InstanceProps): void {\n        this._startUpContext = props.Context;\n        this._title = props.Title;\n        this._isActivityInstance = false;\n        if (props.ActivityId && props.ActivityId !== \"\") {\n            this._activityId = props.ActivityId;\n            this._isActivityInstance = true;\n        }\n        this._isActivityOwner = props.IsActivityOwner;\n        if (!this._activityId && this._startUpContext && this._startUpContext.activityId) {\n            this._activityId = this._startUpContext.activityId;\n        }\n        this._inActivity = Boolean(this._activityId);\n\n        this.updateAgmInstanceFromProps(props);\n    }\n\n    public updateAgmInstanceFromProps(props: InstanceProps) {\n        if (!props.AgmServers) {\n            return;\n        }\n\n        const agmInstances: Glue42Core.AGM.Instance[] = props.AgmServers ;\n        if (agmInstances && agmInstances.length > 0 && !isUndefinedOrNull(agmInstances[0])) {\n            this._agmInstance = agmInstances[0];\n        }\n    }\n\n    public stop(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            let idToResolve = this._id;\n            if (this.isActivityOwner) {\n                idToResolve = this.activityId;\n            }\n            const unsubscribe = this._appManager.onInstanceStopped((instance) => {\n                if (instance.id === idToResolve) {\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            this._agm.invoke(\n                AgmNames.StopApplicationMethodName,\n                {\n                    Name: this._appName,\n                    Id: this._id\n                })\n                .then(() => {\n                    if (this._appManager.mode === \"startOnly\") {\n                        this._appManager.handleInstanceStopped({\n                            Name: this._appName,\n                            Id: this.id\n                        });\n                        // in startOnly mode, resolve stop as soon as we receive\n                        resolve();\n                    }\n                })\n                .catch((err: any) => reject(err));\n        });\n    }\n\n    public activate(): Promise<Glue42Core.AGM.InvocationResult<any>> {\n        return this._agm.invoke(AgmNames.ActivateApplicationMethodName, { Name: this._appName, Id: this._id });\n    }\n\n    public done() {\n\n        // remove all handlers\n        this._registry.clear();\n        // remove subscriptions\n        this._unsubscribeInstanceAgmServerReady();\n        this._unsubscribeInstanceStopped();\n    }\n\n    public getContext(): Promise<object> {\n        return Promise.resolve(this.context);\n    }\n}\n","import ApplicationImpl from \"./application\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, Configuration, InstanceProps } from \"./types\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport InstanceImpl from \"./instance\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { ApplicationConfig } from \"@glue42/schemas\";\nimport { GetApplicationsMethodName } from \"./const/agm-names\";\nimport { validate } from \"./helper\";\n\nexport default class AppManagerImpl implements Glue42.AppManager.AppManager {\n\n    private _apps: { [key: string]: ApplicationImpl } = {};\n    private _instances: InstanceImpl[] = [];\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n\n    constructor(\n        public mode: Glue42.AppManager.Mode,\n        private _agm: Glue42Core.AGM.API,\n        private _activities: Glue42.Activities.API,\n        private _windows: Glue42.Windows.API,\n        private _logger: Glue42Core.Logger.API,\n        private _gdMajorVersion: number,\n        private _configuration: () => Configuration\n    ) {\n        //\n    }\n\n    public getConfigurations = async (apps?: string[]): Promise<ApplicationConfig[]> => {\n        const args = {\n            v2: {\n                apps: undefined as undefined | string[]\n            }\n        };\n\n        if (Array.isArray(apps)) {\n            args.v2 = {\n                apps\n            };\n        }\n        const result = await this._agm.invoke(GetApplicationsMethodName, args);\n        return result.returned.applications;\n    }\n\n    public application = (name: string) => {\n        if (typeof name !== \"string\") {\n            throw new Error(`\"name\" must be string`);\n        }\n        return this._apps[name];\n    }\n\n    public applications = () => {\n        return Object.keys(this._apps).map((k: string) => this._apps[k]);\n    }\n\n    public instances = () => {\n        return this._instances.map((i) => i);\n    }\n\n    public getMyInstance = () => {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd) {\n            if (this._gdMajorVersion >= 3) {\n                // GD3 check\n                const instanceId = glue42gd.appInstanceId;\n                return this._instances.find((i) => i.id === instanceId);\n            }\n        } else {\n            const instanceId = this._agm.instance.instance;\n            return this._instances.find((i) => i.id === instanceId);\n        }\n        return undefined;\n    }\n\n    public getMyApplication = () => {\n        if (this._agm.instance) {\n            return this.application(this._agm.instance.application);\n        }\n    }\n\n    public handleSnapshotAppsAdded = (newApps: AppProps[]) => {\n        const currentApps = this.applications();\n        if (currentApps.length > 0) {\n            currentApps.forEach((item) => {\n                const name = item.name;\n                const alreadyExists = newApps.find((i) => i.Name === item.name);\n                if (!alreadyExists) {\n                    // Check if app is present in glue.js but not in snapshot, remove apps which are no longer present in gd\n                    this.handleAppRemoved({ Name: name });\n                }\n            });\n        }\n        newApps.forEach((item: AppProps) => {\n            const alreadyExists = currentApps.find((i) => i.name === item.Name);\n            if (!alreadyExists) {\n                // Check if app is already present within glue.js, add only missing ones\n                this.handleAppAdded(item);\n            }\n        });\n    }\n\n    public handleSnapshotInstanceStarted = (newInstances: InstanceProps[]) => {\n        const currentInstances = this.instances();\n        if (currentInstances.length > 0) {\n            currentInstances.forEach((item) => {\n                const id = item.id;\n                const alreadyExists = newInstances.find((i) => i.Id === id);\n                if (!alreadyExists) {\n                    // Check if the instance is present in glue.js but not in snapshot, remove the instance which are no longer present in gd\n                    this.handleInstanceStopped({ Name: item.application.name, Id: id });\n                }\n            });\n        }\n        newInstances.forEach((item) => {\n            const alreadyExists = currentInstances.find((i) => i.id === item.Id);\n            if (!alreadyExists) {\n                // Check if the instance is already present within glue.js, add only missing ones\n                this.handleInstanceStarted(item);\n            }\n        });\n    }\n\n    public handleAppAdded = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`adding app ${id}`);\n        this._apps[id] = new ApplicationImpl(this, id, this._agm, this._configuration);\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appAdded\", app);\n        // keeps backwards compatibility\n        this._registry.execute(\"appAvailable\", app);\n    }\n\n    public handleAppUpdated = (props: AppProps) => {\n        // TODO: check side effects, is this._apps updated?\n\n        const app = this._updateAppFromProps(props);\n\n        this._registry.execute(\"appChanged\", app);\n    }\n\n    public handleAppRemoved = (props: AppProps) => {\n        const id = this._getAppId(props);\n        this._logger.trace(`removing app ${id}`);\n        const app = this.application(id);\n\n        // remove all instances related to the app\n        this._instances = this._instances.filter((i) => i.application.name !== app.name);\n\n        delete this._apps[id];\n\n        this._registry.execute(\"appRemoved\", app);\n    }\n\n    // not called from GD3\n    public handleAppReady = (props: AppProps) => {\n        const id = this._getAppId(props);\n        const app = this._getAppOrThrow(id);\n        app.updateFromProps(props);\n\n        if (app.available) {\n            this._registry.execute(\"appAvailable\", app);\n        } else {\n            this._registry.execute(\"appUnavailable\", app);\n        }\n    }\n\n    public handleInstanceStarted = (props: InstanceProps): InstanceImpl => {\n        this._logger.trace(`started app ${props.Name} ${props.Id}`);\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n\n        const instance = new InstanceImpl(id, appName, this, this._agm, this._activities, this._windows, false, this._configuration);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._instances.push(instance);\n\n        this._registry.execute(\"instanceStarted\", instance);\n        return instance;\n    }\n\n    public handleInstanceStopped = (props: Pick<InstanceProps, \"Name\" | \"Id\">) => {\n        this._logger.trace(`failed to start app ${props.Name} ${props.Id}`);\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        this._instances = this._instances.filter((i) => !this._matchInstance(i, id, appName));\n\n        this._registry.execute(\"instanceStopped\", instance);\n        instance.done();\n    }\n\n    public handleInstanceAgmServerReady = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, appName);\n\n        instance.updateAgmInstanceFromProps(props);\n\n        this._registry.execute(\"instanceAgmServerReady\", instance);\n    }\n\n    public handleInstanceStartFailed = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const appName = this._getInstanceAppName(props);\n        const startFailed = true;\n        const instance = new InstanceImpl(id, appName, undefined, undefined, undefined, undefined, startFailed, this._configuration);\n\n        this._updateInstanceFromProps(instance, props);\n\n        this._registry.execute(\"instanceStartFailed\", instance);\n    }\n\n    public handleInstanceUpdated = (props: InstanceProps) => {\n\n        const id = this._getInstanceId(props);\n        const app = this._getInstanceAppName(props);\n        const instance = this._getInstanceOrThrow(id, app);\n\n        this._updateInstanceFromProps(instance, props);\n    }\n\n    /** Event subscription methods */\n    public onInstanceStarted = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        validate(callback, this._configuration());\n        return this._registry.add(\"instanceStarted\", callback, this._instances);\n    }\n\n    public onInstanceStartFailed = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        validate(callback, this._configuration());\n        return this._registry.add(\"instanceStartFailed\", callback);\n    }\n\n    public onInstanceStopped = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        validate(callback, this._configuration());\n        return this._registry.add(\"instanceStopped\", callback);\n    }\n\n    public onInstanceUpdated = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        validate(callback, this._configuration());\n        return this._registry.add(\"instanceChanged\", callback);\n    }\n\n    public onInstanceAgmServerReady = (callback: (item: Glue42.AppManager.Instance) => any): UnsubscribeFunction => {\n        validate(callback, this._configuration());\n        return this._registry.add(\"instanceAgmServerReady\", callback);\n    }\n\n    public onAppAdded = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        validate(callback, this._configuration());\n        return this._registry.add(\"appAdded\", callback, Object.values(this._apps));\n    }\n\n    public onAppRemoved = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        validate(callback, this._configuration());\n        return this._registry.add(\"appRemoved\", callback);\n    }\n\n    public onAppAvailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        validate(callback, this._configuration());\n        return this._registry.add(\"appAvailable\", callback);\n    }\n\n    public onAppUnavailable = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        validate(callback, this._configuration());\n        return this._registry.add(\"appUnavailable\", callback);\n    }\n\n    public onAppChanged = (callback: (item: Glue42.AppManager.Application) => any): UnsubscribeFunction => {\n        validate(callback, this._configuration());\n        return this._registry.add(\"appChanged\", callback);\n    }\n\n    private _getAppOrThrow(id: string) {\n        const result = this.application(id);\n        if (!result) {\n            throw Error(`app with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getAppId(props: AppProps) {\n        return props.Name;\n    }\n\n    private _matchInstance(instance: Glue42.AppManager.Instance, id: string, appName: string) {\n        return instance.id === id && instance.application.name === appName;\n    }\n\n    private _getInstanceByIdAndName(id: string, appName: string) {\n        return this._instances.filter((i) => this._matchInstance(i, id, appName))[0];\n    }\n\n    private _getInstanceOrThrow(id: string, appName: string) {\n        const result = this._getInstanceByIdAndName(id, appName);\n        if (!result) {\n            throw Error(`instance with id ${id} not found`);\n        }\n        return result;\n    }\n\n    private _getInstanceId(props: Pick<InstanceProps, \"Id\">) {\n        return props.Id;\n    }\n\n    private _getInstanceAppName(props: Pick<InstanceProps, \"Name\">) {\n        return props.Name;\n    }\n\n    private _updateAppFromProps(props: AppProps) {\n        const id = this._getAppId(props);\n        this._logger.trace(`updating app with  + ${id}, ${JSON.stringify(props)}`);\n        const app = this._getAppOrThrow(id);\n\n        app.updateFromProps(props);\n\n        return app;\n    }\n\n    private _updateInstanceFromProps(instance: InstanceImpl, props: InstanceProps) {\n        this._logger.trace(\"updating instance with \" + this._getInstanceId(props) + \" for app \" + this._getInstanceAppName(props));\n        instance.updateFromProps(props);\n    }\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { OnGDShutdownMethodName } from \"./const/agm-names\";\n\nfunction promisify(promise: Promise<any>, successCallback: (arg?: any) => void, errorCallback: (err?: any) => void) {\n    const isFunction = (arg: any) => {\n        return !!(arg && arg.constructor && arg.call && arg.apply);\n    };\n\n    if (!isFunction(successCallback) && !isFunction(errorCallback)) {\n        return promise;\n    }\n\n    if (!isFunction(successCallback)) {\n        successCallback = () => {\n            // EMPTY\n        };\n    } else if (!isFunction(errorCallback)) {\n        errorCallback = () => {\n            // EMPTY\n        };\n    }\n\n    return promise.then(successCallback, errorCallback);\n}\n\nexport default class EntitlementsImpl implements Glue42.AppManager.Entitlements {\n\n    private _registry: CallbackRegistry = CallbackRegistryFactory();\n    private _isMethodRegistered = false;\n\n    constructor(\n        private _agm: Glue42Core.AGM.API\n    ) {\n        //\n    }\n\n    public handleBranchModified = (branch: Glue42.AppManager.Branch) => {\n        this._registry.execute(\"branchChanged\", branch);\n    }\n\n    public handleBranchesModified = (branches: Glue42.AppManager.Branch[]) => {\n        this._registry.execute(\"branchesChanged\", branches);\n    }\n\n    public getRegion = (success?: (region: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        return promisify(\n            this._agmInvoke(\n                AgmNames.GetConfigurationRegionMethodName,\n                (e: Glue42Core.AGM.InvocationResult<{ Region: string }>) => e.returned.Region\n            ),\n            success,\n            error\n        );\n    }\n\n    public getBranches = (success?: (branches: Glue42.AppManager.Branch[]) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch[]> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetBranchesMethodName,\n            (e) => {\n                const obj = e.returned.Branches as { [key: string]: Glue42.AppManager.Branch };\n                return Object.keys(obj).map((key) => obj[key]);\n            }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getCurrentBranch = (success?: (branch: Glue42.AppManager.Branch) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.Branch> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetCurrentBranchMethodName,\n            (e) => e.returned.Branch,\n            undefined\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setRegion = (region: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetConfigurationRegionMethodName,\n            (e) => e.returned.ResultMessage,\n            { Region: region }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public setCurrentBranch = (branch: string, success?: (resMsg: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.SetCurrentBranchMethodName,\n            (e) => e.returned.ResultMessage,\n            { Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public currentUser = (success?: (user: Glue42.AppManager.UserInfo) => any, error?: (err: any) => any): void | Promise<Glue42.AppManager.UserInfo> => {\n        const promise = this._agmInvoke(AgmNames.GetUserMethodName);\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlement = (funct: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public getFunctionalEntitlementBranch = (funct: string, branch: string, success?: (entitlement: string) => any, error?: (err: any) => any): void | Promise<string> => {\n        const promise = this._agmInvoke(\n            AgmNames.GetFunctionalEntitlementMethodName,\n            (e) => e.returned.Entitlement,\n            { Function: funct, Branch: branch }\n        );\n        return promisify(promise, success, error);\n    }\n\n    public canI = (func: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public canIBranch = (func: string, branch: string, success?: (allowed: boolean) => any, error?: (err: any) => any): void | Promise<boolean> => {\n        const promise = this._agmInvoke(\n            AgmNames.CanIMethodName,\n            (e) => e.returned.Result,\n            { Function: func, Branch: branch }\n        );\n\n        return promisify(promise, success, error);\n    }\n\n    public onBranchesChanged = (callback: (branches: Glue42.AppManager.Branch[]) => any): UnsubscribeFunction => {\n        return this._registry.add(\"branchesChanged\", callback);\n    }\n\n    public onBranchChanged = (callback: (branch: Glue42.AppManager.Branch) => any): UnsubscribeFunction => {\n        return this._registry.add(\"branchChanged\", callback);\n    }\n\n    public exit = (options?: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.ShutdownMethodName,\n            null,\n            options\n        );\n    }\n\n    public onShuttingDown = (callback: (args: Glue42.AppManager.ShuttingDownEventArgs) => Promise<{ prevent: boolean }>) => {\n        this.registerMethod();\n        return this._registry.add(\"onShuttingDown\", callback);\n    }\n\n    public restart = (options?: Glue42.AppManager.ExitOpts): Promise<any> => {\n        return this._agmInvoke(\n            AgmNames.RestartMethodName,\n            null,\n            options\n        );\n    }\n\n    private registerMethod() {\n        if (!this._isMethodRegistered) {\n            this._agm.register(OnGDShutdownMethodName, async (args) => {\n                try {\n                    const results = await Promise.all(this._registry.execute(\"onShuttingDown\", args)) as { prevent: boolean }[];\n                    const prevent = results.some((r) => r.prevent);\n                    return { prevent };\n                } catch (error) {\n                    //\n                }\n            });\n            this._isMethodRegistered = true;\n        }\n    }\n\n    private _agmInvoke = (\n        method: string,\n        transformFunction?: (res: Glue42Core.AGM.InvocationResult<any>) => any,\n        args?: object\n    ): Promise<any> => {\n        args = args || {};\n        return new Promise((resolve, reject) => {\n            const errHandler: Glue42Core.AGM.InvokeErrorHandler = (error) => reject(error);\n            this._agm.invoke(method, args)\n                .then((result) => {\n                    if (!transformFunction) {\n                        transformFunction = (d: Glue42Core.AGM.InvocationResult<any>) => d.returned;\n                    }\n                    resolve(transformFunction(result));\n                })\n                .catch(errHandler);\n        });\n    }\n}\n","import * as AgmNames from \"./const/agm-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport AppManagerImpl from \"./app-manager\";\nimport { Configuration, GetApplicationsMethodResult } from \"./types\";\n\n/** Retrieves application snapshot from ACS */\nexport default function snapshot(agm: Glue42Core.AGM.API, appManager: AppManagerImpl): Promise<Configuration> {\n    return new Promise<Configuration>((resolve, reject) => {\n        agm.invoke<GetApplicationsMethodResult>(AgmNames.GetApplicationsMethodName, { skipIcon: true })\n            .then((response) => {\n                const data = response.returned;\n                const configuration = response.returned.configuration ?? {};\n                if (!data) {\n                    resolve(configuration);\n                }\n\n                const applications = data.applications;\n                if (!applications) {\n                    resolve(configuration);\n                }\n\n                objectValues(applications).map((item) => appManager.handleAppAdded(item));\n\n                resolve(configuration);\n            })\n            .catch((err: Error) => reject(`Error getting application snapshot: ${err.message}`));\n    });\n}\n","export const OnNotificationEvent = \"OnNotification\";\n\nexport const OnBranchChangedEvent = \"OnBranchChanged\";\nexport const OnBranchesModifiedEvent = \"OnBranchesModified\";\n\nexport const OnApplicationAddedEvent = \"OnApplicationAdded\";\nexport const OnApplicationRemovedEvent = \"OnApplicationRemoved\";\nexport const OnApplicationChangedEvent = \"OnApplicationChanged\";\nexport const OnApplicationReadyEvent = \"OnApplicationReady\";\n\nexport const OnApplicationStartedEvent = \"OnApplicationStarted\";\nexport const OnApplicationRegisteredEvent = \"OnApplicationRegistered\";\nexport const OnApplicationAgmServerReadyEvent = \"OnApplicationAgmServerReady\";\nexport const OnApplicationUpdatedEvent = \"OnApplicationUpdated\";\nexport const OnApplicationStoppedEvent = \"OnApplicationStopped\";\nexport const OnApplicationStartFailedEvent = \"OnApplicationStartFailed\";\n","import * as AgmNames from \"./const/agm-names\";\nimport * as EventNames from \"./const/event-names\";\nimport { objectValues } from \"./helper\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport { AppProps, Configuration, InstanceProps } from \"./types\";\nimport AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\n\n/** Subscribe for the AGM stream published by ACS and distributes events to applications and instances components */\nexport default function createDataSubscription(agm: Glue42Core.AGM.API, applications: AppManagerImpl, entitlements: EntitlementsImpl, skipIcons: boolean) {\n    let subscription: Glue42Core.AGM.Subscription;\n    let initiated = false;\n    const start = () => {\n        let resolveFunc: (config: Configuration) => void;\n        let rejectFunc: (error?: any) => void;\n\n        const resultPromise = new Promise<Configuration>((resolve, reject) => {\n            resolveFunc = resolve;\n            rejectFunc = reject;\n        });\n\n        agm.subscribe(AgmNames.OnEventMethodName, { arguments: { skipIcon: skipIcons }, waitTimeoutMs: 10000 })\n            .then((s) => {\n                subscription = s;\n                subscription.onData((streamData: Glue42Core.AGM.StreamData) => {\n                    const events: any = streamData.data;\n                    const configuration = events.configuration ?? {};\n\n                    const onApplicationAddedEventArgs: AppProps[] = objectValues(events[EventNames.OnApplicationAddedEvent]);\n                    if (streamData.data.isSnapshot) {\n                        applications.handleSnapshotAppsAdded(onApplicationAddedEventArgs);\n                    } else {\n                        onApplicationAddedEventArgs.forEach((item: AppProps) => applications.handleAppAdded(item));\n                    }\n\n                    objectValues(events[EventNames.OnApplicationChangedEvent])\n                        .forEach((item: AppProps) => applications.handleAppUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationRemovedEvent])\n                        .forEach((item: AppProps) => applications.handleAppRemoved(item));\n\n                    objectValues(events[EventNames.OnApplicationReadyEvent])\n                        .forEach((item: AppProps) => applications.handleAppReady(item));\n\n                    const onApplicationStartedEventArgs: InstanceProps[] = objectValues(events[EventNames.OnApplicationStartedEvent]);\n\n                    if (streamData.data.isSnapshot) {\n                        applications.handleSnapshotInstanceStarted(onApplicationStartedEventArgs);\n                    } else {\n                        onApplicationStartedEventArgs.forEach((item: InstanceProps) => applications.handleInstanceStarted(item));\n                    }\n\n                    objectValues(events[EventNames.OnApplicationStartFailedEvent])\n                        .forEach((item: InstanceProps) => applications.handleInstanceStartFailed(item));\n\n                    objectValues(events[EventNames.OnApplicationStoppedEvent])\n                        .forEach((item: InstanceProps) => applications.handleInstanceStopped(item));\n\n                    objectValues(events[EventNames.OnApplicationUpdatedEvent])\n                        .forEach((item: InstanceProps) => applications.handleInstanceUpdated(item));\n\n                    objectValues(events[EventNames.OnApplicationAgmServerReadyEvent])\n                        .forEach((item: InstanceProps) => applications.handleInstanceAgmServerReady(item));\n\n                    objectValues(events[EventNames.OnBranchChangedEvent])\n                        .forEach((item: Glue42.AppManager.Branch) => entitlements.handleBranchModified(item));\n\n                    objectValues(events[EventNames.OnBranchesModifiedEvent])\n                        .forEach((item: Glue42.AppManager.Branch[]) => entitlements.handleBranchesModified(item));\n\n                    if (!initiated) {\n                        initiated = true;\n                        const hasMyAppInSnapShot = onApplicationAddedEventArgs.some((a) => a.Name === agm.instance.application);\n                        const hasMyInstanceInSnapShot = onApplicationStartedEventArgs.some((i) => i.Id === agm.instance.instance);\n                        if (hasMyAppInSnapShot) {\n                            if (hasMyInstanceInSnapShot) {\n                                resolveFunc(configuration);\n                            } else {\n                                const un = applications.onInstanceStarted((i) => {\n                                    if (i.id === agm.instance.instance) {\n                                        un();\n                                        resolveFunc(configuration);\n                                    }\n                                });\n                            }\n                        } else {\n                            resolveFunc(configuration);\n                        }\n                    }\n                });\n\n                subscription.onFailed((err: any) => rejectFunc(err));\n\n            })\n            .catch((err: Error) => rejectFunc(`Error subscribing for ${AgmNames.OnEventMethodName} stream. Err: ${err.message ?? JSON.stringify(err)}`));\n\n        return resultPromise;\n    };\n\n    const stop = () => {\n        if (subscription) {\n            subscription.close();\n        }\n    };\n\n    return {\n        start,\n        stop\n    };\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\n\nexport const InMemoryStoreCommandMethodName = \"T42.ACS.InMemoryStoreCommand\";\n\nexport type InMemoryStoreCommandArgs = InMemoryImportCommand | InMemoryExportCommand | InMemoryRemoveCommand | InMemoryClearCommand;\n\nexport interface GenericInMemoryCommand<C, A> {\n    command: C;\n    args?: A;\n}\n\ntype InMemoryImportCommand = GenericInMemoryCommand<\"import\", InMemoryImportArgs>;\ninterface InMemoryImportArgs {\n    apps: Glue42.AppManager.Definition[];\n    mode?: \"merge\" | \"replace\";\n}\n\ntype InMemoryRemoveCommand = GenericInMemoryCommand<\"remove\", { apps: string[] }>;\nexport interface InMemoryRemoveArgs {\n    apps: string[];\n}\n\ntype InMemoryExportCommand = GenericInMemoryCommand<\"export\", undefined>;\ntype InMemoryClearCommand = GenericInMemoryCommand<\"clear\", undefined>;\n\nexport interface InMemoryExportResult {\n    apps: Glue42.AppManager.Definition[];\n}\n\nexport class InMemoryStore implements Glue42.AppManager.InMemoryStore {\n\n    constructor(private interop: Glue42Core.Interop.API) {\n    }\n\n    public import(apps: Glue42.AppManager.Definition[], mode?: \"replace\" | \"merge\"): Promise<Glue42.AppManager.ImportResult> {\n        if (!apps || !Array.isArray(apps)) {\n            return Promise.reject(\"invalid apps argument - should be an array of application definitions\");\n        }\n        if (mode && mode !== \"replace\" && mode !== \"merge\") {\n            return Promise.reject(\"invalid mode argument - should be 'replace' or 'merge'\");\n        }\n\n        mode = mode ?? \"replace\";\n        const command: InMemoryImportCommand = {\n            command: \"import\",\n            args: {\n                apps,\n                mode\n            }\n        };\n        return this.interop.invoke<Glue42.AppManager.ImportResult>(InMemoryStoreCommandMethodName, command)\n            .then((r) => r.returned);\n    }\n\n    public export(): Promise<Glue42.AppManager.Definition[]> {\n        return this.interop.invoke<InMemoryExportResult>(InMemoryStoreCommandMethodName, { command: \"export\" })\n            .then((r) => r.returned.apps);\n    }\n\n    public remove(app: string): Promise<void> {\n        if (!app || typeof app !== \"string\") {\n            return Promise.reject(\"invalid app name, should be a string value\");\n        }\n        const command: InMemoryRemoveCommand = {\n            command: \"remove\",\n            args: {\n                apps: [app]\n            }\n        };\n        return this.interop.invoke<void>(InMemoryStoreCommandMethodName, command).then((r) => r.returned);\n    }\n\n    public clear(): Promise<void> {\n        const command: InMemoryClearCommand = {\n            command: \"clear\"\n        };\n        return this.interop.invoke<void>(InMemoryStoreCommandMethodName, command).then((r) => r.returned);\n    }\n\n    public createAppDef(name: string, url: string): Glue42.AppManager.Definition {\n        if (!url) {\n            url = \"https://google.com\";\n        }\n        return {\n            name,\n            type: \"window\",\n            title: name,\n            details: {\n                url\n            }\n        };\n    }\n}\n","import AppManagerImpl from \"./app-manager\";\nimport EntitlementsImpl from \"./entitlements\";\nimport snapshot from \"./snapshot\";\nimport subscriptionFactory from \"./data-subscription\";\nimport { Glue42 } from \"../../glue\";\nimport { InMemoryStore } from \"./in-memory\";\nimport { Configuration } from \"./types\";\n\nexport default (config: Glue42.AppManager.Config): Glue42.AppManager.API => {\n\n    if (!config) {\n        throw Error(\"config not set\");\n    }\n\n    if (!config.agm) {\n        throw Error(\"config.agm is missing\");\n    }\n\n    const START_ONLY: Glue42.AppManager.Mode = \"startOnly\";\n    const SKIP_ICONS: Glue42.AppManager.Mode = \"skipIcons\";\n    const FULL: Glue42.AppManager.Mode = \"full\";\n\n    const mode: Glue42.AppManager.Mode = config.mode || START_ONLY;\n    if (mode !== START_ONLY && mode !== SKIP_ICONS && mode !== FULL) {\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        throw new Error(`Invalid mode for appManager lib - ${mode} is not supported`);\n    }\n\n    const activities = config.activities;\n    const agm = config.agm;\n    const logger = config.logger;\n    const windows = config.windows;\n    let configuration: Configuration = {};\n    const appManager = new AppManagerImpl(mode, agm, activities, windows, logger.subLogger(\"applications\"), config.gdMajorVersion, () => configuration);\n    const entitlements = new EntitlementsImpl(agm);\n\n    let readyPromise: Promise<Configuration>;\n    if (mode === START_ONLY) {\n        readyPromise = snapshot(agm, appManager);\n    } else {\n        const subscription = subscriptionFactory(agm, appManager, entitlements, mode === SKIP_ICONS);\n        readyPromise = subscription.start();\n    }\n\n    const api: Glue42.AppManager.API = {\n        ready: () => readyPromise.then((c) => { configuration = c; }),\n\n        applications: appManager.applications,\n        application: appManager.application,\n        getConfigurations: appManager.getConfigurations,\n\n        onAppAdded: appManager.onAppAdded,\n        onAppRemoved: appManager.onAppRemoved,\n        onAppChanged: appManager.onAppChanged,\n        onAppAvailable: appManager.onAppAvailable,\n        onAppUnavailable: appManager.onAppUnavailable,\n\n        instances: appManager.instances,\n        get myInstance() {\n            return appManager.getMyInstance();\n        },\n        get myApplication() {\n            return appManager.getMyApplication();\n        },\n\n        onInstanceStarted: appManager.onInstanceStarted,\n        onInstanceStopped: appManager.onInstanceStopped,\n        onInstanceUpdated: appManager.onInstanceUpdated,\n        onInstanceStartFailed: appManager.onInstanceStartFailed,\n\n        getRegion: entitlements.getRegion,\n        getBranches: entitlements.getBranches,\n        getCurrentBranch: entitlements.getCurrentBranch,\n        getFunctionalEntitlement: entitlements.getFunctionalEntitlement,\n        getFunctionalEntitlementBranch: entitlements.getFunctionalEntitlementBranch,\n\n        setCurrentBranch: entitlements.setCurrentBranch,\n        setRegion: entitlements.setRegion,\n\n        currentUser: entitlements.currentUser,\n\n        canI: entitlements.canI,\n        canIBranch: entitlements.canIBranch,\n\n        onBranchesChanged: entitlements.onBranchesChanged,\n\n        exit: entitlements.exit,\n        restart: entitlements.restart,\n\n        onShuttingDown: entitlements.onShuttingDown,\n\n        inMemory: new InMemoryStore(agm)\n    };\n\n    return api;\n};\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n","'use strict';\n\nvar encode = require('./encode');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n","'use strict';\nmodule.exports = require('./lib/index');\n","import shortid from \"shortid\";\nimport { Glue42 } from \"../../../glue\";\nimport { Executor, JumpListUpdateActionSettings, JumpListUpdateSettings, JumpListSettingsInternal } from \"../types\";\n\nconst T42JumpListAction = \"T42.JumpList.Action\";\n\nexport interface ActionCallback {\n    callbackId: string;\n    callback: () => Promise<void>;\n}\n\nexport class JumpListManager {\n\n    private _executor: Executor;\n    private _agm: Glue42.AGM.API;\n    private _logger: Glue42.Logger.API;\n    private _groupActionCallbacks: Map<string, ActionCallback[]> = new Map<string, ActionCallback[]>();\n    private _registered = false;\n\n    public init(executor: Executor, agm: Glue42.AGM.API, logger: Glue42.Logger.API) {\n        this._executor = executor;\n        this._agm = agm;\n        this._logger = logger;\n\n        this.registerCallbackMethod();\n    }\n\n    public setEnabled(windowId: string, enabled: boolean): Promise<void> {\n        const settings: JumpListUpdateSettings = {\n            enabled\n        };\n\n        return this._executor.updateJumpList(windowId, settings);\n    }\n\n    public createCategory(windowId: string, title: string, actions: Glue42.Windows.JumpListActionSettings[]): Promise<void> {\n        this.validateActions(title, actions);\n        const settings: JumpListUpdateSettings = {\n            category: {\n                title,\n                operation: \"create\",\n                actions: this.toUpdateActions(windowId, \"create\", title, actions)\n            }\n        };\n\n        return this._executor.updateJumpList(windowId, settings);\n    }\n\n    public removeCategory(windowId: string, title: string) {\n        const settings: JumpListUpdateSettings = {\n            category: {\n                title,\n                operation: \"remove\",\n                actions: []\n            }\n        };\n\n        this.manageActionCallback(windowId, settings.category.operation, title);\n\n        return this._executor.updateJumpList(windowId, settings);\n    }\n\n    public createActions(windowId: string, categoryTitle: string, actions: Glue42.Windows.JumpListActionSettings[]): Promise<void> {\n        this.validateActions(categoryTitle, actions);\n        const settings: JumpListUpdateSettings = {\n            category: {\n                title: categoryTitle,\n                operation: \"update\",\n                actions: this.toUpdateActions(windowId, \"create\", categoryTitle, actions)\n            }\n        };\n\n        return this._executor.updateJumpList(windowId, settings);\n    }\n\n    public removeActions(windowId: string, categoryTitle: string, actions: Glue42.Windows.JumpListActionSettings[]): Promise<void> {\n        const settings: JumpListUpdateSettings = {\n            category: {\n                title: categoryTitle,\n                operation: \"update\",\n                actions: this.toUpdateActions(windowId, \"remove\", categoryTitle, actions)\n            }\n        };\n\n        return this._executor.updateJumpList(windowId, settings);\n    }\n\n    public async getActions(windowId: string, catgoryTitle: string): Promise<Glue42.Windows.JumpListActionSettings[]> {\n        const actions: Glue42.Windows.JumpListActionSettings[] = [];\n        const configuration = await this.getJumpListSettings(windowId);\n        const currentCategory = configuration.categories.find((category) => category.title === catgoryTitle);\n        if (currentCategory) {\n            currentCategory.actions.forEach((action) => {\n                const actionCallback = this.getActionCallback(action.callbackId);\n                if (actionCallback) {\n                    action.callback = actionCallback.callback;\n                }\n                actions.push({\n                    icon: action.icon,\n                    callback: action.callback,\n                    singleInstanceTitle: action.singleInstanceTitle,\n                    multiInstanceTitle: action.multiInstanceTitle\n                } as Glue42.Windows.JumpListActionSettings);\n            });\n        }\n        return Promise.resolve(actions);\n    }\n\n    public getJumpListSettings(windowId: string): Promise<JumpListSettingsInternal> {\n        return this._executor.getJumpList(windowId);\n    }\n\n    private toUpdateActions(windowId: string, operation: string, categoryTitle: string, actions: Glue42.Windows.JumpListActionSettings[]): JumpListUpdateActionSettings[] {\n        return actions.map((action) => {\n            const updateAction = {\n                icon: action.icon,\n                callback: action.callback,\n                callbackId: shortid.generate(),\n                singleInstanceTitle: action.singleInstanceTitle,\n                multiInstanceTitle: action.multiInstanceTitle,\n                operation\n            } as JumpListUpdateActionSettings;\n\n            this.manageActionCallback(windowId, operation, categoryTitle, updateAction);\n\n            return updateAction;\n        });\n    }\n\n    private manageActionCallback(windowId: string, operation: string, categoryTitle: string, updateAction?: JumpListUpdateActionSettings) {\n        const groupCallbacksKey = `${categoryTitle}-${windowId}`;\n        if (operation === \"create\") {\n            if (!this._groupActionCallbacks.has(groupCallbacksKey)) {\n                this._groupActionCallbacks.set(groupCallbacksKey, []);\n            }\n\n            const categoryActionCallbacks = this._groupActionCallbacks.get(groupCallbacksKey);\n            categoryActionCallbacks.push({\n                callbackId: updateAction.callbackId,\n                callback: updateAction.callback\n            });\n\n        } else if (operation === \"remove\") {\n            if (updateAction) {\n                let categoryActionCallbacks = this._groupActionCallbacks.get(groupCallbacksKey) ?? [];\n                categoryActionCallbacks = categoryActionCallbacks.filter((accCal) => accCal.callbackId !== updateAction.callbackId);\n                if (categoryActionCallbacks.length === 0) {\n                    this._groupActionCallbacks.delete(groupCallbacksKey);\n                } else {\n                    this._groupActionCallbacks.set(groupCallbacksKey, categoryActionCallbacks);\n                }\n            } else {\n                this._groupActionCallbacks.delete(groupCallbacksKey);\n            }\n        }\n    }\n\n    private registerCallbackMethod() {\n        if (this._registered) {\n            return;\n        }\n        this._registered = true;\n\n        try {\n            this._agm.register(T42JumpListAction, (args: any, caller: any) => {\n                const actionCallback = this.getActionCallback(args.callbackId);\n                if (actionCallback) {\n                    try {\n                        actionCallback.callback();\n                    } catch (e) {\n                        this._logger.error(\"Unable to execute user callback for jump list action!\", e);\n                    }\n                }\n            });\n        } catch (e) {\n            this._logger.error(`Unable to register method ${T42JumpListAction} for invoking jump list action callbacks!`, e);\n            return Promise.reject(e);\n        }\n    }\n\n    private getActionCallback(callbackId: string): ActionCallback {\n        let callbackAction: ActionCallback;\n        [...this._groupActionCallbacks.values()].forEach((callbacks: ActionCallback[]) => {\n            const callback = callbacks.find((cal) => cal.callbackId === callbackId);\n            if (callback) {\n                callbackAction = callback;\n            }\n        });\n        return callbackAction;\n    }\n\n    private validateActions(category: string, actions: Glue42.Windows.JumpListActionSettings[]) {\n        if (!(actions && actions.length > 0)) {\n            throw new Error(`Category '${category}' doesn't contain any actions!`);\n        }\n\n        actions.forEach((action) => {\n            if (!action.singleInstanceTitle) {\n                throw new Error(`Category '${category}' contains an action with undefined singleInstanceTitle!`);\n            }\n            if (!action.multiInstanceTitle) {\n                throw new Error(`Category '${category}' contains an action with undefined multiInstanceTitle!`);\n            }\n            if (!action.callback) {\n                throw new Error(`Category '${category}' contains an action with undefined callback function!`);\n            }\n        });\n    }\n}\n\nexport default new JumpListManager();\n","import { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { PendingWindowState, WindowEvents, WindowWrapper } from \"./types\";\n\nexport class WindowStore {\n    private readonly waitForTimeoutInMilliseconds: number = 60000;\n    private _windows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindows: { [key: string]: WindowWrapper } = {};\n    private _pendingWindowsStates: { [key: string]: PendingWindowState } = {};\n    private _registry: CallbackRegistry;\n    private _logger: Glue42Core.Logger.API;\n\n    constructor() {\n        this._registry = CallbackFactory();\n    }\n\n    public init(logger: Glue42Core.Logger.API) {\n        this._logger = logger;\n    }\n\n    // Returns a window which either in Ready OR NOT 'ready' state (when the window is NOT marked with readyToShow)\n    public get(id: string): WindowWrapper {\n        return this._windows[id] || this._pendingWindows[id];\n    }\n\n    // Returns a window which is in 'ready' state (when the window is marked with readyToShow)\n    public getIfReady(id: string): WindowWrapper {\n        return this._windows[id];\n    }\n\n    public get list(): { [key: string]: WindowWrapper } {\n        return this._windows;\n    }\n\n    public add(window: WindowWrapper) {\n        const isExist = this._pendingWindows[window.API.id] ? true : false;\n        if (isExist) {\n            this._logger.error(`trying to add window with id ${window.API.id} from windowStore, which already exists`);\n            return;\n        }\n        const remote = window.API.windowType === \"remote\";\n        this._pendingWindows[window.API.id] = window;\n        this._pendingWindowsStates[window.API.id] = {\n            ready: false,\n            urlChanged: remote, // remote windows don't have url events\n        };\n\n        this._registry.execute(\"on-added\", window);\n    }\n\n    public remove(window: WindowWrapper) {\n        delete this._windows[window.API.id];\n        delete this._pendingWindows[window.API.id];\n        delete this._pendingWindowsStates[window.API.id];\n        this._registry.execute(\"on-removed\", window);\n    }\n\n    public setReadyState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.ready = true;\n\n        if (targetWindowState.urlChanged) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public setUrlChangedState(windowId: string) {\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        targetWindowState.urlChanged = true;\n\n        if (targetWindowState.ready) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public setCompositionChangedState(windowId: string, windowAvailableOnURLChanged: boolean) {\n        // returning window obj earlier than urlChanged, if windowAvailableOnURLChanged is missing a value (older versions of GlueDesktop), the window obj is returned on URL changed\n        const targetWindowState = this._pendingWindowsStates[windowId];\n\n        if (typeof targetWindowState === \"undefined\") {\n            return;\n        }\n\n        if (windowAvailableOnURLChanged === false) {\n            this.markReadyToShow(windowId);\n        }\n    }\n\n    public waitFor(id: string): Promise<WindowWrapper> {\n        return new Promise((resolve, reject) => {\n\n            let un: UnsubscribeFunction;\n\n            const timeout = setTimeout(() => {\n                un();\n                reject(\"waitFor timed out.\");\n            }, this.waitForTimeoutInMilliseconds);\n\n            const win = this._windows[id];\n            if (win) {\n                clearTimeout(timeout);\n                resolve(win);\n            } else {\n                un = this.onReadyWindow((w: WindowWrapper) => {\n                    if (w.API.id !== id) {\n                        return;\n                    }\n                    clearTimeout(timeout);\n                    un();\n                    resolve(w);\n                });\n            }\n        });\n    }\n\n    public onReadyWindow(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-ready\", callback);\n    }\n\n    public onAdded(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-added\", callback);\n    }\n\n    public onRemoved(callback: (win: WindowWrapper) => void): UnsubscribeFunction {\n        return this._registry.add(\"on-removed\", callback);\n    }\n\n    // newly created windows now need to hear both \"ready\" and \"urlChanged\" events in otder to be markedReadyToShow\n    public markReadyToShow(windowId: string) {\n        if (this._pendingWindows[windowId]) {\n            this._windows[windowId] = this._pendingWindows[windowId];\n            delete this._pendingWindows[windowId];\n            delete this._pendingWindowsStates[windowId];\n        }\n\n        this._registry.execute(\"on-ready\", this._windows[windowId]);\n    }\n}\n\nexport default new WindowStore();\n","import { Glue42 } from \"../glue\";\n\nexport default class Utils {\n    public static getGDMajorVersion() {\n        if (typeof window === \"undefined\") {\n            return -1;\n        }\n        if (!window.glueDesktop) {\n            return -1;\n        }\n        if (!window.glueDesktop.version) {\n            return -1;\n        }\n        const ver = Number(window.glueDesktop.version.substr(0, 1));\n        return isNaN(ver) ? -1 : ver;\n    }\n\n    public static callbackifyPromise<T>(\n        action: () => Promise<T>,\n        successCallback?: (args?: T) => void,\n        errorCallback?: (errorMessage: string) => void): Promise<T> {\n\n        const fail = (error: any) => {\n            let msg = error;\n            if (error instanceof Error) {\n                msg = error.message;\n            }\n            if (typeof errorCallback === \"function\") {\n                errorCallback(msg);\n                return;\n            }\n\n            return Promise.reject(msg);\n        };\n\n        try {\n            return action()\n                .then((result) => {\n                    if (typeof successCallback === \"function\") {\n                        successCallback(result);\n                    }\n                    return result;\n                })\n                .catch((error) => {\n                    return fail(error);\n                });\n        } catch (err) {\n            return fail(err);\n        }\n    }\n\n    public static getMonitor(bounds: Glue42.Windows.Bounds, displays?: Glue42.Screen[]): Glue42.Screen {\n        const monitorsSortedByOverlap = displays.map((m) => {\n            const { left, top, workingAreaWidth: width, workingAreaHeight: height } = m;\n            const overlap = this.calculateTotalOverlap({ left, top, width, height }, bounds);\n            return {\n                monitor: m,\n                totalOverlap: overlap\n            };\n        }).sort((a, b) => b.totalOverlap - a.totalOverlap);\n\n        return monitorsSortedByOverlap[0].monitor;\n    }\n\n    public static getDisplayCenterOfScreen(a: Partial<Glue42.Windows.Bounds>, currentDisplay: Glue42.Displays.Display, primaryDisplay: Glue42.Displays.Display) {\n        const physicalWidth = a.width / currentDisplay.scaleFactor;\n        const physicalHeight = a.height / currentDisplay.scaleFactor;\n        const physicalDisplayLeft = currentDisplay.workArea.left / primaryDisplay.scaleFactor;\n        const physicalDisplayTop = currentDisplay.workArea.top / primaryDisplay.scaleFactor;\n        const physicalDisplayWidth = currentDisplay.workArea.width / currentDisplay.scaleFactor;\n        const physicalDisplayHeight = currentDisplay.workArea.height / currentDisplay.scaleFactor;\n\n        const physicalHOffset = Math.max((physicalDisplayWidth - physicalWidth) / 2, 0);\n        const physicalVOffset = Math.max((physicalDisplayHeight - physicalHeight) / 2, 0);\n        const centeredPhysicalLeft = Math.floor(physicalDisplayLeft + physicalHOffset);\n        const centeredPhysicalTop = Math.floor(physicalDisplayTop + physicalVOffset);\n        const left = centeredPhysicalLeft * primaryDisplay.scaleFactor;\n        const top = centeredPhysicalTop * primaryDisplay.scaleFactor;\n\n        return {\n            left,\n            top,\n            width: a.width,\n            height: a.height\n        };\n    }\n\n    public static isNode() {\n        if (typeof Utils._isNode !== \"undefined\") {\n            return Utils._isNode;\n        }\n\n        if (typeof window !== \"undefined\") {\n            Utils._isNode = false;\n            return false;\n        }\n\n        // Only Node.JS has a process variable that is of [[Class]] process\n        try {\n            Utils._isNode = Object.prototype.toString.call(global.process) === \"[object process]\";\n        } catch (e) {\n            Utils._isNode = false;\n        }\n        return Utils._isNode;\n    }\n\n    private static _isNode?: boolean;\n\n    private static calculateTotalOverlap(r1: Glue42.Windows.Bounds, r2: Glue42.Windows.Bounds) {\n        const r1x = r1.left;\n        const r1y = r1.top;\n        const r1xMax = r1x + r1.width;\n        const r1yMax = r1y + r1.height;\n\n        const r2x = r2.left;\n        const r2y = r2.top;\n        const r2xMax = r2x + r2.width;\n        const r2yMax = r2y + r2.height;\n\n        const xOverlap = Math.max(0, Math.min(r1xMax, r2xMax) - Math.max(r1x, r2x));\n        const yOverlap = Math.max(0, Math.min(r1yMax, r2yMax) - Math.max(r1y, r2y));\n\n        return xOverlap * yOverlap;\n    }\n}\n","import { Glue42 } from \"../../../glue\";\nimport jumpListManager from \"./manager\";\n\nexport default class JumpListActions implements Glue42.Windows.JumpListActionsAPI {\n\n    private _categoryTitle: string;\n\n    constructor(private windowId: string, configuration: Glue42.Windows.JumpListCategorySettings) {\n        this._categoryTitle = configuration.title;\n    }\n\n    public list(): Promise<Glue42.Windows.JumpListActionSettings[]> {\n        return jumpListManager.getActions(this.windowId, this._categoryTitle);\n    }\n\n    public create(actions: Glue42.Windows.JumpListActionSettings[]): Promise<void> {\n        return jumpListManager.createActions(this.windowId, this._categoryTitle, actions);\n    }\n\n    public remove(actions: Glue42.Windows.JumpListActionSettings[]): Promise<void> {\n        return jumpListManager.removeActions(this.windowId, this._categoryTitle, actions);\n    }\n}\n","import { Glue42 } from \"../../../glue\";\nimport JumpListActions from \"./actions\";\nimport jumpListManager from \"./manager\";\n\nexport default class JumpListCategories implements Glue42.Windows.JumpListCategoriesAPI {\n\n    constructor(private windowId: string) {\n    }\n\n    public list(): Promise<Glue42.Windows.JumpListCategory[]> {\n        return this.getCategories();\n    }\n\n    public create(title: string, actions: Glue42.Windows.JumpListActionSettings[]): Promise<void> {\n        return jumpListManager.createCategory(this.windowId, title, actions);\n    }\n\n    public remove(title: string): Promise<void> {\n        return jumpListManager.removeCategory(this.windowId, title);\n    }\n\n    public async find(title: string): Promise<Glue42.Windows.JumpListCategory> {\n        const categories = await this.getCategories();\n        return categories.find((cat) => cat.title === title);\n    }\n\n    private async getCategories(): Promise<Glue42.Windows.JumpListCategory[]> {\n        const result: Glue42.Windows.JumpListCategory[] = [];\n\n        const configuration = await jumpListManager.getJumpListSettings(this.windowId);\n        configuration.categories.forEach((category) => {\n            result.push({\n                title: category.title,\n                actions: new JumpListActions(this.windowId, category)\n            });\n        });\n        return result;\n    }\n}\n","import { Glue42 } from \"../../../glue\";\nimport JumpListCategories from \"./categories\";\nimport jumpListManager from \"./manager\";\n\nexport default class JumpList implements Glue42.Windows.JumpList {\n\n    private _categories: Glue42.Windows.JumpListCategoriesAPI;\n\n    constructor(private windowId: string) {\n        this._categories = new JumpListCategories(windowId);\n    }\n\n    get categories(): Glue42.Windows.JumpListCategoriesAPI {\n        return this._categories;\n    }\n\n    public async isEnabled(): Promise<boolean> {\n        const configuration = await jumpListManager.getJumpListSettings(this.windowId);\n        return configuration.enabled;\n    }\n\n    public setEnabled(enabled: boolean): Promise<void> {\n        return jumpListManager.setEnabled(this.windowId, enabled);\n    }\n}\n","import CallbackFactory, { Callback, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../glue\";\nimport {\n    Executor,\n    FrameButton,\n    Neighbours,\n    WindowConstructorOptions,\n    WindowEvents,\n    WindowWrapper,\n    FlashOptions,\n    DetachTabOptions,\n    FlashTabOptions,\n} from \"./types\";\nimport * as util from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nimport { default as windowStore } from \"./store\";\nimport GDWindow = Glue42.Windows.GDWindow;\nimport { CompositionChangedData } from \"./environment/gd/types\";\nimport JumpList from \"./jumpList/main\";\n\nexport default (id: string, options: WindowConstructorOptions, executor: Executor, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, channelsAPIGetter: () => Glue42.Channels, agm: Glue42.AGM.API): WindowWrapper => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger.subLogger(`window ${id}`);\n    const getChannels = () => {\n        const channels = channelsAPIGetter();\n        if (!channels) {\n            throw new Error(`To use this method you need to enable channels API - set the channels property to true when initializing the Glue42 library`);\n        }\n        return channels;\n    };\n\n    const _id = id;\n    const _name: string = options.name;\n    const _mode: Glue42.Windows.WindowMode = options.mode;\n    let _bounds: Glue42.Windows.Bounds = options.bounds;\n    let _url: string = options.url;\n    let _title: string = options.title;\n    let _context: any = options.context ?? {};\n    let _frameColor: string = options.frameColor;\n    let _focus: boolean = options.focus;\n    let _neighbours: Neighbours = options.neighbours ?? {};\n    let _groupId: string = options.groupId;\n    let _isGroupHeaderVisible: boolean = options.isGroupHeaderVisible;\n    let _isTabHeaderVisible: boolean = options.isTabHeaderVisible;\n    let _isTabSelected: boolean = options.isTabSelected ?? false;\n    let _settings: Glue42.Windows.WindowSettings = options.settings;\n    const _applicationName = options.applicationName;\n\n    // is Window visible\n    let _isVisible: boolean = options.isVisible;\n\n    // is Window sticky enable\n    let _isSticky: boolean = options.isSticky;\n\n    // Window state Collapsed | Expanded\n    let _isCollapsed: boolean = options.isCollapsed;\n\n    // Window state normal | maximized | minimized\n    let _windowState: Glue42.Windows.WindowState = options.state;\n\n    // tabGroupId only for window with 'Tab' mode\n    let _tabGroupId: string = options.tabGroupId;\n    let _tabIndex: number = options.tabIndex;\n\n    let _frameId: string = options.frameId;\n    // window is locked or unlocked;\n    let _isLocked: boolean = options.isLocked;\n\n    let _group: Glue42.Windows.Group;\n\n    // Holding all frame buttons\n    let _frameButtons: Glue42.Windows.ButtonInfo[] = options.frameButtons ?? [];\n\n    // Holding the current zoom factor\n    let _zoomFactor = options.zoomFactor;\n\n    let _placementSettings: Glue42.Windows.PlacementSettings = options.placementSettings;\n\n    const _jumpList: JumpList = new JumpList(id);\n\n    // #region \"AGM methods\"\n    function close(closeOptions?: Glue42.Windows.CloseOptions): Promise<boolean>;\n    function close(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow>;\n    function close(cbOrOptions?: Glue42.Windows.CloseOptions | ((window: Glue42.Windows.GDWindow) => void), error?: (error: string) => void): Promise<Glue42.Windows.GDWindow | boolean> {\n        if (typeof cbOrOptions === \"undefined\" || typeof cbOrOptions === \"function\") {\n            return utils.callbackifyPromise(() => {\n                if (!id) {\n                    throw new Error(\"The window is already closed.\");\n                }\n                return executor.close(resultWindow);\n            }, cbOrOptions, error);\n        } else {\n            return executor.close(resultWindow, cbOrOptions);\n        }\n    }\n\n    function navigate(newUrl: string, loadURLOptions: Glue42.Windows.LoadURLOptions): Promise<Glue42.Windows.GDWindow>;\n    function navigate(newUrl: string, success?: (window: GDWindow) => void, error?: (error: string) => void): Promise<GDWindow>;\n    function navigate(newUrl: string, optionsOrCallback: Glue42.Windows.LoadURLOptions | ((window: Glue42.Windows.GDWindow) => void), error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        if (typeof optionsOrCallback === \"function\") {\n            return utils.callbackifyPromise(() => {\n                if (util.isNullOrWhiteSpace(newUrl)) {\n                    throw new Error(\"The new URL must be a non-empty string.\");\n                }\n                return executor.navigate(resultWindow, newUrl);\n            }, optionsOrCallback, error);\n        }\n        if (util.isNullOrWhiteSpace(newUrl)) {\n            throw new Error(\"The new URL must be a non-empty string.\");\n        }\n        return executor.navigate(resultWindow, newUrl, optionsOrCallback);\n    }\n\n    function setStyle(style: Glue42.Windows.WindowStyle, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!style || Object.keys(style).length === 0 || Object.keys(style).every((key) => !key)) {\n                throw new Error(\"Invalid style arguments: \" + JSON.stringify(style));\n            }\n            if (style && style.focus !== undefined) {\n                if (typeof style.focus !== \"boolean\") {\n                    throw new Error(\"Focus must be a boolean value. Currently, only `focus: true` is supported.\");\n                } else if (style.focus === false) {\n                    _logger.warn(\"`focus: false` is not supported!\");\n                }\n            }\n            if (style && style.hidden !== undefined && typeof style.hidden !== \"boolean\") {\n                throw new Error(\"The `hidden` property must hold a boolean value.\");\n            }\n            for (const prop of [\"minHeight\", \"maxHeight\", \"minWidth\", \"maxWidth\"]) {\n                const styleAsAny = style as any;\n                const value = styleAsAny[prop];\n                if (prop in style) {\n                    if (util.isUndefinedOrNull(value)) {\n                        delete styleAsAny[prop];\n                        continue;\n                    }\n                    if (!util.isNumber(styleAsAny[prop])) {\n                        throw new Error(`\"${prop}\" must be a number`);\n                    }\n                }\n            }\n            return executor.setStyle(resultWindow, style);\n        }, success, error);\n    }\n\n    function resetButtons(buttons: Glue42.Windows.WindowButtons, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(\n            () => executor.resetButtons(resultWindow, buttons),\n            success,\n            error\n        );\n    }\n\n    function getButtons(): Promise<Glue42.Windows.WindowButtons> {\n        return executor.getButtons(resultWindow);\n    }\n\n    function setOnTop(onTop: boolean | \"always\", success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof onTop === \"string\") {\n                if (onTop !== \"always\") {\n                    throw new Error(\"`onTop` must hold a `always` value.\");\n                }\n            } else if (typeof onTop !== \"boolean\") {\n                throw new Error(\"`onTop` must hold a boolean or `always` value.\");\n            }\n            return executor.setOnTop(resultWindow, onTop);\n        }, success, error);\n    }\n\n    function setSizeConstraints(constraints: Glue42.Windows.SizeConstraints, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!constraints || Object.keys(constraints).every((value) => value === undefined)) {\n                throw new Error(\"The properties of `constraints` cannot be null or undefined.\");\n            }\n            return executor.setSizeConstraints(resultWindow, constraints);\n        }, success, error);\n    }\n\n    function getSizeConstraints(): Promise<Glue42.Windows.SizeConstraints> {\n        return executor.getSizeConstraints(resultWindow);\n    }\n\n    function setTitle(newTitle: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(newTitle)) {\n                throw new Error(\"`newTitle` must not be null or undefined.\");\n            }\n            if (newTitle === _title) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.setTitle(resultWindow, newTitle);\n        }, success, error);\n    }\n\n    function setSticky(isSticky: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof isSticky !== \"boolean\") {\n                throw new Error(\"`isSticky` must hold a boolean value.\");\n            }\n            return executor.setSticky(resultWindow, isSticky);\n        }, success, error);\n    }\n\n    function moveResize(bounds: Partial<Glue42.Windows.Bounds>, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(bounds)) {\n                throw new Error(\"The properties of `bounds` cannot be null or undefined.\");\n            }\n            return executor.moveResize(resultWindow, bounds);\n        }, success, error);\n    }\n\n    function addFrameButton(buttonInfo: Glue42.Windows.ButtonInfo, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof buttonInfo === \"undefined\" || Object.keys(buttonInfo).length === 0) {\n                throw new Error(\"Button info is not available.\");\n            }\n            if (util.isNullOrWhiteSpace(buttonInfo.buttonId)) {\n                throw new Error(\"`buttonId` must not be null or undefined.\");\n            }\n            if (util.isNullOrWhiteSpace(buttonInfo.imageBase64)) {\n                throw new Error(\"`imageBase64` must not be null or undefined.\");\n            }\n            return executor.addFrameButton(resultWindow, buttonInfo);\n        }, success, error);\n    }\n\n    function removeFrameButton(buttonId: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(buttonId)) {\n                throw new Error(\"`buttonId` must not be null or undefined.\");\n            }\n            return executor.removeFrameButton(resultWindow, buttonId);\n        }, success, error);\n    }\n\n    function activate(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_focus) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.activate(resultWindow);\n        }, success, error);\n    }\n\n    function focus(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_focus) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.focus(resultWindow);\n        }, success, error);\n    }\n\n    function maximizeRestore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.maximizeRestore(resultWindow);\n        }, success, error);\n    }\n\n    function maximize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"maximized\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.maximize(resultWindow);\n        }, success, error);\n    }\n\n    function restore(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"normal\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.restore(resultWindow);\n        }, success, error);\n    }\n\n    function minimize(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_windowState === \"minimized\") {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.minimize(resultWindow);\n        }, success, error);\n    }\n\n    function collapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (_isCollapsed) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.collapse(resultWindow);\n        }, success, error);\n    }\n\n    function expand(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (!_isCollapsed) {\n                return Promise.resolve(resultWindow);\n            }\n            return executor.expand(resultWindow);\n        }, success, error);\n    }\n\n    function toggleCollapse(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.toggleCollapse(resultWindow);\n        }, success, error);\n    }\n\n    function snap(target: string | Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow>;\n    function snap(target: string | Glue42.Windows.GDWindow, snappingOptions: Glue42.Windows.SnappingOptions, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow>;\n    function snap(target: string | Glue42.Windows.GDWindow, direction: Glue42.Windows.RelativeDirection | Glue42.Windows.SnappingOptions, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(target)) {\n                throw new Error(`A target window is not specified - ${typeof target === \"string\" ? target : JSON.stringify(target)}`);\n            }\n\n            if (typeof target === \"string\") {\n                const win = windowStore.get(target);\n                if (!win) {\n                    throw new Error(`Invalid \"target\" parameter or no such window. Invoked with: ${target}`);\n                }\n                target = win.API;\n            }\n            if (typeof direction === \"string\") {\n                direction = {\n                    direction,\n                    autoAlign: true\n                };\n            }\n            return executor.snap(resultWindow, target, direction);\n        }, success, error);\n    }\n\n    function attachTab(tab: Glue42.Windows.GDWindow | string, opt: number | Glue42.Windows.AttachOptions, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            const errorMessage = `Invalid \"tab\" parameter - must be an object with an \"id\" property or a string. Invoked for source window with ID:`;\n            if (util.isUndefinedOrNull(tab)) {\n                const errMsg = `${errorMessage} ${typeof tab === \"string\" ? tab : JSON.stringify(tab)}`;\n                throw new Error(errMsg);\n            }\n            // tab === sourceWindow\n            let sourceWindow;\n            if (typeof tab === \"string\") {\n                sourceWindow = windowStore.get(tab)?.API;\n                if (util.isUndefinedOrNull(sourceWindow)) {\n                    const errMsg = `${errorMessage} ${typeof sourceWindow === \"string\" ? sourceWindow : JSON.stringify(sourceWindow)}`;\n                    throw new Error(errMsg);\n                }\n            } else if (!util.isUndefinedOrNull(tab.id)) {\n                sourceWindow = tab;\n            } else {\n                throw new Error(errorMessage);\n            }\n            const attachOptions: Glue42.Windows.AttachOptions = {};\n            if (!util.isUndefinedOrNull(opt)) {\n                if (typeof opt === \"number\") {\n                    attachOptions.index = opt;\n                } else {\n                    attachOptions.selected = opt.selected;\n                    attachOptions.index = opt.index;\n                }\n            }\n\n            return executor.attachTab(resultWindow, sourceWindow, attachOptions);\n        }, success, error);\n    }\n\n    function detachTab(opt: Glue42.Windows.DetachOptions = {}, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            const argsForSend: DetachTabOptions = {};\n            function isDetachRelative(o: Glue42.Windows.DetachOptions) {\n                return o.relativeTo !== undefined;\n            }\n            if (isDetachRelative(opt)) {\n                if (typeof opt.relativeTo === \"string\") {\n                    argsForSend.relativeTo = opt.relativeTo;\n                } else if (!util.isUndefinedOrNull(opt.relativeTo.id)) {\n                    argsForSend.relativeTo = opt.relativeTo.id;\n                }\n                if (!util.isUndefinedOrNull(opt.relativeDirection)) {\n                    argsForSend.relativeDirection = opt.relativeDirection;\n                }\n                if (!util.isUndefinedOrNull(opt.width)) {\n                    argsForSend.width = opt.width;\n                }\n                if (!util.isUndefinedOrNull(opt.height)) {\n                    argsForSend.height = opt.height;\n                }\n            } else {\n                if (!util.isUndefinedOrNull(opt.bounds)) {\n                    argsForSend.bounds = opt.bounds;\n                }\n            }\n            if (!util.isUndefinedOrNull(opt.hideTabHeader)) {\n                argsForSend.hideTabHeader = opt.hideTabHeader;\n            }\n            return executor.detachTab(resultWindow, argsForSend);\n        }, success, error);\n    }\n\n    function setVisible(toBeVisible?: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.setVisible(resultWindow, toBeVisible);\n        }, success, error);\n    }\n\n    async function center(display?: Glue42.Displays.Display) {\n        if (display) {\n            validateCenterArguments(display);\n        }\n        return executor.center(resultWindow, display);\n    }\n\n    function validateCenterArguments(display?: Glue42.Displays.Display) {\n        if (typeof display !== \"object\") {\n            throw Error(\"display argument must be a valid display object\");\n        }\n        if (!display.workArea || !display.scaleFactor) {\n            throw Error(\"display argument is not a valid display object\");\n        }\n    }\n    function showLoader(loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        return executor.showLoader(resultWindow, loader);\n    }\n\n    function hideLoader(): Promise<Glue42.Windows.GDWindow> {\n        return executor.hideLoader(resultWindow);\n    }\n\n    function updateContext(context: any, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isUndefinedOrNull(context)) {\n                throw new Error(`\"context\" must not be null or undefined.`);\n            }\n\n            return executor.updateContext(resultWindow, context, false);\n        }, success, error);\n    }\n\n    function lock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.lock(resultWindow);\n        }, success, error);\n    }\n\n    function unlock(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            return executor.unlock(resultWindow);\n        }, success, error);\n    }\n\n    function getIcon(success?: (icon: string) => void, error?: (error: string) => void): Promise<string> {\n        return utils.callbackifyPromise(() => {\n            return executor.getIcon(resultWindow);\n        }, success, error);\n    }\n\n    function setIcon(base64Image: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(base64Image)) {\n                throw new Error(`\"base64Image\" must be a non-empty string.`);\n            }\n            return executor.setIcon(resultWindow, base64Image);\n        }, success, error);\n    }\n\n    function setFrameColor(frameColor: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(frameColor)) {\n                throw new Error(`\"frameColor\" must be a non-empty string`);\n            }\n            return executor.setFrameColor(resultWindow, frameColor);\n        }, success, error);\n    }\n\n    function setTabHeaderVisible(toBeTabHeaderVisible: boolean, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (typeof toBeTabHeaderVisible !== \"boolean\") {\n                throw new Error(`\"toBeTabHeaderVisible\" must hold a boolean value.`);\n            }\n            return executor.setTabHeaderVisible(resultWindow, toBeTabHeaderVisible);\n        }, success, error);\n    }\n\n    async function setTabTooltip(tooltip: string): Promise<Glue42.Windows.GDWindow> {\n        if (util.isNullOrWhiteSpace(tooltip)) {\n            throw new Error(`\"${tooltip}\" must not be null or undefined`);\n        }\n        return executor.setTabTooltip(resultWindow, tooltip);\n    }\n\n    async function getTabTooltip(): Promise<string> {\n        return executor.getTabTooltip(resultWindow);\n    }\n\n    function showPopup(config: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.showPopup(resultWindow, config);\n    }\n\n    function createFlydown(config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return executor.createFlydown(resultWindow.id, config);\n    }\n\n    function setModalState(isModal: boolean): Promise<void> {\n        return executor.setModalState(resultWindow.id, isModal || false);\n    }\n\n    function zoomIn(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomIn(resultWindow);\n        }, success, error);\n    }\n\n    function zoomOut(success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            return executor.zoomOut(resultWindow);\n        }, success, error);\n    }\n\n    function setZoomFactor(zoomFactor: number, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise<Glue42.Windows.GDWindow>(() => {\n            if (isNaN(zoomFactor)) {\n                throw new Error(`zoomFactor is not a number`);\n            }\n            return executor.setZoomFactor(resultWindow, zoomFactor);\n        }, success, error);\n    }\n\n    function showDevTools() {\n        return executor.showDevTools(resultWindow);\n    }\n\n    function capture(captureOptions: Glue42.Windows.CaptureOptions): Promise<string> {\n        return executor.capture(resultWindow, captureOptions);\n    }\n\n    function flash(suppliedOptions?: boolean, mode?: Glue42.Windows.FlashMode): Promise<Glue42.Windows.GDWindow> {\n        const flashOptions: FlashOptions = {\n            shouldFlash: true,\n            mode: \"auto\"\n        };\n\n        if (typeof suppliedOptions === \"boolean\") {\n            flashOptions.shouldFlash = suppliedOptions;\n        }\n\n        if (typeof mode !== \"undefined\") {\n            flashOptions.mode = mode;\n        }\n\n        return executor.flash(resultWindow, flashOptions);\n    }\n\n    function flashTab(suppliedOptions?: boolean): Promise<Glue42.Windows.GDWindow> {\n        const flashOptions: FlashTabOptions = {\n            shouldFlash: true,\n        };\n\n        if (typeof suppliedOptions === \"boolean\") {\n            flashOptions.shouldFlash = suppliedOptions;\n        }\n\n        return executor.flashTab(resultWindow, flashOptions);\n    }\n\n    function print(printOptions: Glue42.Windows.PrintOptions): Promise<Glue42.Windows.GDWindow> {\n        return executor.print(resultWindow, printOptions);\n    }\n\n    function printToPDF(printToPDFOptions: Glue42.Windows.PrintToPDFOptions): Promise<string> {\n        return executor.printToPDF(resultWindow, printToPDFOptions);\n    }\n\n    function ungroup(ungroupOptions?: Glue42.Windows.UngroupOptions): Promise<Glue42.Windows.GDWindow> {\n        return new Promise((resolve, reject) => {\n            const unGroupChanged = onGroupChanged(\n                (win: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => {\n                    if (id === win.id) {\n                        unGroupChanged();\n                        resolve(resultWindow);\n                    }\n                });\n\n            executor.ungroup(resultWindow, ungroupOptions)\n                .catch((e: string) => {\n                    unGroupChanged();\n                    reject(e);\n                });\n        });\n    }\n\n    function place(placementSettings: Glue42.Windows.PlacementSettings): Promise<void> {\n        return executor.place(resultWindow, placementSettings);\n    }\n\n    function refresh(ignoreCache: boolean) {\n        return executor.refresh(resultWindow, ignoreCache);\n    }\n\n    function download(url: string, opts: Glue42.Windows.DownloadOptions) {\n        return executor.download(resultWindow, url, opts);\n    }\n\n    function configure(settings: Glue42.Windows.WindowConfiguration) {\n        return executor.configureWindow(resultWindow, settings);\n    }\n\n    function getConfiguration() {\n        return executor.getWindowConfiguration(resultWindow);\n    }\n\n    // #endregion \"AGM methods\"\n\n    // #region \"Events\"\n\n    function onTitleChanged(callback: (title: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        callback(resultWindow.title, resultWindow);\n        return onEventCore(\"onTitleChanged\", callback);\n    }\n\n    function onClose(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (id === undefined) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"onClose\", callback);\n    }\n\n    function onUrlChanged(callback: (url: string, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onUrlChanged\", callback);\n    }\n\n    function onFrameButtonAdded(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonAdded\", callback);\n    }\n\n    function onFrameButtonRemoved(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonRemoved\", callback);\n    }\n\n    function onFrameButtonClicked(callback: (btnInfo: Glue42.Windows.ButtonInfo, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"onFrameButtonClicked\", callback);\n    }\n\n    function onCollapsed(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (_isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"collapsed\", callback);\n    }\n\n    function onExpanded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback should be a function\");\n        }\n        if (!_isCollapsed) {\n            callback(resultWindow);\n        }\n        return _registry.add(\"expanded\", callback);\n    }\n\n    function onMaximized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"maximized\") {\n            return onEventCore(\"maximized\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"maximized\", callback);\n        }\n    }\n\n    function onMinimized(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"minimized\") {\n            return onEventCore(\"minimized\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"minimized\", callback);\n        }\n    }\n\n    function onNormal(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        if (_windowState === \"normal\") {\n            return onEventCore(\"normal\", callback, [resultWindow]);\n        } else {\n            return onEventCore(\"normal\", callback);\n        }\n    }\n\n    function onAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"attached\", callback);\n    }\n\n    function onDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"detached\", callback);\n    }\n\n    function onVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"visibility-changed\", callback);\n    }\n\n    function onContextUpdated(callback: (context: any, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"context-updated\", callback);\n    }\n\n    function onLockingChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"lock-changed\", callback);\n    }\n\n    function onBoundsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"bounds-changed\", callback);\n    }\n\n    function onFocusChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"focus-changed\", callback);\n    }\n\n    function onStickyChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"sticky-changed\", callback);\n    }\n\n    function onFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"frame-color-changed\", callback);\n    }\n\n    function onTabHeaderVisibilityChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"tab-header-visibility-changed\", callback);\n    }\n\n    function onWindowAttached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"window-attached\", callback);\n    }\n\n    function onWindowDetached(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"window-detached\", callback);\n    }\n\n    function onGroupChanged(callback: (window: Glue42.Windows.GDWindow, newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) => void): UnsubscribeFunction {\n        return onEventCore(\"group-changed\", callback);\n    }\n\n    function onTabSelectionChanged(callback: (selectedWindow: Glue42.Windows.GDWindow, previousWindow: Glue42.Windows.GDWindow, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"tab-selection-changed\", callback);\n    }\n\n    function onClosing(callback: (prevent: (options: Glue42.Windows.PreventClosingOptions) => void) => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        type GDHandler = (success: () => void, error: () => void, prevent: (options: Glue42.Windows.PreventClosingOptions) => void) => void;\n        const callbackWrap: GDHandler = (success: () => void, error: () => void, prevent: (options: Glue42.Windows.PreventClosingOptions) => void) => {\n            const promise = callback(prevent);\n            if (promise?.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onClosing(callbackWrap, resultWindow);\n    }\n\n    function onRefreshing(callback: (prevent: () => void) => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        type GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => void;\n        const callbackWrap: GDRefreshHandler = (success: () => void, error: () => void, prevent: () => void) => {\n            const promise = callback(prevent);\n            if (promise?.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onRefreshing(callbackWrap, resultWindow);\n    }\n\n    function onNavigating(callback: (args: { newUrl: string }) => Promise<void>): UnsubscribeFunction {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        type Handler = (success: () => void, error: () => void, prevent: () => void, args: { newUrl: string }) => void;\n        const callbackWrap: Handler = (success: () => void, error: () => void, prevent: () => void, args: { newUrl: string }) => {\n            const promise = callback(args);\n            if (promise?.then) {\n                promise.then(success).catch(error);\n            } else {\n                success();\n            }\n        };\n        return executor.onNavigating(callbackWrap, resultWindow);\n    }\n\n    function onZoomFactorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"zoom-factor-changed\", callback);\n    }\n\n    function onPlacementSettingsChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"placementSettingsChanged\", callback);\n    }\n\n    function onNeighboursChanged(callback: (neighbours: Glue42.Windows.Neighbours, window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return onEventCore(\"neighbours-changed\", callback);\n    }\n\n    function onEventCore(key: string, callback: Callback, replayArguments?: any[]) {\n        if (!util.isFunction(callback)) {\n            throw new Error(\"callback must be a function\");\n        }\n\n        return _registry.add(key, callback, replayArguments);\n    }\n\n    function goBack() {\n        return executor.goBack(resultWindow);\n    }\n\n    function goForward() {\n        return executor.goForward(resultWindow);\n    }\n\n    function startDrag(option: Glue42.Windows.StartDragOptions) {\n        return executor.startDrag(resultWindow, option);\n    }\n\n    function showDialog<T>(dialogOptions: Glue42.Windows.DialogOptions): Promise<T> {\n        if (dialogOptions?.timerDuration && isNaN(dialogOptions?.timerDuration)) {\n            throw new Error(\"timerDuration must be a number\");\n        }\n        if (dialogOptions?.showTimer && typeof dialogOptions?.showTimer !== \"boolean\") {\n            throw new Error(\"showTimer must be a boolean\");\n        }\n        return executor.showDialog(resultWindow, dialogOptions);\n    }\n\n    // #endregion \"Events\"\n\n    // #region \"Stream function\"\n\n    function handleUpdate(updated: WindowConstructorOptions) {\n        _url = updated.url;\n        _title = updated.title;\n        _context = updated.context || {};\n        _bounds = updated.bounds;\n        _frameColor = updated.frameColor;\n        _focus = updated.focus;\n        _neighbours = updated.neighbours || {};\n        _groupId = updated.groupId;\n        _isGroupHeaderVisible = updated.isGroupHeaderVisible;\n        _isTabHeaderVisible = updated.isTabHeaderVisible;\n        _isTabSelected = updated.isTabSelected;\n        _settings = updated.settings;\n        _isVisible = updated.isVisible;\n        _isSticky = updated.isSticky;\n        _isCollapsed = updated.isCollapsed;\n        _windowState = updated.state;\n        _tabGroupId = updated.tabGroupId;\n        _frameId = updated.frameId;\n        _isLocked = updated.isLocked;\n        // _frameButtons = updated.fra;\n        // _group: Glue42.Windows.Group;\n        _zoomFactor = updated.zoomFactor;\n        _placementSettings = updated.placementSettings;\n    }\n\n    function handleTitleChanged(newTitle: string): void {\n        _title = newTitle;\n        executor.finished\n            .finally(() => {\n                _registry.execute(\"onTitleChanged\", newTitle, resultWindow);\n            });\n    }\n\n    function handleUrlChanged(newUrl: string): void {\n        _url = newUrl;\n        _registry.execute(\"onUrlChanged\", newUrl, resultWindow);\n    }\n\n    function handleVisibilityChanged(isVisible: boolean) {\n        if (isVisible === _isVisible) {\n            return;\n        }\n        _isVisible = isVisible;\n        _registry.execute(\"visibility-changed\", resultWindow);\n    }\n\n    function handleWindowSettingsChanged(settings: Glue42.Windows.WindowSettings): void {\n        _settings = settings;\n        _registry.execute(\"settings-changed\", resultWindow);\n    }\n\n    function handleContextUpdated(context: any): void {\n        _context = context;\n        _registry.execute(\"context-updated\", _context, resultWindow);\n    }\n\n    function handleWindowClose(): void {\n        if (id === undefined) {\n            return;\n        }\n        _registry.execute(\"onClose\", resultWindow);\n        id = undefined;\n    }\n\n    function handleFrameButtonAdded(frameButton: FrameButton): void {\n        const buttonObj = [\"buttonId\", \"imageBase64\", \"order\", \"tooltip\"].reduce((memo: any, k) => {\n            memo[k] = frameButton[k];\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return memo;\n        }, {}) as Glue42.Windows.ButtonInfo;\n\n        const frameButtonsIds = _frameButtons.map((btn) => {\n            return btn.buttonId;\n        });\n\n        if (frameButtonsIds.indexOf(frameButton.buttonId) === -1) {\n            _frameButtons.push(buttonObj);\n        }\n\n        _registry.execute(\"onFrameButtonAdded\", buttonObj, resultWindow);\n    }\n\n    function handleFrameButtonRemoved(frameButtonId: string): void {\n        let button: Glue42.Windows.ButtonInfo;\n        _frameButtons = _frameButtons.reduce<Glue42.Windows.ButtonInfo[]>((memo, btn) => {\n            if (btn.buttonId === frameButtonId) {\n                button = btn;\n            } else {\n                memo.push(btn);\n            }\n            return memo;\n        }, []);\n\n        if (button !== undefined) {\n            _registry.execute(\"onFrameButtonRemoved\", button, resultWindow);\n        }\n    }\n\n    function handleFrameButtonClicked(frameButton: FrameButton): void {\n        const button = _frameButtons.filter((btn) => {\n            return btn.buttonId === frameButton.buttonId;\n        });\n\n        if (button.length > 0) {\n            _registry.execute(\"onFrameButtonClicked\", button[0], resultWindow);\n        }\n    }\n\n    async function handleWindowChangeState(state: string): Promise<void> {\n        if (state === \"collapsed\") {\n            _isCollapsed = true;\n        } else if (state === \"expanded\") {\n            _isCollapsed = false;\n        } else {\n            _windowState = state as Glue42.Windows.WindowState;\n        }\n        await executor.finished;\n        _registry.execute(state, resultWindow);\n    }\n\n    function handleFrameIsLockedChanged(isLocked: boolean): void {\n        _isLocked = isLocked;\n        _registry.execute(\"lock-changed\", resultWindow);\n    }\n\n    function handleBoundsChanged(bounds: Glue42.Windows.Bounds): void {\n        if (_bounds.top === bounds.top && _bounds.left === bounds.left && _bounds.width === bounds.width && _bounds.height === bounds.height) {\n            return;\n        }\n        _bounds = bounds;\n        _registry.execute(\"bounds-changed\", resultWindow);\n    }\n\n    function handleFocusChanged(isFocused: boolean): void {\n        _focus = isFocused;\n        _registry.execute(\"focus-changed\", resultWindow);\n    }\n\n    function handleIsStickyChanged(isSticky: boolean): void {\n        _isSticky = isSticky;\n        _registry.execute(\"sticky-changed\", isSticky, resultWindow);\n    }\n\n    function handleFrameColorChanged(frameColor: string): void {\n        _frameColor = frameColor;\n        _registry.execute(\"frame-color-changed\", resultWindow);\n    }\n\n    function handleFrameAttached(tabGroupId: string, frameId: string, isTabHeaderVisible: boolean): void {\n        _tabGroupId = tabGroupId;\n        _frameId = frameId;\n        _isTabHeaderVisible = isTabHeaderVisible;\n        _registry.execute(\"frame-attached\", resultWindow);\n    }\n\n    function handleCompositionChanged(state: CompositionChangedData): void {\n        _neighbours = state.neighbors || {};\n        _tabIndex = state.index;\n        _registry.execute(\"neighbours-changed\", _neighbours, resultWindow);\n    }\n\n    function handleGroupHeaderVisibilityChanged(isGroupHeaderVisible: boolean): void {\n        _isGroupHeaderVisible = isGroupHeaderVisible;\n    }\n\n    function handleTabHeaderVisibilityChanged(isTabHeaderVisible: boolean): void {\n        if (_isTabHeaderVisible !== isTabHeaderVisible) {\n            _isTabHeaderVisible = isTabHeaderVisible;\n            _registry.execute(\"tab-header-visibility-changed\", resultWindow);\n        }\n    }\n\n    async function handleFrameSelectionChanged(newWindow: string, prevWindow: string) {\n        let selectedWindow: Glue42.Windows.GDWindow;\n        if (newWindow === id) {\n            _isTabSelected = true;\n            selectedWindow = resultWindow;\n        } else {\n            _isTabSelected = false;\n            selectedWindow = windowStore.get(newWindow) ? windowStore.get(newWindow).API : undefined;\n        }\n        const previousWindow = windowStore.get(prevWindow) ? windowStore.get(prevWindow).API : undefined;\n        await executor.finished;\n        _registry.execute(\"tab-selection-changed\", selectedWindow, previousWindow, resultWindow);\n    }\n\n    async function handleAttached(newTabGroupId: string, newFrameId: string, tabHeaderVisible: boolean, isLocked: boolean, winsToBeNotified: WindowWrapper[]): Promise<void> {\n        _tabGroupId = newTabGroupId;\n        _isTabHeaderVisible = tabHeaderVisible;\n        _frameId = newFrameId;\n        if (typeof isLocked !== \"undefined\") {\n            _isLocked = isLocked;\n        }\n        await executor.finished;\n        winsToBeNotified.forEach((w) => {\n            w.Events.handleWindowAttached(resultWindow);\n        });\n        _registry.execute(\"attached\", resultWindow);\n    }\n\n    function handleWindowAttached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-attached\", win);\n    }\n\n    async function handleDetached(isLocked: boolean, winsToBeNotified: WindowWrapper[]): Promise<void> {\n        _tabGroupId = undefined;\n        _isTabSelected = false;\n        if (typeof isLocked !== \"undefined\") {\n            _isLocked = isLocked;\n        }\n        await executor.finished;\n        winsToBeNotified.forEach((w) => {\n            w.Events.handleWindowDetached(resultWindow);\n        });\n        _registry.execute(\"detached\", resultWindow);\n    }\n\n    function handleWindowDetached(win: Glue42.Windows.GDWindow): void {\n        _registry.execute(\"window-detached\", win);\n    }\n\n    function handleZoomFactorChanged(zoomFactor: number): void {\n        _zoomFactor = zoomFactor;\n        _registry.execute(\"zoom-factor-changed\", resultWindow);\n    }\n\n    function handlePlacementSettingsChanged(placementSettings: Glue42.Windows.PlacementSettings): void {\n        let promise: Promise<Glue42.Displays.Display>;\n        const copy = placementSettings as any;\n        if (!copy.display) {\n            promise = Promise.resolve(undefined);\n        } else {\n            const displayAPI = displayAPIGetter();\n            if (!displayAPI) {\n                // display API is disabled\n                promise = Promise.resolve(undefined);\n            } else {\n                const index = copy.display - 1;\n                promise = new Promise((resolve, reject) => {\n                    displayAPI.all().then((displays) => {\n                        const display = displays.find((d) => d.index === index);\n                        resolve(display);\n                    }).catch(reject);\n                });\n            }\n        }\n\n        void promise.then((d) => {\n            copy.display = d;\n            _placementSettings = copy;\n            _registry.execute(\"placementSettingsChanged\", resultWindow);\n        });\n    }\n\n    // #endregion \"Stream function\"\n\n    // #region \"Group Events\"\n    function handleGroupChanged(newGroup: Glue42.Windows.Group, oldGroup: Glue42.Windows.Group) {\n        _group = newGroup;\n        _groupId = newGroup?.id;\n\n        if (!util.isUndefinedOrNull(newGroup) && !util.isUndefinedOrNull(oldGroup)) {\n            _registry.execute(\"group-changed\", resultWindow, newGroup, oldGroup);\n        }\n    }\n\n    // #region \"Internal function\"\n\n    function getAllTabs(): Glue42.Windows.GDWindow[] {\n        const allWindows = windowStore.list;\n        if (_mode.toLowerCase() !== \"tab\") {\n            return [];\n        }\n        const tabs = Object.keys(allWindows).reduce<GDWindow[]>((memo, win) => {\n            const window: WindowWrapper = allWindows[win];\n            if (window\n                && window.API.tabGroupId\n                && typeof window.API.tabGroupId !== \"undefined\"\n                && typeof resultWindow.tabGroupId !== \"undefined\"\n                && window.API.tabGroupId === resultWindow.tabGroupId) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n        return tabs.sort((w1, w2) => {\n            if (w1.tabIndex !== w2.tabIndex) {\n                if (w1.tabIndex === -1) {\n                    return Number.MAX_SAFE_INTEGER;\n                }\n                if (w2.tabIndex === -1) {\n                    return Number.MIN_SAFE_INTEGER;\n                }\n            }\n            return w1.tabIndex - w2.tabIndex;\n        });\n    }\n\n    function mapWindowIdsToWindowObjects(windowIdArr: string[]): Glue42.Windows.GDWindow[] {\n        return windowIdArr.reduce<Glue42.Windows.GDWindow[]>((memo, winId) => {\n            const window = windowStore.get(winId);\n            if (window) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n    }\n\n    function getNeighboursByDirection(direction: string): Glue42.Windows.GDWindow[] {\n        const windowIds = _neighbours[direction];\n        if (typeof windowIds !== \"undefined\") {\n            return mapWindowIdsToWindowObjects(windowIds);\n        }\n    }\n\n    function getApplicationName(): string {\n        if (_applicationName) {\n            return _applicationName;\n        }\n        if (_context._APPLICATION_NAME) {\n            return _context._APPLICATION_NAME as string;\n        }\n        if (_context && _context._t42 && _context._t42.application) {\n            return _context._t42.application as string;\n        }\n        const info = getWindowInfo();\n        if (info && info.applicationName) {\n            return info.applicationName;\n        }\n\n        // last try (NodeJS apps)\n        const appManager = appManagerGetter();\n        if (appManager) {\n            const instance = appManager.instances().find((i) => id === i.id);\n            if (instance) {\n                return instance.application?.name;\n            }\n        }\n\n        return undefined;\n    }\n\n    function getWindowInfo() {\n        if (typeof window !== \"undefined\" && window.glue42gd && window.glue42gd.getWindowInfo) {\n            const info = window.glue42gd.getWindowInfo(id);\n            if (!info) {\n                return undefined;\n            } else {\n                return info;\n            }\n        }\n    }\n\n    // #endregion \"Internal function\"\n\n    // #region \"API\"\n\n    const resultWindow = {\n        get id() {\n            return _id;\n        },\n        get name() {\n            return _name;\n        },\n        get application() {\n            const appManager = appManagerGetter();\n            const appName = getApplicationName();\n            if (appName && appManager) {\n                return appManager.application(appName);\n            }\n        },\n        get hostInstance() {\n            return executor.hostInstance;\n        },\n        get agmInstance() {\n            const instance = agm.servers().find((s) => s.windowId === this.id);\n            if (instance) {\n                return instance;\n            } else {\n                const appName = getApplicationName();\n                if (appName) {\n                    return { application: appName };\n                }\n            }\n        },\n        get url() {\n            return _url;\n        },\n        get title() {\n            return _title;\n        },\n        get windowStyleAttributes() {\n            return _settings;\n        },\n        get settings() {\n            return _settings;\n        },\n        get tabGroupId() {\n            return _mode.toLowerCase() === \"tab\" ? _tabGroupId : undefined;\n        },\n        get tabIndex() {\n            return _mode.toLowerCase() === \"tab\" ? _tabIndex : undefined;\n        },\n        get frameId() {\n            return _frameId;\n        },\n        get frameButtons() {\n            return _frameButtons.sort((b1, b2) => b1.order - b2.order);\n        },\n        get mode() {\n            return _mode;\n        },\n        get state() {\n            return _windowState;\n        },\n        get isCollapsed() {\n            return _isCollapsed;\n        },\n        get isVisible() {\n            return _isVisible;\n        },\n        get isLocked() {\n            return _isLocked;\n        },\n        get context() {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return _context;\n        },\n        get bounds() {\n            return _bounds;\n        },\n        get minHeight() {\n            return _settings.minHeight;\n        },\n        get maxHeight() {\n            return _settings.maxHeight;\n        },\n        get minWidth() {\n            return _settings.minWidth;\n        },\n        get maxWidth() {\n            return _settings.maxWidth;\n        },\n        get isFocused() {\n            return _focus;\n        },\n        get frameColor() {\n            return _frameColor;\n        },\n        get opened() {\n            return resultWindow.id !== undefined;\n        },\n        get group() {\n            return _group;\n        },\n        get groupId() {\n            return _groupId;\n        },\n        get isSticky() {\n            return _isSticky;\n        },\n        get topNeighbours() {\n            return getNeighboursByDirection(\"top\");\n        },\n        get leftNeighbours() {\n            return getNeighboursByDirection(\"left\");\n        },\n        get rightNeighbours() {\n            return getNeighboursByDirection(\"right\");\n        },\n        get bottomNeighbours() {\n            return getNeighboursByDirection(\"bottom\");\n        },\n        get isGroupHeaderVisible() {\n            return _isGroupHeaderVisible;\n        },\n        get activityId() {\n            if (_context._t42) {\n                return _context._t42.activityId as string;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityId;\n        },\n        get activityWindowId(): string {\n            if (_context._t42) {\n                return _context._t42.activityWindowId as string;\n            }\n            const info = getWindowInfo();\n            if (!info) {\n                return undefined;\n            }\n            return info.activityWindowId;\n        },\n        get windowType() {\n            return options.windowType || \"electron\";\n        },\n        get zoomFactor() {\n            return _zoomFactor;\n        },\n        get screen() {\n            if (typeof window !== \"undefined\" && window.glue42gd) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                return utils.getMonitor(resultWindow.bounds, (window.glue42gd as any).monitors);\n            }\n            return undefined;\n        },\n        get placementSettings(): Glue42.Windows.PlacementSettings {\n            return Object.assign({}, _placementSettings);\n        },\n        get jumpList(): JumpList {\n            return _jumpList;\n        },\n        maximize,\n        restore,\n        minimize,\n        maximizeRestore,\n        collapse,\n        expand,\n        toggleCollapse,\n        focus,\n        activate,\n        moveResize,\n        setTitle,\n        setStyle,\n        setOnTop,\n        resetButtons,\n        getButtons,\n        setSizeConstraints,\n        getSizeConstraints,\n        navigate,\n        addFrameButton,\n        removeFrameButton,\n        setVisible,\n        show: () => setVisible(true),\n        hide: () => setVisible(false),\n        center,\n        close,\n        snap,\n        showLoader,\n        hideLoader,\n        updateContext,\n        lock,\n        unlock,\n        getIcon,\n        setIcon,\n        setFrameColor,\n        setTabTooltip,\n        getTabTooltip,\n        attachTab,\n        detachTab,\n        setTabHeaderVisible,\n        showPopup,\n        createFlydown,\n        setModalState,\n        setZoomFactor,\n        zoomIn,\n        zoomOut,\n        showDevTools,\n        capture,\n        flash,\n        flashTab,\n        setSticky,\n        print,\n        printToPDF,\n        place,\n        ungroup,\n        refresh,\n        goBack,\n        goForward,\n        download,\n        configure,\n        getConfiguration,\n        getChannel: async () => {\n            const wins = await getChannels().getWindowsWithChannels({ windowIds: [_id] });\n            return wins[0]?.channel;\n        },\n        startDrag,\n        showDialog,\n\n        onClose,\n        onUrlChanged,\n        onTitleChanged,\n        onFrameButtonAdded,\n        onFrameButtonRemoved,\n        onFrameButtonClicked,\n        onCollapsed,\n        onExpanded,\n        onMinimized,\n        onMaximized,\n        onNormal,\n        onAttached,\n        onDetached,\n        onVisibilityChanged,\n        onContextUpdated,\n        onLockingChanged,\n        onBoundsChanged,\n        onFrameColorChanged,\n        onFocusChanged,\n        onStickyChanged,\n        onGroupChanged,\n        onWindowAttached,\n        onWindowDetached,\n        onTabSelectionChanged,\n        onTabHeaderVisibilityChanged,\n        onClosing,\n        onRefreshing,\n        onZoomFactorChanged,\n        onPlacementSettingsChanged,\n        onNeighboursChanged,\n        onNavigating,\n\n        get tabs() {\n            return getAllTabs();\n        },\n\n        get isTabHeaderVisible() {\n            return _isTabHeaderVisible;\n        },\n\n        get isTabSelected() {\n            return _isTabSelected;\n        },\n\n        // @glue42/web compatibility layer\n        getURL() {\n            return Promise.resolve(_url);\n        },\n\n        getTitle() {\n            return Promise.resolve(_title);\n        },\n\n        getBounds(): Promise<Glue42.Windows.Bounds> {\n            return Promise.resolve(_bounds);\n        },\n\n        getContext(): Promise<any> {\n            return Promise.resolve(_context);\n        },\n\n        setContext(context: any): Promise<GDWindow> {\n            if (util.isUndefinedOrNull(context)) {\n                throw new Error(`\"context\" must not be null or undefined, set to empty object if you want to clear it out.`);\n            }\n\n            return executor.updateContext(resultWindow, context, true);\n        },\n\n        getDisplay(): Promise<Glue42.Displays.Display> {\n            const displayAPI = displayAPIGetter();\n            return displayAPI.getByWindowId(id);\n        },\n\n        resizeTo(width?: number, height?: number): Promise<GDWindow> {\n            return moveResize({ width, height });\n        },\n\n        moveTo(top?: number, left?: number): Promise<GDWindow> {\n            return moveResize({ top, left });\n        },\n\n        async getParentWindow() {\n            const myParentId = (_settings as any).parentInstanceId;\n            if (!myParentId) {\n                return undefined;\n            }\n            return windowStore.list[myParentId]?.API;\n        },\n\n        async getChildWindows() {\n            return Object.keys(windowStore.list)\n                .map((key) => windowStore.list[key].API)\n                .filter((w) => {\n                    const parentId = (w.settings as any).parentInstanceId;\n                    return parentId === id;\n                });\n        },\n\n        joinChannel: (name: string) => {\n            return getChannels().join(name, id);\n        },\n\n        leaveChannel: () => {\n            return getChannels().leave(id);\n        }\n    };\n\n    // #endregion \"API\"\n\n    // #endregion \"Group Events\"\n\n    const events: WindowEvents = {\n        handleUpdate,\n        handleWindowClose,\n        handleWindowChangeState,\n        handleTitleChanged,\n        handleVisibilityChanged,\n        handleUrlChanged,\n        handleWindowSettingsChanged,\n        handleContextUpdated,\n        handleFrameIsLockedChanged,\n        handleBoundsChanged,\n        handleFocusChanged,\n        handleFrameButtonAdded,\n        handleFrameButtonRemoved,\n        handleFrameButtonClicked,\n        handleFrameColorChanged,\n        handleFrameAttached,\n        handleFrameSelectionChanged,\n        handleCompositionChanged,\n        handleGroupHeaderVisibilityChanged,\n        handleTabHeaderVisibilityChanged,\n        handleGroupChanged,\n        handleAttached,\n        handleDetached,\n        handleWindowAttached,\n        handleWindowDetached,\n        handleZoomFactorChanged,\n        handleIsStickyChanged,\n        handlePlacementSettingsChanged\n    };\n\n    return {\n        API: resultWindow,\n        Events: events\n    };\n};\n","import { default as windowStore } from \"../store\";\nimport { WindowWrapper } from \"../types\";\n\nexport function getWindowsByTabGroupId(windowId: string, tabGroupId: string): WindowWrapper[] {\n    const windows = windowStore.list;\n    return Object.keys(windows).reduce<WindowWrapper[]>((memo, id) => {\n        const win = windows[id];\n        if (win.API.tabGroupId === tabGroupId && win.API.id !== windowId) {\n            memo.push(win);\n        }\n        return memo;\n    }, []);\n}\n\nexport function isEmpty(object: any): boolean {\n    if (!object || Object.keys(object).every((value) => object[value] === undefined)) {\n        return true;\n    }\n    return false;\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { ConfigurationData, DetachTabOptions, Executor, FlashOptions, FlashTabOptions, JumpListSettingsInternal, JumpListUpdateSettings } from \"../../types\";\nimport { ShowFlydownData, ReformatedFlydownOptions, ReformatedFlydownZone, ReformatedPopupOptions, DialogResult } from \"./types\";\nimport { CallbackRegistry, default as CallbackFactory, UnsubscribeFunction } from \"callback-registry\";\nimport shortid from \"shortid\";\nimport windowStore from \"../../store\";\nimport { isNullOrWhiteSpace, isUndefinedOrNull } from \"../../../activity/helpers/util\";\nimport { isEmpty } from \"../helpers\";\n\nexport class GDExecutor implements Executor {\n\n    private readonly GroupMethodName = \"T42.Group.Execute\";\n    private readonly WndMethodName = \"T42.Wnd.Execute\";\n\n    private agm: Glue42Core.Interop.API;\n    private agmTarget: Glue42.Interop.InstanceTarget;\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _finished: Promise<void> = Promise.resolve();\n    private _configuration: ConfigurationData;\n    private unsubCallbacks: { [key: string]: ((success: () => void, error: () => void, prevent?: (args?: any) => void, args?: { newUrl: string }) => void)[] } = {};\n\n    public get hostInstance() {\n        return this.agmTarget as Glue42Core.Interop.Instance;\n    }\n\n    public get finished() {\n        return this._finished;\n    }\n\n    public init(agm: Glue42Core.AGM.API, instance: Glue42Core.AGM.Instance, config?: ConfigurationData) {\n        this.agm = agm;\n        this.agmTarget = instance;\n        this._configuration = config;\n        this._registry.add(\"event\", (data: { windowId: string, type: string }) => {\n            if (data.type === \"Closed\") {\n                const keys = Object.keys(this.unsubCallbacks);\n                keys.forEach((key) => {\n                    const isSameWindow = key.startsWith(data.windowId);\n                    if (isSameWindow) {\n                        delete this.unsubCallbacks[key];\n                    }\n                });\n            }\n        });\n    }\n    // refactor\n    public handleEvent(data: any) {\n        this._registry.execute(\"event\", data);\n    }\n\n    public async open(options: Glue42.Windows.WindowCreateOptions) {\n        let finishedResolve: () => void;\n        this._finished = new Promise((resolve) => {\n            finishedResolve = resolve;\n        });\n        try {\n            const result = await this.agm.invoke<{ id: string }>(\"T42.Wnd.Create\", options, this.agmTarget);\n            if (result.returned === undefined) {\n                throw new Error(\"failed to execute T42.Wnd.Create - unknown reason\");\n            }\n\n            const id = result.returned.id;\n            const win = await windowStore.waitFor(id);\n            if (!this._configuration || this._configuration.windowAvailableOnURLChanged) {\n                setTimeout(() => {\n                    if (win.API.windowType === \"electron\") {\n                        // on normal windows urlCHanged has to be detected first in order for the window to be ready\n                        // that causes the user callbacks to miss urlChanged since they are not registered yet\n                        // here we 'replay' the urlChanged event\n                        win.Events.handleUrlChanged(win.API.url);\n                    }\n                }, 0);\n            }\n            return win.API;\n        } catch (error) {\n            throw error;\n        } finally {\n            finishedResolve();\n        }\n    }\n\n    public async close(w: Glue42.Windows.GDWindow, options: Glue42.Windows.CloseOptions): Promise<Glue42.Windows.GDWindow | boolean> {\n        const result = await this.execute(\"close\", { windowId: w.id, options }, `Closed`);\n        if (options) {\n            return result.closed;\n        }\n        return w;\n    }\n\n    public async navigate(w: Glue42.Windows.GDWindow, newUrl: string, urlLoadOptions: Glue42.Windows.LoadURLOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"navigate\", { windowId: w.id, options: { url: newUrl, urlLoadOptions } }, \"UrlChanged\");\n        return w;\n    }\n    // Calls the public methods of the window. No Call to GD is made\n    public async setStyle(w: Glue42.Windows.GDWindow, style: Glue42.Windows.WindowSettings): Promise<Glue42.Windows.GDWindow> {\n        const stylePromises: Promise<any>[] = [];\n        const wait = (promise: Promise<any>) => stylePromises.push(promise);\n\n        if (!isUndefinedOrNull(style.focus) && !w.isFocused) {\n            wait(w.focus());\n        }\n\n        // Todo: only if !isRestoring (hopefully setVisible does this check)\n        if (!isUndefinedOrNull(style.hidden)) {\n            const toBeVisible = !style.hidden;\n            wait(w.setVisible(toBeVisible));\n        }\n\n        if (!isUndefinedOrNull(style.onTop)) {\n            wait(w.setOnTop(style.onTop));\n        }\n\n        if (!isNullOrWhiteSpace(style.tabTooltip) || !isNullOrWhiteSpace((style as any).tabToolTip)) {\n            const toolTip = style.tabTooltip ?? (style as any).tabToolTip;\n            wait(w.setTabTooltip(toolTip));\n        }\n\n        if (!isNullOrWhiteSpace(style.tabTitle)) {\n            wait(this.execute(\"setTabTitle\", { windowId: w.id, options: { tabTitle: style.tabTitle } }));\n        }\n\n        const constraints: Glue42.Windows.SizeConstraints = {\n            minHeight: style.minHeight,\n            minWidth: style.minWidth,\n            maxHeight: style.maxHeight,\n            maxWidth: style.maxWidth,\n        };\n\n        const hasConstraints = !isEmpty(constraints);\n        if (hasConstraints) {\n            wait(w.setSizeConstraints(constraints));\n        }\n\n        const buttons: Glue42.Windows.WindowButtons = {\n            allowClose: style.allowClose,\n            allowCollapse: style.allowCollapse,\n            allowLockUnlock: style.allowLockUnlock,\n            allowMaximize: style.allowMaximize,\n            allowMinimize: style.allowMinimize\n        };\n        const hasButtons = !isEmpty(buttons);\n        if (hasButtons) {\n            wait(w.resetButtons(buttons));\n        }\n\n        await Promise.all(stylePromises);\n\n        return w;\n    }\n\n    public async setSizeConstraints(w: Glue42.Windows.GDWindow, constraints: Glue42.Windows.SizeConstraints): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setSizeConstraints\", { windowId: w.id, options: constraints });\n        return w;\n    }\n\n    public async getSizeConstraints(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.SizeConstraints> {\n        const sizeConstraint = await this.execute(\"getSizeConstraints\", { windowId: w.id });\n        return sizeConstraint;\n    }\n\n    public async setTabTooltip(w: Glue42.Windows.GDWindow, tabTooltip: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setTabTooltip\", { windowId: w.id, options: { tabTooltip } });\n        return w;\n    }\n\n    public async getTabTooltip(w: Glue42.Windows.GDWindow): Promise<string> {\n        const result = await this.execute(\"getTabTooltip\", { windowId: w.id });\n        return result.tabTooltip;\n    }\n\n    public async resetButtons(w: Glue42.Windows.GDWindow, buttonsConfig: Glue42.Windows.WindowButtons): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"resetButtons\", { windowId: w.id, options: buttonsConfig });\n        return w;\n    }\n\n    public async getButtons(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.WindowButtons> {\n        const buttons = await this.execute(\"getButtons\", { windowId: w.id });\n        return buttons;\n    }\n\n    public async setOnTop(w: Glue42.Windows.GDWindow, onTop: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setOnTop\", { windowId: w.id, options: { onTop } });\n        return w;\n    }\n\n    public async setTitle(w: Glue42.Windows.GDWindow, newTitle: string): Promise<Glue42.Windows.GDWindow> {\n        const options = {\n            windowId: w.id,\n            options: {\n                title: newTitle\n            }\n        };\n        await this.execute(\"setTitle\", options, \"TitleChanged\");\n        return w;\n    }\n\n    public async setSticky(w: Glue42.Windows.GDWindow, isSticky: boolean): Promise<Glue42.Windows.GDWindow> {\n        const options = {\n            windowId: w.id,\n            options: {\n                isSticky\n            }\n        };\n        await this.execute(\"setSticky\", options);\n        return w;\n    }\n\n    public async moveResize(w: Glue42.Windows.GDWindow, bounds: Partial<Glue42.Windows.Bounds>): Promise<Glue42.Windows.GDWindow> {\n        if (typeof window !== \"undefined\" && (window.glueDesktop as any).versionNum < 31200) {\n            return new Promise(async (res, rej) => {\n                const resolveImmediately = this.areBoundsEqual(bounds, w);\n                let isDone = false;\n                const done = () => {\n                    if (isDone) {\n                        return;\n                    }\n                    isDone = true;\n\n                    if (unsubscribeBoundsChanged) {\n                        unsubscribeBoundsChanged();\n                        unsubscribeBoundsChanged = undefined;\n                    }\n                    res(w);\n                    if (resolveTimeout) {\n                        clearTimeout(resolveTimeout);\n                        resolveTimeout = undefined;\n                    }\n                };\n                let resolveTimeout: any;\n                let unsubscribeBoundsChanged: () => void;\n                if (!resolveImmediately) {\n                    unsubscribeBoundsChanged = w.onBoundsChanged((win: Glue42.Windows.GDWindow) => {\n                        if (!this.areBoundsEqual(bounds, win)) {\n                            return;\n                        }\n                        done();\n                    });\n                }\n\n                try {\n                    // always execute moveResize (we might have old bounds and prevent calls that are actually valid)\n                    await this.execute(\"moveResize\", { windowId: w.id, options: { bounds } });\n                } catch (error) {\n                    rej(error);\n                    return;\n                }\n\n                // if we're trying to resize with the bounds we already have\n                if (resolveImmediately) {\n                    done();\n                    return;\n                }\n\n                // if no bounds change in the next 1s resolve\n                resolveTimeout = setTimeout(() => {\n                    done();\n                }, 1000);\n            });\n        } else {\n            await this.execute(\"moveResize\", { windowId: w.id, options: { bounds } });\n        }\n        return w;\n    }\n\n    public async addFrameButton(w: Glue42.Windows.GDWindow, buttonInfo: Glue42.Windows.ButtonInfo): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"addButton\", { windowId: w.id, options: buttonInfo }, \"ButtonAdded\");\n        return w;\n    }\n\n    public async removeFrameButton(w: Glue42.Windows.GDWindow, buttonId: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"removeButton\", { windowId: w.id, options: buttonId }, \"ButtonRemoved\");\n        return w;\n    }\n\n    public async activate(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onFocusChanged(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"activate\", { windowId: w.id }, \"FocusChanged\"), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async focus(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onFocusChanged(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"focus\", { windowId: w.id }, \"FocusChanged\"), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async maximizeRestore(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"maximizeRestore\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async maximize(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"maximize\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async restore(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"restore\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async minimize(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"minimize\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async collapse(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"collapse\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async expand(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"expand\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async toggleCollapse(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"toggleCollapse\", { windowId: w.id }, \"StateChanged\");\n        return w;\n    }\n\n    public async snap(w: Glue42.Windows.GDWindow, targetWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.SnappingOptions): Promise<Glue42.Windows.GDWindow> {\n        const args: { targetWindowId: string, autoAlign?: boolean, snappingEdge?: string | undefined } = {\n            targetWindowId: targetWindow.id\n        };\n\n        args.snappingEdge = options.direction;\n        args.autoAlign = options.autoAlign;\n\n        await this.execute(\"snap\", { windowId: w.id, options: args }, \"CompositionChanged\", `CompositionChanged-${targetWindow.id}`);\n        return w;\n    }\n\n    public async attachTab(w: Glue42.Windows.GDWindow, sourceWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.AttachOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"attachTab\", {\n            windowId: w.id,\n            options: {\n                index: options,\n                sourceWindowId: sourceWindow.id,\n                targetWindowId: w.id,\n            }\n        }, `WindowFrameAdded-${sourceWindow.id}`, `WindowFrameRemoved-${sourceWindow.id}`);\n        return w;\n    }\n\n    public async detachTab(w: Glue42.Windows.GDWindow, options: DetachTabOptions): Promise<Glue42.Windows.GDWindow> {\n        const eventKeys: string[] = [\"WindowFrameRemoved\", `WindowFrameAdded`];\n        if (!isUndefinedOrNull(options?.relativeTo)) {\n            eventKeys.push(`CompositionChanged`);\n            eventKeys.push(`CompositionChanged-${options.relativeTo}`);\n        } else {\n            eventKeys.push(\"BoundsChanged\");\n        }\n        await this.execute(\"detachTab\", { windowId: w.id, options }, ...eventKeys);\n        return w;\n    }\n\n    public async setVisible(w: Glue42.Windows.GDWindow, toBeVisible = true): Promise<Glue42.Windows.GDWindow> {\n        let command: string;\n        if (toBeVisible) {\n            command = \"show\";\n        } else {\n            command = \"hide\";\n        }\n\n        await this.execute(command, { windowId: w.id }, \"VisibilityChanged\");\n        return w;\n    }\n\n    public async center(w: Glue42.Windows.GDWindow, display?: Glue42.Displays.Display): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"center\", { windowId: w.id, options: display });\n        return w;\n    }\n\n    public async showLoader(w: Glue42.Windows.GDWindow, loader?: Glue42.Windows.Loader): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"showLoadingAnimation\", { windowId: w.id, options: loader });\n        return w;\n    }\n\n    public async hideLoader(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"hideLoadingAnimation\", { windowId: w.id });\n        return w;\n    }\n\n    public async updateContext(w: Glue42.Windows.GDWindow, context: any, replace: boolean): Promise<Glue42.Windows.GDWindow> {\n        let un: UnsubscribeFunction;\n        try {\n            // as undefined values do not go through interop, setting a prop to undefined will lead to no change\n            // set this to null so it actually removes the prop\n            const contextWithoutUndefinedValues = this.swapUndefinedToNull(context);\n\n            const done = new Promise<void>((resolve, reject) => {\n                un = w.onContextUpdated(() => {\n                    resolve();\n                });\n            });\n            await Promise.all([this.execute(\"updateContext\", {\n                windowId: w.id, context: contextWithoutUndefinedValues, replace\n            }), done]);\n            return w;\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    public async lock(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"lockUnlock\", { windowId: w.id, options: { lock: true } }, \"FrameIsLockedChanged\");\n        return w;\n    }\n\n    public async unlock(w: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"lockUnlock\", { windowId: w.id, options: { lock: false } }, \"FrameIsLockedChanged\");\n        return w;\n    }\n\n    public async getIcon(w: Glue42.Windows.GDWindow): Promise<string> {\n        const result = await this.execute(\"getIcon\", {\n            windowId: w.id,\n            options: {}\n        });\n        return result.icon;\n    }\n\n    public async setIcon(w: Glue42.Windows.GDWindow, base64Image: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setIcon\", {\n            windowId: w.id,\n            options: {\n                dataURL: base64Image\n            }\n        });\n        return w;\n    }\n\n    public async setFrameColor(w: Glue42.Windows.GDWindow, frameColor: string): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setFrameColor\", { windowId: w.id, options: { frameColor } }, \"FrameColorChanged\");\n        return w;\n    }\n\n    public async setTabHeaderVisible(w: Glue42.Windows.GDWindow, toBeTabHeaderVisible: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setTabHeaderVisible\", {\n            windowId: w.id,\n            options: {\n                toShow: toBeTabHeaderVisible\n            }\n        }, \"TabHeaderVisibilityChanged\");\n        return w;\n    }\n\n    public async showPopup(targetWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PopupOptions): Promise<Glue42.Windows.GDWindow> {\n        if (!options) {\n            throw new Error(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.targetLocation) {\n            optionsCopy.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation;\n        }\n\n        const reformatedOptions: ReformatedPopupOptions & { targetId: string } = {\n            ...optionsCopy,\n            popupBounds: optionsCopy.size,\n            targetId: targetWindow.id,\n            popupId: optionsCopy.windowId\n        };\n\n        await this.execute(\"showPopupWindow\", {\n            windowId: targetWindow.id,\n            options: reformatedOptions\n        });\n\n        return targetWindow;\n    }\n\n    public async createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        if (!options) {\n            throw new Error(\"The options object is not valid!\");\n        }\n\n        const optionsCopy = { ...options };\n\n        if (!optionsCopy.horizontalOffset) {\n            optionsCopy.horizontalOffset = 0;\n        }\n\n        if (!optionsCopy.verticalOffset) {\n            optionsCopy.verticalOffset = 0;\n        }\n\n        const fullOptions: Glue42.Windows.FlydownOptions & { targetId: string, flydownBounds: Glue42.Windows.FlydownOptions[\"size\"] } = this.reformatFlydownOptions(windowId, optionsCopy);\n\n        return this.execute(\"setFlydownArea\", { windowId, options: fullOptions }).then(() => {\n            const zoneIds = fullOptions.zones.map((z) => z.id);\n\n            fullOptions.zones.forEach((z) => {\n                let callback: (...args: any[]) => any = typeof (z.flydownSize) === \"function\" ?\n                    z.flydownSize : () => z.flydownSize;\n\n                if (options.size instanceof Function && z.flydownSize) {\n                    callback = async (data: Glue42.Windows.ShowFlydownData, cancel: () => void) => {\n                        let result;\n                        // The options callback must be always invoked\n                        // If the property in the zone is null it will be automatically\n                        // assigned to the same callback from the code above reformatFlydownOptions\n                        if (options.size instanceof Function) {\n                            result = await options.size(data, cancel);\n                        }\n\n                        // If both are callbacks the zone has higher priority\n                        // If they are the same only one should be invoked\n                        if (z.flydownSize instanceof Function && z.flydownSize !== options.size) {\n                            return await z.flydownSize(data, cancel) || result;\n                        }\n\n                        // The options callback overwrites the bounds object specified in the zone\n                        return result || z.flydownSize;\n                    };\n                }\n                this._registry.clearKey(`${fullOptions.targetId}_${z.id}`);\n                this._registry.add(`${fullOptions.targetId}_${z.id}`, callback);\n            });\n\n            return {\n                destroy: () => this.clearFlydownArea(fullOptions.targetId, zoneIds),\n                options: optionsCopy\n            };\n        });\n    }\n\n    public async setModalState(windowId: string, isModal: boolean): Promise<void> {\n        return this.execute(\"setModalState\", { windowId, options: { isModal } });\n    }\n\n    public async handleFlydownBoundsRequested(targetId: string, data: ShowFlydownData) {\n        const cancelCallback = () => data.cancel = true;\n\n        const callbackData: Glue42.Windows.ShowFlydownData = {\n            zoneId: data.flydownId,\n            flydownWindowBounds: data.flydownWindowBounds,\n            flydownWindowId: data.flydownWindowId,\n        };\n\n        const responses = await Promise.all(this._registry.execute(`${targetId}_${data.flydownId}`, callbackData, cancelCallback));\n\n        if (responses.length === 1) {\n            const defaultResponse = { height: 0, width: 0, top: 0, left: 0 };\n            const response = typeof (responses[0]) === \"object\" && !Array.isArray(responses[0]) ? responses[0] : defaultResponse;\n            const responseOptions: ShowFlydownData = { ...data, flydownWindowBounds: response };\n\n            return responseOptions;\n        }\n    }\n\n    public async handleOnEventRequested(callbackId: string, args?: { newUrl: string }) {\n        const callbacks = this.unsubCallbacks[callbackId] ?? [];\n        let prevented = false;\n        const preventArgs: any[] = [];\n        await Promise.all(callbacks.map((cb) => {\n            return new Promise<void>((resolve, reject) => {\n                cb(() => {\n                    resolve();\n                }, () => {\n                    reject();\n                }, (pArgs: any) => {\n                    prevented = true;\n                    preventArgs.push(pArgs);\n                }, args);\n            });\n        }));\n        return { prevented, preventArgs };\n    }\n\n    public async zoomIn(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomIn\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async zoomOut(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"zoomOut\", {\n            windowId: window.id,\n        });\n        return window;\n    }\n\n    public async setZoomFactor(window: Glue42.Windows.GDWindow, zoomFactor: number): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"setZoomFactor\", {\n            windowId: window.id,\n            options: {\n                zoomFactor\n            }\n        });\n        return window;\n    }\n\n    public async showDevTools(window: Glue42.Windows.GDWindow): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"showDevTools\", {\n            windowId: window.id,\n        });\n\n        return window;\n    }\n\n    public async capture(window: Glue42.Windows.GDWindow, options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot = (await this.execute(\n            \"captureScreenshot\",\n            { windowId: window.id, options: { ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async captureGroup(windowIds: string[], options: Glue42.Windows.CaptureOptions): Promise<string> {\n        const base64screenshot: string = (await this.execute(\n            \"captureGroupScreenshot\",\n            { windowId: windowIds[0], options: { groupWindowIds: windowIds, ...options } }\n        )).data;\n\n        return base64screenshot;\n    }\n\n    public async flash(resultWindow: Glue42.Windows.GDWindow, options: FlashOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"flash\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n\n        return resultWindow;\n    }\n\n    public async flashTab(resultWindow: Glue42.Windows.GDWindow, options: FlashTabOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"flashTab\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n\n        return resultWindow;\n    }\n\n    public async configure(windowId: string, options: Glue42.Windows.WindowsConfiguration): Promise<void> {\n        return this.execute(\n            \"configure\",\n            { windowId, options: { ...options } }\n        );\n    }\n\n    public async print(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PrintOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\n            \"print\",\n            { windowId: resultWindow.id, options: { ...options } }\n        );\n        return resultWindow;\n    }\n\n    public async printToPDF(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.PrintToPDFOptions): Promise<string> {\n        const filePath: string = (await this.execute(\n            \"printToPDF\",\n            { windowId: resultWindow.id, options: { ...options } }\n        )).filePath;\n\n        return filePath;\n    }\n\n    public async place(window: Glue42.Windows.GDWindow, options: Glue42.Windows.PlacementSettings): Promise<void> {\n        const copy = { ...options } as { display: string | number | Glue42.Displays.Display };\n        if (!options.display || options.display === \"current\") {\n            copy.display = await window.getDisplay();\n        }\n        // Glue42.Displays.API works with zero based array of displays, which means that the first monitor has index 0\n        // whereas GD works with non zero based array of displays, which means that the first monitor has index 1\n        if (copy.display && typeof copy.display !== \"string\" && typeof copy.display !== \"number\") {\n            copy.display = copy.display.index + 1;\n        }\n\n        return this.execute(\n            \"place\",\n            { windowId: window.id, options: { ...copy } }\n        );\n    }\n\n    public async refresh(resultWindow: Glue42.Windows.GDWindow, ignoreCache: boolean): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"refresh\", { windowId: resultWindow.id, options: { ignoreCache } });\n        return resultWindow;\n    }\n\n    public async download(resultWindow: Glue42.Windows.GDWindow, url: string, options: Glue42.Windows.DownloadOptions & { enableDownloadBar?: boolean } = {}): Promise<Glue42.Windows.DownloadResult> {\n        options.enableDownloadBar = !options.silent;\n        const result: { fileSize: number, fullPath: string, success: boolean } = await this.execute(\"downloadURL\", { windowId: resultWindow.id, options: { url, options } });\n        return {\n            url,\n            path: result.fullPath,\n            size: result.fileSize,\n        };\n    }\n\n    public async configureWindow(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.WindowConfiguration): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"configureWindow\", { windowId: resultWindow.id, options });\n        return resultWindow;\n    }\n\n    public async getWindowConfiguration(resultWindow: Glue42.Windows.GDWindow): Promise<Glue42.Windows.WindowConfiguration> {\n        const config = await this.execute(\"getWindowConfiguration\", { windowId: resultWindow.id });\n        return config;\n    }\n\n    public async startDrag(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.StartDragOptions): Promise<Glue42.Windows.GDWindow> {\n        await this.execute(\"startDrag\", { windowId: resultWindow.id, options });\n        return resultWindow;\n    }\n\n    public showDialog<T>(resultWindow: Glue42.Windows.GDWindow, options: Glue42.Windows.DialogOptions): Promise<T> {\n        return new Promise((res, rej) => {\n            const token = shortid.generate();\n            const un = this._registry.add(\"event\", (args: { windowId: string, type: string, data: DialogResult<T>[\"data\"] }) => {\n                if (args.type === \"DialogResult\" && args.windowId === resultWindow.id && args.data.token === token) {\n                    un();\n                    const data = args.data;\n                    if (\"status\" in data) {\n                        if (data.status === \"failed\") {\n                            rej(data.message);\n                        } else if (data.status === \"successful\") {\n                            res(data.result);\n                        }\n                    }\n                }\n            });\n            this.execute(\"showDialog\", { windowId: resultWindow.id, options: Object.assign({}, { ...options }, { token }) });\n        });\n    }\n\n    /**\n     * Invokes the container\n     * @param command\n     * @param options\n     * @param {...string} eventKeys which events types to be awaited before resolving - used only < GD 3.12\n     * @returns Invocation result\n     */\n    public async execute(command: string, options: any, ...eventKeys: string[]): Promise<any> {\n        return this.executeCore(this.WndMethodName, command, options, ...eventKeys);\n    }\n\n    public async executeGroup(command: string, options: any, ...eventKeys: string[]): Promise<any> {\n        return this.executeCore(this.GroupMethodName, command, options, ...eventKeys);\n    }\n\n    public async ungroup(w: Glue42.Windows.GDWindow, options: Glue42.Windows.UngroupOptions): Promise<Glue42.Windows.GDWindow> {\n        const args = {\n            windowId: w.id,\n            options\n        };\n        await this.execute(\"ungroup\", args);\n        return w;\n    }\n\n    public async updateJumpList(windowId: string, options: JumpListUpdateSettings): Promise<void> {\n        const args = {\n            windowId,\n            options\n        };\n        await this.execute(\"updateJumplist\", args);\n    }\n\n    public async getJumpList(windowId: string): Promise<JumpListSettingsInternal> {\n        const args = {\n            windowId,\n        };\n        const result = await this.execute(\"getJumplist\", args);\n        return result;\n    }\n\n    public onClosing(callback: (success: () => void, error: () => void, prevent: (options?: Glue42.Windows.PreventClosingOptions) => void) => void, gdWindow: Glue42.Windows.GDWindow): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd && gdWindow.windowType === \"electron\") {\n            return glue42gd.addCloseHandler(callback, gdWindow.id);\n        } else {\n            return this.nonWindowHandlers(callback, gdWindow.id, \"OnClosing\");\n        }\n    }\n\n    public onRefreshing(callback: (success: () => void, error: () => void, prevent: () => void) => void, gdWindow: Glue42.Windows.GDWindow): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd && gdWindow.windowType === \"electron\") {\n            return glue42gd.addRefreshHandler(callback, gdWindow.id);\n        } else {\n            return this.nonWindowHandlers(callback, gdWindow.id, \"OnRefreshing\");\n        }\n    }\n\n    public onNavigating(callback: (success: () => void, error: () => void, prevent: () => void, args: { newUrl: string }) => void, gdWindow: Glue42.Windows.GDWindow): () => void {\n        const glue42gd = typeof window !== \"undefined\" && (window as any).glue42gd;\n        if (glue42gd && gdWindow.windowType === \"electron\") {\n            return glue42gd.addWillNavigateHandler(callback, gdWindow.id);\n        } else {\n            return this.nonWindowHandlers(callback, gdWindow.id, \"OnNavigating\");\n        }\n    }\n\n    public async goBack(resultWindow: Glue42.Windows.GDWindow): Promise<void> {\n        await this.execute(\"goBack\", { windowId: resultWindow.id });\n    }\n\n    public async goForward(resultWindow: Glue42.Windows.GDWindow): Promise<void> {\n        await this.execute(\"goForward\", { windowId: resultWindow.id });\n    }\n\n    private nonWindowHandlers(callback: (success: () => void, error: () => void, prevent?: (options?: Glue42.Windows.PreventClosingOptions) => void, args?: { newUrl: string }) => void, winId: string, type: string): () => void {\n        const id = `${winId}-${type}`;\n        const unsub = () => {\n            if (this.unsubCallbacks[id]) {\n                const callbacks = this.unsubCallbacks[id];\n                this.unsubCallbacks[id] = callbacks.filter((cb) => cb !== callback);\n            }\n            const cbs = this.unsubCallbacks[id];\n            if (cbs.length === 0) {\n                this.execute(type, {\n                    windowId: winId,\n                    options: {\n                        unsubscribe: true\n                    }\n                });\n            }\n        };\n        if (this.unsubCallbacks[id]) {\n            this.unsubCallbacks[id].push(callback);\n            return unsub;\n        } else {\n            this.unsubCallbacks[id] = [callback];\n        }\n        const args = {\n            windowId: winId\n        };\n        this.execute(type, args);\n        return unsub;\n    }\n\n    private reformatFlydownOptions(windowId: string, options: Glue42.Windows.FlydownOptions) {\n        const assignGeneralIfUnassigned = (zone: Glue42.Windows.FlydownZone, prop: keyof Glue42.Windows.FlydownZone & keyof Glue42.Windows.FlydownOptions) => {\n            if (options[prop] && (zone[prop] === undefined || zone[prop] === null)) {\n                const valueFromOptions = options[prop];\n                (zone[prop] as any) = valueFromOptions;\n            }\n        };\n\n        const zones: ReformatedFlydownOptions[\"zones\"] = options.zones.map((z) => {\n            assignGeneralIfUnassigned(z, \"windowId\");\n            assignGeneralIfUnassigned(z, \"targetLocation\");\n\n            if (options.size && (z.flydownSize === undefined || z.flydownSize === null)) {\n                z.flydownSize = options.size;\n            }\n\n            (z as ReformatedFlydownZone).flydownBounds = z.flydownSize as any;\n            (z as ReformatedFlydownZone).flydownId = z.windowId;\n\n            if (!z.targetLocation) {\n                z.targetLocation = \"bottom\" as Glue42.Windows.PopupTargetLocation.Bottom;\n            }\n\n            return z;\n        });\n\n        return {\n            ...options,\n            zones,\n            targetId: windowId,\n            flydownBounds: options.size,\n            flydownActiveArea: options.activeArea\n        };\n    }\n\n    private clearFlydownArea(windowId: string, areaIds: string[]) {\n        return this.execute(\"clearFlydownWindowArea\", {\n            windowId,\n            options: {}\n        }).then(() => {\n            areaIds.forEach((id) => {\n                this._registry.clearKey(`${windowId}_${id}`);\n            });\n        });\n    }\n\n    private executeWithoutToken(params: { windowId: string }, ...eventKeys: string[]) {\n        const uns: UnsubscribeFunction[] = [];\n        const executed = eventKeys?.filter((k) => !isUndefinedOrNull(k)).map((key) => {\n            return new Promise<void>((r) => {\n                const [type, windowId = params.windowId] = key.split(\"-\");\n                uns.push(this._registry.add(\"event\", (data: { windowId: string, type: string }) => {\n                    if (data.type === type && data.windowId === windowId) {\n                        r();\n                    }\n                }));\n            });\n        });\n        const action = new Promise<any>((resolve, reject) => {\n            this.agm.invoke<any>(\"T42.Wnd.Execute\", params, this.agmTarget)\n                .then((i) => {\n                    if (i.returned && i.returned.errorMsg) {\n                        reject(i);\n                    } else {\n                        resolve(i.returned);\n                    }\n                })\n                .catch((e) => reject(e));\n        });\n        return Promise.all([action, ...executed])\n            .then((r) => {\n                return r[0];\n            })\n            .finally(() => {\n                uns.forEach((un) => un());\n            });\n    }\n\n    private async executeCore(methodName: string, command: string, options: any, ...eventKeys: string[]): Promise<any> {\n        const params = {\n            ...options,\n            command,\n        };\n        let finishedResolve: () => void;\n        this._finished = new Promise((resolve) => {\n            finishedResolve = resolve;\n        });\n        try {\n            if (typeof window !== \"undefined\" && (window.glueDesktop as any).versionNum < 31200) {\n                return await this.executeWithoutToken(params, ...eventKeys);\n            } else {\n                return await this.executeWithToken(methodName, params);\n            }\n        } finally {\n            finishedResolve();\n        }\n    }\n\n    private async executeWithToken(methodName: string, options: any) {\n        let un: UnsubscribeFunction;\n        try {\n            const token = shortid.generate();\n            const event = new Promise<void>((r) => {\n                un = this._registry.add(\"event\", (data: any) => {\n                    if (data.token === token) {\n                        r();\n                    }\n                });\n            });\n            const execute = new Promise<any>((resolve, reject) => {\n                options.token = token;\n                this.agm.invoke<any>(methodName, options, this.agmTarget)\n                    .then((i) => {\n                        if (i.returned && i.returned.errorMsg) {\n                            reject(i);\n                        } else {\n                            resolve(i.returned);\n                        }\n                    })\n                    .catch((i) => {\n                        reject(i);\n                    });\n            });\n\n            const result = await Promise.all([execute, event]);\n            return result[0];\n        } catch (error) {\n            throw error;\n        } finally {\n            if (un) {\n                un();\n            }\n        }\n    }\n\n    private areBoundsEqual(requested: Partial<Glue42.Windows.Bounds>, w: Glue42.Windows.GDWindow) {\n        const current = w.bounds;\n        const settings = w.settings;\n        let height = requested.height;\n        let width = requested.width;\n        if (requested.height < settings.minHeight) {\n            height = settings.minHeight;\n        }\n        if (requested.height > settings.maxHeight) {\n            height = settings.maxHeight;\n        }\n        if (requested.width < settings.minWidth) {\n            width = settings.minWidth;\n        }\n        if (requested.width > settings.maxWidth) {\n            width = settings.maxWidth;\n        }\n\n        const areHeightsEqual = height ? current.height === height : true;\n        const areWidthsEqual = width ? current.width === width : true;\n        const areLeftsEqual = requested.left ? current.left === requested.left : true;\n        const areTopsEqual = requested.top ? current.top === requested.top : true;\n\n        return areHeightsEqual && areWidthsEqual && areLeftsEqual && areTopsEqual;\n    }\n\n    private swapUndefinedToNull(context: any) {\n        try {\n            // swap top level undefined values to null-s\n            const copy: any = {};\n            for (const key of Object.keys(context)) {\n                let value = context[key];\n                if (typeof value === \"undefined\") {\n                    value = null;\n                }\n                copy[key] = value;\n            }\n            return copy;\n        } catch {\n            return context;\n        }\n    }\n}\n\nexport default new GDExecutor();\n","import { Glue42Core } from \"@glue42/core\";\nimport { Glue42 } from \"../../../../glue\";\nimport { default as windowStore } from \"../../store\";\nimport { Environment, Executor, WindowsAPIConfiguration, WindowConstructorOptions, WindowEvents, WindowWrapper } from \"../../types\";\nimport windowFactory from \"../../window\";\nimport { default as executor } from \"./executor\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport {\n    FullInfoEvent,\n    StreamEvent,\n    WindowInfo,\n    GroupHeaderVisibilityChanged,\n    UrlChanged,\n    TitleChanged,\n    BoundsChanged,\n    FocusChanged,\n    CompositionChanged,\n    ExtendedStreamEvent,\n    EventWithResponseData,\n    ResponseTypes,\n    IsStickyChanged,\n    GroupVisibilityChanged,\n} from \"./types\";\nimport { getWindowsByTabGroupId } from \"../helpers\";\n\nexport default class GDEnvironment implements Environment {\n\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _agm: Glue42Core.AGM.API;\n    private _logger: Glue42Core.Logger.API;\n    private _waitTimeout = 10000;\n    private _agmInstance: Glue42.Interop.Instance;\n    private _windowId: string;\n    private _configuration: WindowsAPIConfiguration;\n    private _appManagerGetter: () => Glue42.AppManager.API;\n    private _displayAPIGetter: () => Glue42.Displays.API;\n    private _channelsAPIGetter: () => Glue42.Channels;\n\n    constructor(agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, channelsAPIGetter: () => Glue42.Channels, wndId?: string) {\n        this._agm = agm;\n        this._logger = logger.subLogger(\"gd-env\");\n        this._windowId = wndId;\n        this._appManagerGetter = appManagerGetter;\n        this._displayAPIGetter = displayAPIGetter;\n        this._channelsAPIGetter = channelsAPIGetter;\n    }\n\n    public init(): Promise<GDEnvironment> {\n        return new Promise((resolve, reject) => {\n            this._agm.register(\"T42.Wnd.OnEventWithResponse\", (args, caller) => {\n                return this.respondToEvent(args);\n            });\n\n            const streamPromise = new Promise<void>((streamResolve, streamReject) => {\n                this._agm.subscribe(\"T42.Wnd.OnEvent\", {\n                    waitTimeoutMs: this._waitTimeout,\n                    target: \"best\",\n                    arguments: {\n                        withConfig: true\n                    },\n                    onData: (streamData: any) => {\n                        if (streamData.data.type === \"Configuration\") {\n                            this._configuration = streamData.data;\n                            return;\n                        }\n                        this.updateWindow(streamData.data, resolve);\n                        executor.handleEvent(streamData.data);\n                        executor.init(this._agm, this._agmInstance, this._configuration);\n                    },\n                    onConnected: (instance) => {\n                        this._agmInstance = instance;\n                        // Init the executor\n                        executor.init(this._agm, this._agmInstance);\n                    }\n                }).catch((error: { message: string, method: { name: string }, called_with: unknown }) => {\n                    const message = `${error?.method?.name} - ${JSON.stringify(error?.called_with)} - ${error?.message}`;\n                    reject(new Error(message));\n                });\n            });\n        });\n    }\n\n    public get executor(): Executor {\n        return executor;\n    }\n\n    public open(name: string, url: string, options: any): Promise<Glue42.Windows.GDWindow> {\n        options = options || {};\n        const copyOptions = { ...options };\n\n        if (copyOptions.relativeTo !== undefined && typeof copyOptions.relativeTo !== \"string\") {\n            copyOptions.relativeTo = copyOptions.relativeTo.id || \"\";\n        }\n\n        copyOptions.name = name;\n        copyOptions.url = url;\n\n        // This is for compatibility between gd2 and gd3\n        copyOptions.windowState = options.windowState || options.state;\n        // Otherwise glue desktop throws an error for extra properties\n        delete copyOptions.state;\n        return this.executor.open(copyOptions);\n    }\n\n    public createFlydown(windowId: string, options: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return this.executor.createFlydown(windowId, options);\n    }\n\n    public async showPopup(windowId: string, options: Glue42.Windows.PopupOptions): Promise<void> {\n        const window = windowStore.get(windowId);\n        await this.executor.showPopup(window.API, options);\n    }\n\n    public tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-attached\", callback);\n    }\n\n    public tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        return this._registry.add(\"tab-detached\", callback);\n    }\n\n    public onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void) {\n        return this._registry.add(\"frame-color-changed\", callback);\n    }\n\n    public onEvent(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"window-event\", callback);\n    }\n\n    public my(): string {\n        return this._windowId;\n    }\n\n    public execute<T>(command: string, windowId: string, options: any): Promise<Glue42Core.AGM.InvocationResult<T>> {\n        return this._agm.invoke<T>(\"T42.Wnd.Execute\", {\n            command,\n            options,\n            windowId,\n        });\n    }\n\n    /** Groups */\n    public onCompositionChanged(callback: (windowInfo: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"composition-changed\", callback);\n    }\n\n    public onGroupHeaderVisibilityChanged(callback: (stream: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"group-header-changed\", callback);\n    }\n\n    public onGroupVisibilityChanged(callback: (stream: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"group-visibility-changed\", callback);\n    }\n\n    public onGroupStateChanged(callback: (stream: any) => void): UnsubscribeFunction {\n        return this._registry.add(\"group-state-changed\", callback);\n    }\n\n    public onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"got-focus\", callback);\n    }\n\n    public onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return this._registry.add(\"lost-focus\", callback);\n    }\n\n    private respondToEvent(args: EventWithResponseData): Promise<ResponseTypes> {\n        if (args.type === \"ShowFlydownBoundsRequested\") {\n            return this.executor.handleFlydownBoundsRequested(args.data.windowId, args.data);\n        } else if (args.type === \"OnClosing\" || args.type === \"OnRefreshing\" || args.type === \"OnNavigating\") {\n            return this.executor.handleOnEventRequested(args.data.callbackId, args.data.args);\n        }\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        return Promise.reject(`There isn't a handler for ${(args as any).type}`);\n    }\n\n    private updateWindow(windowInfo: StreamEvent, readyResolve: (env: GDEnvironment) => void) {\n        const extendedStreamEvent = this.getExtendedStreamEvent(windowInfo);\n\n        // this is the snapshot of all windows\n        if (windowInfo.type === \"Snapshot\") {\n            const windowInfoFullInfoEvent = (windowInfo as FullInfoEvent);\n            windowInfoFullInfoEvent.windows.forEach((w) => {\n                const existingWindow = windowStore.get(w.id);\n                if (existingWindow) {\n                    existingWindow.Events.handleUpdate(this.mapToWindowConstructorOptions(w));\n                } else {\n                    const win = this.createWindow(w.id, w);\n                    windowStore.markReadyToShow(win.API.id);\n                }\n                this._registry.execute(\"window-event\", extendedStreamEvent);\n            });\n            readyResolve(this);\n            return;\n        }\n\n        // global event\n        if (windowInfo.type === \"CommandExecuted\") {\n            this._registry.execute(\"window-event\", extendedStreamEvent);\n            return;\n        }\n\n        // if new window handle it separately\n        if (windowInfo.type === \"Created\") {\n            const windowInfoCreatedEvent = (windowInfo);\n            const win = this.createWindow(windowInfoCreatedEvent.windowId, windowInfoCreatedEvent.data || {});\n            windowStore.setReadyState(win.API.id);\n            this._registry.execute(\"window-event\", extendedStreamEvent);\n            return;\n        }\n\n        if (windowInfo.type === \"OnGroupVisibilityChanged\") {\n            const info = windowInfo as GroupVisibilityChanged;\n            this._registry.execute(\"group-visibility-changed\", info.data);\n            this._registry.execute(\"window-event\", windowInfo);\n            return;\n        }\n\n        if (windowInfo.type === \"OnGroupStateChanged\") {\n            const info = windowInfo as GroupVisibilityChanged;\n            this._registry.execute(\"group-state-changed\", info.data);\n            this._registry.execute(\"window-event\", windowInfo);\n            return;\n        }\n\n        // otherwise check if the window is in our internal collections and update its state\n        const windowObjectAndEvents: WindowWrapper = windowStore.get((windowInfo).windowId);\n        if (!windowObjectAndEvents) {\n            this._logger.error(`received update for unknown window. Stream:', ${JSON.stringify(windowInfo, null, 4)}`);\n            return;\n        }\n\n        const theWindow: Glue42.Windows.GDWindow = windowObjectAndEvents.API;\n        const theWindowEvents: WindowEvents = windowObjectAndEvents.Events;\n\n        // handle bounds changed\n        if (windowInfo.type === \"BoundsChanged\") {\n            const windowInfoBoundsChangedEvent = (windowInfo as BoundsChanged);\n            theWindowEvents.handleBoundsChanged(windowInfoBoundsChangedEvent.data);\n        }\n\n        // handle url changed\n        if (windowInfo.type === \"UrlChanged\") {\n            const windowInfoUrlChangedEvent = (windowInfo as UrlChanged);\n            windowStore.setUrlChangedState(windowInfoUrlChangedEvent.windowId);\n            theWindowEvents.handleUrlChanged(windowInfoUrlChangedEvent.data);\n        }\n\n        // handle title changed\n        if (windowInfo.type === \"TitleChanged\") {\n            const windowInfoTitleChanged = (windowInfo as TitleChanged);\n            theWindowEvents.handleTitleChanged(windowInfoTitleChanged.data);\n        }\n\n        // handle isSticky changed\n        if (windowInfo.type === \"IsStickyChanged\") {\n            const windowInfoIsStickyChangedChanged = (windowInfo as IsStickyChanged);\n            theWindowEvents.handleIsStickyChanged(windowInfoIsStickyChangedChanged.data);\n        }\n\n        // handle visibility changed\n        if (windowInfo.type === \"VisibilityChanged\") {\n            theWindowEvents.handleVisibilityChanged(windowInfo.data);\n        }\n\n        // handle context changed\n        if (windowInfo.type === \"ContextChanged\") {\n            theWindowEvents.handleContextUpdated(windowInfo.data);\n        }\n\n        // handle window state changed\n        if (windowInfo.type === \"StateChanged\") {\n            theWindowEvents.handleWindowChangeState(windowInfo.data);\n        }\n\n        // handle frame color changed\n        if (windowInfo.type === \"FrameColorChanged\") {\n            theWindowEvents.handleFrameColorChanged(windowInfo.data);\n            this._registry.execute(\"frame-color-changed\", theWindow);\n        }\n\n        // handle composition changed - groups API\n        if (windowInfo.type === \"CompositionChanged\") {\n            const windowInfoCompositionChanged = windowInfo as CompositionChanged;\n            theWindowEvents.handleCompositionChanged(windowInfoCompositionChanged.data);\n            windowStore.setCompositionChangedState(windowInfoCompositionChanged.data.windowId, this._configuration?.windowAvailableOnURLChanged);\n            this._registry.execute(\"composition-changed\", windowInfoCompositionChanged.data);\n        }\n\n        if (windowInfo.type === \"GroupHeaderVisibilityChanged\") {\n            const info = windowInfo as GroupHeaderVisibilityChanged;\n            theWindowEvents.handleGroupHeaderVisibilityChanged(info.data.groupHeaderVisible);\n            this._registry.execute(\"group-header-changed\", info.data);\n        }\n\n        // handle focus changed\n        if (windowInfo.type === \"FocusChanged\") {\n            const windowInfoFocusChanged = (windowInfo as FocusChanged);\n            this.focusChanged(theWindowEvents, theWindow, windowInfoFocusChanged.data);\n        }\n\n        if (windowInfo.type === \"WindowFrameChanged\") {\n            theWindowEvents.handleFrameAttached(windowInfo.data.frameId, windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n            this._registry.execute(\"frame-changed\");\n        }\n\n        if (windowInfo.type === \"WindowFrameAdded\") {\n            const winsToBeNotified = getWindowsByTabGroupId(theWindow.id, windowInfo.data.frameId);\n            const data = windowInfo.data;\n            theWindowEvents.handleAttached(data.frameId, data.frameId, data.isTabHeaderVisible, data.isLocked, winsToBeNotified)\n                .then(async () => {\n                    // don't fire the event if it is the first window\n                    if (winsToBeNotified.length > 0) {\n                        await executor.finished;\n                        this._registry.execute(\"tab-attached\", theWindow, windowInfo.data.frameId, windowInfo.data.isTabHeaderVisible);\n                    }\n                });\n        }\n\n        if (windowInfo.type === \"WindowFrameRemoved\") {\n            // In the event, tabGroupId is empty, will be update on the next event FrameAttached\n            const oldTabGroupId = theWindow.tabGroupId;\n            const winsToBeNotified = getWindowsByTabGroupId(theWindow.id, oldTabGroupId);\n            theWindowEvents.handleDetached(windowInfo.data.isLocked, winsToBeNotified)\n                .then(async () => {\n                    // don't fire the event if it is the first window\n                    if (winsToBeNotified.length > 0) {\n                        await executor.finished;\n                        this._registry.execute(\"tab-detached\", theWindow, windowInfo.data.frameId, theWindow.tabGroupId);\n                    }\n                });\n        }\n\n        if (windowInfo.type === \"TabHeaderVisibilityChanged\") {\n            theWindowEvents.handleTabHeaderVisibilityChanged(windowInfo.data.isTabHeaderVisible);\n        }\n\n        if (windowInfo.type === \"FrameSelectionChanged\") {\n            theWindowEvents.handleFrameSelectionChanged(windowInfo.data.newWindowId, windowInfo.data.prevWindowId);\n        }\n\n        if (windowInfo.type === \"ButtonClicked\") {\n            theWindowEvents.handleFrameButtonClicked(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonAdded\") {\n            theWindowEvents.handleFrameButtonAdded(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"ButtonRemoved\") {\n            theWindowEvents.handleFrameButtonRemoved(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"WindowZoomFactorChanged\") {\n            theWindowEvents.handleZoomFactorChanged(windowInfo.data);\n        }\n\n        // Clear the window on close event\n        if (windowInfo.type === \"Closed\") {\n            windowStore.remove(windowObjectAndEvents);\n            theWindowEvents.handleWindowClose();\n        }\n\n        if (windowInfo.type === \"FrameIsLockedChanged\") {\n            theWindowEvents.handleFrameIsLockedChanged(windowInfo.data);\n        }\n\n        if (windowInfo.type === \"PlacementSettingsChanged\") {\n            theWindowEvents.handlePlacementSettingsChanged(windowInfo.data);\n        }\n\n        // expose to external listeners\n        this._registry.execute(\"window-event\", extendedStreamEvent);\n    }\n\n    private createWindow(windowId: string, options: WindowInfo): WindowWrapper {\n        const windowObjAndEvents: WindowWrapper = windowFactory(windowId, this.mapToWindowConstructorOptions(options), executor, this._logger, this._appManagerGetter, this._displayAPIGetter, this._channelsAPIGetter, this._agm);\n        windowStore.add(windowObjAndEvents);\n        return windowObjAndEvents;\n    }\n\n    private async focusChanged(theWindowEvents: WindowEvents, theWindow: Glue42.Windows.GDWindow, focus: boolean) {\n        theWindowEvents.handleFocusChanged(focus);\n        await windowStore.waitFor(theWindow.id);\n        if (focus) {\n            this._registry.execute(\"got-focus\", theWindow);\n        } else {\n            this._registry.execute(\"lost-focus\", theWindow);\n        }\n    }\n\n    private mapToWindowConstructorOptions(args: WindowInfo): WindowConstructorOptions {\n        // TODO\n        return {\n            name: args.name,\n            context: args.context,\n            bounds: args.bounds,\n            url: args.url,\n            title: args.title,\n            isVisible: args.isVisible,\n            focus: args.isFocused,\n            state: args.state,\n            frameColor: args.frameColor,\n            groupId: args.groupId,\n            neighbours: args.neighbors,\n            isFocused: args.isFocused,\n            isGroupHeaderVisible: args.groupHeaderVisible,\n            isCollapsed: args.isCollapsed,\n            tabGroupId: args.frameId,\n            frameId: args.frameId,\n            mode: args.mode,\n            isTabHeaderVisible: args.isTabHeaderVisible,\n            isTabSelected: args.isActiveTab,\n            settings: args.settings,\n            windowType: args.windowType,\n            zoomFactor: args.zoomFactor,\n            // focus: args.focus,\n            isLocked: args.isLocked,\n            placementSettings: args.placementSettings,\n            isSticky: args.isSticky,\n            tabIndex: args.tabIndex,\n            // settings: windowStyleAttributes,\n            frameButtons: args.frameButtons,\n            jumpListOptions: args.jumpList,\n            applicationName: args.applicationName\n        };\n    }\n\n    private getExtendedStreamEvent(streamEvent: StreamEvent): StreamEvent | ExtendedStreamEvent {\n        try {\n            // some events (e.g. Snapshot) do not have windowIds\n            if (!streamEvent.windowId) {\n                return streamEvent;\n            }\n\n            // try to get the window, if not there return the original event\n            const window = windowStore.get(streamEvent.windowId);\n            if (!window) {\n                return streamEvent;\n            }\n\n            const result: ExtendedStreamEvent = {\n                state: streamEvent.type,\n                windowName: window.API.name,\n                ...streamEvent\n            };\n\n            if (result.state === \"WindowFrameAdded\") {\n                result.state = \"TabAttached\";\n            }\n\n            if (result.state === \"StateChanged\") {\n                // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n                result.state = result.data.charAt(0).toUpperCase() + result.data.slice(1);\n            }\n\n            if (result.state === \"ButtonAdded\") {\n                result.state = \"FrameButtonAdded\";\n            }\n\n            if (result.state === \"ButtonRemoved\") {\n                result.state = \"FrameButtonRemoved\";\n            }\n\n            return result;\n        } catch (error) {\n            return streamEvent;\n        }\n    }\n}\n","import { Glue42Core } from \"@glue42/core\";\nimport { Environment } from \"./../types\";\nimport { default as GD } from \"./gd/gd\";\nimport { Glue42 } from \"../../../glue\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, channelsAPIGetter: () => Glue42.Channels, gdMajorVersion: number): Promise<Environment> => {\n    const _logger = logger;\n    if (gdMajorVersion === 2) {\n        // We are running in HC\n        _logger.trace(\"running in HC\");\n        throw new Error(\"GD2 not supported\");\n    } else if (gdMajorVersion >= 3) {\n        // We are running in GD 3\n        _logger.trace(\"running in GD 3\");\n        return new GD(agm, _logger, appManagerGetter, displayAPIGetter, channelsAPIGetter, window.glue42gd.windowId).init();\n    } else {\n        // We are running in Browser or Node, we should check which stream is available\n        // But we need to pass the container as dependency\n        return new GD(agm, _logger, appManagerGetter, displayAPIGetter, channelsAPIGetter).init();\n    }\n};\n","import callbackRegistry, { CallbackRegistry } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { default as windowStore } from \"./store\";\nimport { Executor, GroupInternal, GroupWrapper, WindowWrapper } from \"./types\";\nimport { isBoolean, isNullOrWhiteSpace, isUndefinedOrNull } from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nexport default (id: string, executor: Executor): GroupWrapper => {\n\n    const _registry: CallbackRegistry = callbackRegistry();\n\n    const _windowsId: string[] = [];\n\n    let _isHibernatedFlag = false;\n    let _isVisible = true;\n\n    // #region \"API functions\"\n\n    async function addWindow(winId: string): Promise<void> {\n        if (_windowsId.indexOf(winId) === -1) {\n            _windowsId.push(winId);\n            const win: WindowWrapper = windowStore.get(winId);\n            win.Events.handleGroupChanged(groupObject, undefined);\n            await executor.finished;\n            _registry.execute(\"window-added\", groupObject, win.API);\n        }\n    }\n\n    async function removeWindow(win: WindowWrapper): Promise<void> {\n        const index: number = _windowsId.indexOf(win.API.id);\n        if (index !== -1) {\n            _windowsId.splice(index, 1);\n            win.Events.handleGroupChanged(undefined, groupObject);\n            await executor.finished;\n            _registry.execute(\"window-removed\", groupObject, win.API);\n        }\n    }\n\n    function find(window: string | Glue42.Windows.GDWindow, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        let winId: string;\n        if (typeof window === \"string\") {\n            winId = window;\n        } else if (!isUndefinedOrNull(window)) {\n            winId = window.id;\n        }\n\n        const win = _mapToWindowObject(winId);\n        if (win) {\n            if (typeof success === \"function\") {\n                success(win);\n            }\n            return win;\n        } else {\n            if (typeof error === \"function\") {\n                error(`No window with ID: ${winId}`);\n            }\n        }\n    }\n\n    function windows(success?: (windows: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const mappedWindows: Glue42.Windows.GDWindow[] = _mapToWindowObjects();\n        if (typeof success === \"function\") {\n            success(mappedWindows);\n        }\n        return mappedWindows;\n    }\n\n    async function execute(command: string, options: any & { windowId: string }, ...keys: string[]): Promise<Glue42.Windows.Group> {\n        await executor.execute<Glue42.Windows.Group>(command, options, ...keys);\n        return groupObject;\n    }\n\n    // #endregion \"API functions\"\n\n    // #region \"Stream function\"\n\n    function handleGroupHeaderVisibilityChanged(windowInfo: any): void {\n        _registry.execute(\"header-visibility-changed\", groupObject);\n    }\n\n    function handleGroupVisibilityChanged(visibile: boolean): void {\n        _isVisible = visibile;\n        _registry.execute(\"group-visibility-changed\", groupObject);\n    }\n\n    function handleGroupHibernateChanged(isHibernatedFlag: boolean): void {\n        _isHibernatedFlag = isHibernatedFlag;\n    }\n\n    // #endregion \"Stream function\"\n\n    // #region \"Internal function\"\n\n    function _mapToWindowObjects(): Glue42.Windows.GDWindow[] {\n        const winObjects: Glue42.Windows.GDWindow[] = [];\n\n        _windowsId.forEach((winId) => {\n            const windowObject = _mapToWindowObject(winId);\n            if (typeof windowObject !== \"undefined\") {\n                winObjects.push(windowObject);\n            }\n        });\n\n        return winObjects;\n    }\n\n    function _mapToWindowObject(windowId: string): Glue42.Windows.GDWindow {\n        return windowStore.get(windowId) ? windowStore.get(windowId).API : undefined;\n    }\n\n    function _getGroupHeaderVisibility(): boolean {\n        // if one of the windows has a flag hideGroupHeader the group header should be off.\n        const windowWithHiddenHeader = _mapToWindowObjects().find((w) => !w.isGroupHeaderVisible);\n        const _isGroupHeaderVisible = windowWithHiddenHeader === undefined;\n\n        return _isGroupHeaderVisible;\n    }\n\n    function _isHibernated(): boolean {\n        return _isHibernatedFlag;\n    }\n\n    // #endregion \"Internal function\"\n\n    // #region \"Events\"\n\n    function onHeaderVisibilityChanged(callback?: (group: Glue42.Windows.Group) => void): () => void {\n        return _registry.add(\"header-visibility-changed\", callback);\n    }\n\n    function onWindowAdded(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function onWindowRemoved(callback?: (group: Glue42.Windows.Group, window: Glue42.Windows.GDWindow) => void): () => void {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    function onVisibilityChanged(callback?: (group: Glue42.Windows.Group) => void): () => void {\n        if (!callback) {\n            throw new Error(\"Callback argument is required\");\n        }\n        if (callback && typeof callback !== \"function\") {\n            throw new Error(\"Callback argument must be a function\")\n        }\n        return _registry.add(\"group-visibility-changed\", callback);\n    }\n\n    // #endregion \"Events\"\n\n    // #region \"API\"\n\n    const groupObject: Glue42.Windows.Group = {\n        id,\n        get windows() {\n            return windows();\n        },\n        find,\n        get isHeaderVisible() {\n            return _getGroupHeaderVisibility();\n        },\n        get isHibernated() {\n            return _isHibernated();\n        },\n        get isVisible() {\n            return _isVisible;\n        },\n        showHeader: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"setGroupHeaderVisibility\", { windowId: _windowsId[0], options: { toShow: true } }, ..._windowsId.map((w) => `GroupHeaderVisibilityChanged-${w}`));\n            }, success, error);\n        },\n        hideHeader: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"setGroupHeaderVisibility\", { windowId: _windowsId[0], options: { toShow: false } }, ..._windowsId.map((w) => `GroupHeaderVisibilityChanged-${w}`));\n            }, success, error);\n        },\n        getTitle: async () => {\n            const r = await executor.execute<{ title: string }>(\"getGroupTitle\", { windowId: _windowsId[0] });\n            return r.title;\n        },\n        setTitle: async (title: string) => {\n            if (isNullOrWhiteSpace(title)) {\n                throw new Error(\"`title` must not be null or undefined.\");\n            }\n            return execute(\"setGroupTitle\", { windowId: _windowsId[0], options: { title } });\n        },\n        capture: (captureOptions: Glue42.Windows.CaptureOptions) => {\n            return executor.captureGroup(_windowsId, captureOptions);\n        },\n        maximize: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"maximizeGroup\", { windowId: _windowsId[0] }, ..._windowsId.map((w) => `StateChanged-${w}`));\n            }, success, error);\n        },\n        restore: (success, error) => {\n            return utils.callbackifyPromise(() => {\n                return execute(\"restoreGroup\", { windowId: _windowsId[0] }, ..._windowsId.map((w) => `StateChanged-${w}`));\n            }, success, error);\n        },\n        show: (activate?: boolean) => {\n            if (!isUndefinedOrNull(activate) && !isBoolean(activate)) {\n                throw new Error(\"Activate flag must be a boolean!\");\n            }\n            activate = !isUndefinedOrNull(activate) ? activate : true;\n            return executor.executeGroup(\"showGroup\", {\n                groupId: id,\n                options: { activate }\n            });\n        },\n        hide: () => {\n            return executor.executeGroup(\"hideGroup\", {\n                groupId: id\n            });\n        },\n        onHeaderVisibilityChanged,\n        onWindowAdded,\n        onWindowRemoved,\n        onVisibilityChanged\n    };\n\n    const internal: GroupInternal = {\n        get windows() {\n            return _windowsId;\n        },\n        addWindow,\n        removeWindow,\n        handleGroupHeaderVisibilityChanged,\n        handleGroupVisibilityChanged,\n        handleGroupHibernateChanged\n    };\n\n    return {\n        groupAPI: groupObject,\n        groupInternal: internal,\n    };\n\n    // #endregion \"API\"\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport callbackRegistry, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { isBoolean, isNullOrWhiteSpace, isUndefinedOrNull } from \"../activity/helpers/util\";\nimport { CompositionChangedData } from \"./environment/gd/types\";\nimport groupFactory from \"./group\";\nimport { default as windowStore } from \"./store\";\nimport {\n    Environment,\n    GroupsInternal,\n    GroupsWrapper,\n    GroupWrapper,\n    WindowWrapper\n} from \"./types\";\nimport executor from \"./environment/gd/executor\";\n\nexport default (environment: Environment, logger: Glue42Core.Logger.API): GroupsWrapper => {\n    const _registry: CallbackRegistry = callbackRegistry();\n    const _groups: { [key: string]: GroupWrapper } = {};\n    let heardForWindowsCounter = -1;\n\n    // Getting already existing windows and create Group API for each window\n    const windows = windowStore.list;\n    Object.keys(windows).forEach((k) => {\n        const win = windows[k];\n        const groupId = win.API.groupId;\n        const winId = win.API.id;\n        // hidden windows doesn't have groupId\n        if (!isNullOrWhiteSpace(groupId)) {\n            addWindow(groupId, winId);\n        }\n    });\n\n    windowStore.onRemoved((w) => {\n        const group = findGroupWrapperByWindow(w.API);\n        removeWindow(group, w);\n    });\n\n    environment.onCompositionChanged((windowInfo: CompositionChangedData) => {\n        handleCompositionChanged(windowInfo);\n    });\n\n    environment.onGroupHeaderVisibilityChanged((windowInfo) => {\n        const windowId = windowInfo.windowId;\n        const group: Glue42.Windows.Group = findGroupByWindow(windowId);\n        if (typeof group !== \"undefined\") {\n            const groupEvents: GroupWrapper = _groups[group.id];\n\n            if (heardForWindowsCounter === -1) {\n                heardForWindowsCounter = group.windows.length;\n            }\n\n            heardForWindowsCounter--;\n            if (heardForWindowsCounter === 0) {\n                heardForWindowsCounter = -1;\n                groupEvents.groupInternal.handleGroupHeaderVisibilityChanged(windowInfo);\n            }\n        }\n    });\n\n    environment.onGroupVisibilityChanged((data) => {\n        const groupEvents: GroupWrapper = _groups[data.groupId];\n        if (groupEvents) {\n            groupEvents.groupInternal.handleGroupVisibilityChanged(data.visible);\n        }\n    });\n\n    environment.onGroupStateChanged((data) => {\n        const groupWrapper = _groups[data.groupId];\n        if (data.state === \"hibernated\") {\n            if (groupWrapper && groupWrapper.groupAPI) {\n                groupWrapper.groupInternal.handleGroupHibernateChanged(true);\n            }\n            _registry.execute(\"group-hibernated\", data.groupId);\n        } else if (data.state === \"resumed\") {\n            if (groupWrapper && groupWrapper.groupAPI) {\n                groupWrapper.groupInternal.handleGroupHibernateChanged(false);\n            }\n            _registry.execute(\"group-resumed\", groupWrapper.groupAPI);\n        }\n    });\n\n    // Methods\n\n    function my(): Glue42.Windows.Group {\n        return findGroupByWindow(environment.my());\n    }\n\n    function list(success?: (groups: Glue42.Windows.Group[]) => void): Glue42.Windows.Group[] {\n        const result: Glue42.Windows.Group[] = Object.keys(_groups).map((groupId) => {\n            if (_groups[groupId]) {\n                return _groups[groupId].groupAPI;\n            }\n\n        });\n\n        if (typeof success === \"function\") {\n            success(result);\n        }\n        return result;\n    }\n\n    function findGroupByWindow(winId: string | Glue42.Windows.GDWindow, success?: (group: Glue42.Windows.Group) => void, error?: (error: string) => void): Glue42.Windows.Group {\n        let windowId: string;\n        if (typeof winId === \"string\") {\n            windowId = winId;\n        } else if (!isUndefinedOrNull(winId)) {\n            windowId = winId.id;\n        }\n        const result = Object.values(_groups).find((groupObj) => {\n            const group: Glue42.Windows.Group = groupObj.groupAPI;\n            const wins = group.windows.filter((w) => w.id === windowId);\n            return wins.length;\n        });\n        if (result) {\n            if (typeof success === \"function\") {\n                success(result.groupAPI);\n            }\n            return result.groupAPI;\n        } else {\n            if (typeof error === \"function\") {\n                error(`Cannot find the group of the window.`);\n            }\n        }\n    }\n\n    function waitForGroup(groupId: string): Promise<Glue42.Windows.Group> {\n        if (!groupId) {\n            return Promise.reject(`groupId must be defined`);\n        }\n        return new Promise((res, rej) => {\n            const groupWrapper = _groups[groupId];\n            if (groupWrapper) {\n                res(groupWrapper.groupAPI);\n            } else {\n                const un = onGroupAdded((group) => {\n                    if (group.id === groupId) {\n                        un();\n                        res(group);\n                    }\n                });\n            }\n        });\n    }\n\n    async function resume(groupId: string, activate?: boolean): Promise<void> {\n        if (!isUndefinedOrNull(activate) && !isBoolean(activate)) {\n            throw new Error(\"Activate flag must be a boolean!\");\n        }\n        activate = !isUndefinedOrNull(activate) ? activate : true;\n        await executor.executeGroup(\"resumeGroup\", {\n            groupId,\n            options: { activate }\n        });\n    }\n\n    async function hibernate(groupId: string): Promise<string> {\n        await executor.executeGroup(\"hibernateGroup\", {\n            groupId\n        });\n        return groupId;\n    }\n\n    // Events\n    function onGroupAdded(callback: (group: Glue42.Windows.Group) => void): UnsubscribeFunction {\n        return _registry.add(\"group-added\", callback);\n    }\n\n    function onGroupRemoved(callback: (group: Glue42.Windows.Group) => void): UnsubscribeFunction {\n        return _registry.add(\"group-removed\", callback);\n    }\n\n    function onWindowMoved(callback?: (windowId: string, oldTabGroupId: string, newGroupId: string) => void): UnsubscribeFunction {\n        return _registry.add(\"window-moved\", callback);\n    }\n\n    function onHibernated(callback?: (groupId: string) => void): () => void {\n        if (!callback) {\n            throw new Error(\"Callback argument is required\");\n        }\n        if (callback && typeof callback !== \"function\") {\n            throw new Error(\"Callback argument must be a function\")\n        }\n        return _registry.add(\"group-hibernated\", callback);\n    }\n\n    function onResumed(callback?: (group: Glue42.Windows.Group) => void): () => void {\n        if (!callback) {\n            throw new Error(\"Callback argument is required\");\n        }\n        if (callback && typeof callback !== \"function\") {\n            throw new Error(\"Callback argument must be a function\")\n        }\n        return _registry.add(\"group-resumed\", callback);\n    }\n\n    // Private\n    function createOrGet(groupId: string): GroupWrapper {\n        if (!_groups.hasOwnProperty(groupId)) {\n\n            const createdGroupWrapper: GroupWrapper = groupFactory(groupId, environment.executor);\n            _groups[groupId] = createdGroupWrapper;\n\n            const group = createdGroupWrapper.groupAPI;\n            _registry.execute(\"group-added\", group);\n\n            return createdGroupWrapper;\n        } else {\n            return _groups[groupId];\n        }\n    }\n\n    function deleteIfEmpty(groupWrapper: GroupWrapper): void {\n        const group = groupWrapper.groupAPI;\n        if (group.windows.length === 0) {\n            delete _groups[group.id];\n            _registry.execute(\"group-removed\", group);\n        }\n    }\n\n    // hidden window doesn't have a groupId\n    function addWindow(groupId: string, winId: string) {\n        const group = createOrGet(groupId);\n        group.groupInternal.addWindow(winId);\n        return group;\n    }\n\n    function removeWindow(group: GroupWrapper, win: WindowWrapper) {\n        if (!group) {\n            return;\n        }\n        group.groupInternal.removeWindow(win);\n        deleteIfEmpty(group);\n    }\n\n    function handleCompositionChanged(state: CompositionChangedData): void {\n        const groupId = state.groupId;\n        const windowId = state.windowId;\n        const win = windowStore.get(windowId);\n        if (!win) {\n            return;\n        }\n        const currentGroup = findGroupWrapperByWindow(win.API);\n        // if the window's visibility is changed to hidden, remove from the group\n        // or the window is closed.\n        if (isUndefinedOrNull(groupId)) {\n            removeWindow(currentGroup, win);\n            return;\n        }\n        // if the window's visibility is changed to visible, addOrCreate the group\n        if (isUndefinedOrNull(currentGroup) && !isUndefinedOrNull(groupId)) {\n            addWindow(groupId, win.API.id);\n            return;\n        }\n\n        if (currentGroup.groupAPI.id !== groupId) {\n            moveWindow(win, currentGroup.groupAPI.id, groupId);\n        }\n    }\n\n    function moveWindow(win: WindowWrapper, from: string, to: string) {\n        const winId = win.API.id;\n        const fromGroup = _groups[from];\n        removeWindow(fromGroup, win);\n        const toGroup = addWindow(to, winId);\n        win.Events.handleGroupChanged(toGroup.groupAPI, fromGroup.groupAPI);\n        _registry.execute(\"window-moved\", winId, from, to);\n    }\n\n    function findGroupWrapperByWindow(winId: string | Glue42.Windows.GDWindow): GroupWrapper {\n        let windowId: string;\n        if (typeof winId === \"string\") {\n            windowId = winId;\n        } else if (!isUndefinedOrNull(winId)) {\n            windowId = winId.id;\n        }\n        return Object.values(_groups).find((groupObj) => {\n            const groupInternal = groupObj.groupInternal;\n            const wins = groupInternal.windows.filter((id) => id === windowId);\n            return wins.length;\n        });\n    }\n\n    // #region \"API\"\n\n    const groups = {\n        get my() {\n            return my();\n        },\n        list,\n        findGroupByWindow,\n        waitForGroup,\n        onGroupAdded,\n        onGroupRemoved,\n        hibernate,\n        resume,\n        onHibernated,\n        onResumed\n    };\n\n    // #endregion \"API\n\n    const events: GroupsInternal = { onWindowMoved };\n\n    return {\n        groupsAPI: groups,\n        groupsEvents: events,\n    };\n};\n","import { Glue42Core } from \"@glue42/core\";\nimport { CallbackRegistry, UnsubscribeFunction, default as CallbackFactory } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\nimport { Environment, GroupsWrapper, WindowWrapper } from \"./types\";\nimport jumpListManager from \"./jumpList/manager\";\n\nimport { default as envDetector } from \"./environment/detector\";\nimport groupsFactory from \"./groups\";\nimport { default as windowStore } from \"./store\";\nimport executor from \"./environment/gd/executor\";\nimport * as util from \"../activity/helpers/util\";\nimport utils from \"../utils\";\n\nexport default (agm: Glue42Core.AGM.API, logger: Glue42Core.Logger.API, appManagerGetter: () => Glue42.AppManager.API, displayAPIGetter: () => Glue42.Displays.API, channelsGetter: () => Glue42.Channels, gdMajorVersion: number): Glue42.Windows.API => {\n    const _registry: CallbackRegistry = CallbackFactory();\n    const _logger = logger;\n    let groups: GroupsWrapper;\n    let environment: Environment;\n\n    windowStore.init(_logger);\n\n    const isReady = new Promise<void>((resolve, reject) => {\n        envDetector(agm, _logger, appManagerGetter, displayAPIGetter, channelsGetter, gdMajorVersion)\n            .then((env) => {\n                environment = env;\n                groups = groupsFactory(env, _logger);\n                jumpListManager.init(env.executor, agm, _logger);\n                resolve();\n            })\n            .catch((e: Error) => {\n                const err = `Timed out waiting for connection to Glue42 Enterprise: Error: ${e.message}`;\n                _logger.error(err, e);\n                reject(new Error(err));\n            });\n    });\n\n    function ready() {\n        return isReady;\n    }\n\n    function my(): Glue42.Windows.GDWindow {\n        const myWindow = windowStore.getIfReady(environment.my());\n        return myWindow ? myWindow.API : undefined;\n    }\n\n    function open(name: string, url: string, options?: Glue42.Windows.WindowSettings, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Promise<Glue42.Windows.GDWindow> {\n        return utils.callbackifyPromise(() => {\n            if (util.isNullOrWhiteSpace(name)) {\n                throw new Error(\"The window name is missing.\");\n            }\n            if (util.isNullOrWhiteSpace(url)) {\n                throw new Error(\"The window URL is missing.\");\n            }\n\n            if (!util.isUndefinedOrNull(options)) {\n                const optionsAsAny = options as any;\n                for (const prop of [\"minHeight\", \"maxHeight\", \"minWidth\", \"maxWidth\", \"width\", \"height\", \"top\", \"left\"]) {\n                    if (prop in optionsAsAny) {\n                        const value = optionsAsAny[prop];\n                        if (util.isUndefinedOrNull(value)) {\n                            delete optionsAsAny[prop];\n                            continue;\n                        }\n                        if (!util.isNumber(value)) {\n                            const errMessage = `${prop} must be a number`;\n                            throw new Error(errMessage);\n                        }\n                        if (optionsAsAny[prop] === \"width\" || optionsAsAny[prop] === \"height\") {\n                            if (value <= 0) {\n                                const errMessage = `${prop} must be a positive number`;\n                                throw new Error(errMessage);\n                            }\n                        }\n                    }\n                }\n            }\n            return environment.open(name, url, options);\n        }, success, error);\n    }\n\n    function find(name: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing = Object.keys(windows).reduce<Glue42.Windows.GDWindow[]>((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (window?.API?.name === name) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n\n        const win = windowsForListing[0];\n        if (win) {\n            if (typeof success === \"function\") {\n                success(windowsForListing[0]);\n            }\n            return windowsForListing[0];\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with name:\" + name);\n            }\n        }\n    }\n\n    function findById(id: string, success?: (window: Glue42.Windows.GDWindow) => void, error?: (error: string) => void): Glue42.Windows.GDWindow {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n        const windowsForListing = Object.keys(windows).reduce<Glue42.Windows.GDWindow[]>((memo, winId) => {\n            const window: WindowWrapper = windows[winId];\n            if (typeof window !== \"undefined\" && window.API.id === id) {\n                memo.push(window.API);\n            }\n            return memo;\n        }, []);\n        const win = windowsForListing[0];\n        if (win) {\n            if (typeof success === \"function\") {\n                success(windowsForListing[0]);\n            }\n            return windowsForListing[0];\n        } else {\n            if (typeof error === \"function\") {\n                error(\"There is no window with such id:\" + id);\n            }\n        }\n    }\n\n    function list(success?: (window: Glue42.Windows.GDWindow[]) => void): Glue42.Windows.GDWindow[] {\n        const windows: { [key: string]: WindowWrapper } = windowStore.list;\n\n        const windowsForListing: Glue42.Windows.GDWindow[] = Object.keys(windows)\n            .map((k) => {\n                return windows[k].API;\n            });\n\n        if (typeof success !== \"function\") {\n            return windowsForListing;\n        }\n\n        success(windowsForListing);\n    }\n\n    function configure(options: Glue42.Windows.WindowsConfiguration): Promise<void> {\n        const win = my();\n        const winId = win ? win.id : \"\";\n        return executor.configure(winId, options);\n    }\n\n    function windowAdded(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-added\", callback);\n    }\n\n    function windowRemoved(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        return _registry.add(\"window-removed\", callback);\n    }\n\n    function tabAttached(callback: (tabWindow: Glue42.Windows.GDWindow, newTabGroupId: string, tabHeaderVisible: boolean) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.tabAttached(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function tabDetached(callback: (window: Glue42.Windows.GDWindow, tabGroupId: string, oldTabGroupId: string) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.tabDetached(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowFrameColorChanged(callback: (window: Glue42.Windows.GDWindow) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowFrameColorChanged(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowGotFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowGotFocus(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onWindowLostFocus(callback: (window: Glue42.Windows.GDWindow) => void) {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onWindowLostFocus(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function onEvent(callback: (stream: any) => void): UnsubscribeFunction {\n        let unsubFunc: UnsubscribeFunction;\n        let unsubscribed = false;\n        isReady.then(() => {\n            if (unsubscribed) {\n                return;\n            }\n            unsubFunc = environment.onEvent(callback);\n        });\n\n        return () => {\n            unsubscribed = true;\n            if (unsubFunc) {\n                unsubFunc();\n            }\n        };\n    }\n\n    function createFlydown(targetId: string, config: Glue42.Windows.FlydownOptions): Promise<Glue42.Windows.Flydown> {\n        return environment.createFlydown(targetId, config);\n    }\n\n    function showPopup(targetId: string, config: Glue42.Windows.PopupOptions): Promise<void> {\n        return environment.showPopup(targetId, config);\n    }\n\n    function handleWindowAdded(w: WindowWrapper) {\n        _registry.execute(\"window-added\", w.API);\n    }\n\n    function handleWindowRemoved(w: WindowWrapper) {\n        _registry.execute(\"window-removed\", w.API);\n    }\n\n    windowStore.onReadyWindow(handleWindowAdded);\n    windowStore.onRemoved(handleWindowRemoved);\n\n    // The API itself\n    return {\n        my,\n        open,\n        find,\n        findById,\n        list,\n        ready,\n        onWindowAdded: windowAdded,\n        windowAdded,\n        onWindowRemoved: windowRemoved,\n        windowRemoved,\n        onTabAttached: tabAttached,\n        onTabDetached: tabDetached,\n        onWindowFrameColorChanged,\n\n        get groups() {\n            return groups.groupsAPI;\n        },\n        onWindowGotFocus,\n        onWindowLostFocus,\n        onEvent,\n        createFlydown,\n        showPopup,\n        configure\n    };\n};\n","import { Glue42 } from \"../../glue\";\n\n// provides a unified way to access layouts array\nexport class LayoutStore {\n    private layouts: Glue42.Layouts.Layout[] = [];\n\n    public removeWhere(condition: (l: Glue42.Layouts.Layout) => boolean) {\n        this.layouts = this.layouts.filter(condition);\n    }\n\n    public removeAll() {\n        this.layouts = [];\n    }\n\n    public add(item: Glue42.Layouts.Layout) {\n        this.layouts.push(item);\n    }\n\n    public get all(): Glue42.Layouts.Layout[] {\n        return this.layouts;\n    }\n\n    public where(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout[] {\n        return this.layouts.filter(condition);\n    }\n\n    public first(condition: (l: Glue42.Layouts.Layout) => boolean): Glue42.Layouts.Layout {\n        return this.where(condition)[0];\n    }\n}\n\nexport default new LayoutStore();\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry } from \"callback-registry\";\nimport { LayoutsLibConfiguration } from \"./types\";\n\nconst SaveContextMethodName = \"T42.HC.GetSaveContext\";\ndeclare let htmlContainer: any;\n\n/**\n * Logic for apps that want to provide custom context on save\n */\nexport default class ContextProvider {\n\n    private interop: Glue42.Interop.API;\n\n    constructor(private config: LayoutsLibConfiguration, private activitiesGetter: () => Glue42.Activities.API, private callbacks: CallbackRegistry, private logger: Glue42.Logger.API) {\n        this.interop = config.agm;\n        this.registerRequestMethods();\n    }\n\n    public onSaveRequested(callback: (info?: Glue42.Layouts.SaveRequestContext) => Glue42.Layouts.SaveRequestResponse) {\n        return this.callbacks.add(\"saveRequested\", callback);\n    }\n\n    private isActivityOwner() {\n        // fallback for GD2 - remove once the bellow code is tested\n        if (typeof htmlContainer !== \"undefined\") {\n            const context = htmlContainer.getContext();\n            return context && context._t42 && context._t42.activityIsOwner;\n        }\n\n        // check if we're the activity owners\n        const activities = this.activitiesGetter();\n        if (!activities) {\n            return false;\n        }\n\n        if (!activities.inActivity) {\n            return false;\n        }\n\n        const myWindow = activities.my.window;\n        const myActivity = activities.my.activity;\n\n        if (!myActivity && !myWindow) {\n            return false;\n        }\n\n        return myActivity.owner.id === myWindow.id;\n    }\n\n    private registerRequestMethods() {\n        this.interop.register<Glue42.Layouts.SaveRequestContext>(SaveContextMethodName, (args) => {\n            const usersCbs = this.callbacks.execute(\"saveRequested\", args);\n            if (usersCbs?.length > 1) {\n                this.logger.warn(`Multiple subscriptions for \"glue.layouts.onSaveRequested\" - only the first one will be used`);\n            }\n            const requestResult = usersCbs[0] as Glue42.Layouts.SaveRequestResponse;\n            const autoSaveWindowContext = this.config.autoSaveWindowContext;\n\n            if (typeof autoSaveWindowContext === \"boolean\" && autoSaveWindowContext) {\n                return { autoSaveWindowContext };\n            } else if (Array.isArray(autoSaveWindowContext) && autoSaveWindowContext.length > 0) {\n                return { autoSaveWindowContext };\n            }\n            // always include the window context\n            const result: Glue42.Layouts.SaveRequestResponse = { windowContext: requestResult?.windowContext, activityContext: undefined };\n\n            // if we're the activity owner put the context too\n            if (this.isActivityOwner()) {\n                result.activityContext = requestResult?.activityContext;\n            }\n\n            return result;\n        });\n    }\n}\n","// A simple transformation that makes object to start with lowercase\n// Note that this is not full implementation as it supports only:\n// undefined, null, arrays, number, string, bool. Anything out of this\n// list is considered Object\nexport default function transformACSLayout(something: { [key: string]: any }): { [key: string]: any } {\n    if (!something) {\n        return something;\n    }\n\n    if (Array.isArray(something)) {\n        return something.map((item) => {\n            return transformACSLayout(item);\n        });\n    }\n\n    if (typeof something === \"string\" || typeof something === \"number\" || typeof something === \"boolean\") {\n        return something;\n    }\n\n    const initial: { [key: string]: any } = {};\n    return Object.keys(something).reduce((accumulator, current) => {\n        const value = something[current];\n        const convertedValue = transformACSLayout(value);\n\n        let key = current;\n        if (current[0]?.toLowerCase() !== current[0]) {\n            key = current[0].toLowerCase() + current.substr(1);\n        }\n\n        accumulator[key] = convertedValue;\n        return accumulator;\n    }, initial);\n}\n","import { Glue42 } from \"../../glue\";\n\nexport default class LayoutImpl implements Glue42.Layouts.Layout {\n    /** Name of the layout */\n    public name: string;\n\n    /** Type of the layout */\n    public type: Glue42.Layouts.LayoutType;\n\n    /** Array of components describing the applications that are saved in the layout */\n    public components: Glue42.Layouts.LayoutComponent[];\n\n    /** Context passed when the layout was saved */\n    public context: any;\n\n    /** Metadata passed when the layout was saved */\n    public metadata: any;\n\n    /** Version of the layout */\n    public version: number;\n\n    /** Displays of the layout */\n    public displays: any;\n\n    constructor(data: any) {\n        this.name = data.name;\n        this.type = data.type;\n        this.components = data.components;\n        this.context = data.context;\n        this.metadata = data.metadata;\n        this.version = data.version;\n        this.displays = data.displays;\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport { LayoutsStream, HibernationResumeMessage, UpdateLayoutComponentContextMessage, LayoutsLibConfiguration } from \"./types\";\nimport store from \"./store\";\nimport generate from \"shortid\";\nimport { ACSSaveLayoutMessage, ACSRestoreMessage, ACSRestoreOptionsMessage, ACSMessage, ACSRenameMessage, ACSRemoveLayoutMessage, ACSImportMessage, ExportResultMessage } from \"./types\";\nimport { Glue42Core } from \"@glue42/core\";\nimport ContextProvider from \"./contextProvider\";\nimport transformACSLayout from \"./transform\";\nimport LayoutImpl from \"./layout\";\nimport { isBoolean, isNullOrWhiteSpace, isObject, isUndefinedOrNull } from \"../activity/helpers/util\";\n\nconst LayoutsCommandMethod = \"T42.ACS.Command\";\n\nexport default class LayoutsAPIImpl implements Glue42.Layouts.API {\n    private appManager: Glue42.AppManager.API;\n    private provider: ContextProvider;\n    private isRegisterMethodForLayoutModified = false;\n\n    constructor(private config: LayoutsLibConfiguration, private stream: LayoutsStream, private callbacks: CallbackRegistry, logger: Glue42.Logger.API) {\n        this.appManager = config.appManager;\n        this.provider = new ContextProvider(config, config.activityGetter, callbacks, logger);\n        stream.subscribe();\n    }\n\n    public async setDefaultGlobal(name: string): Promise<void> {\n        const methodName = \"SelectDefaultLayout\";\n        await this.invokeMethodCore(methodName, { name });\n        return;\n    }\n\n    public async clearDefaultGlobal(): Promise<void> {\n        const methodName = \"DeselectDefaultLayout\";\n        this.invokeMethodCore(methodName);\n        return;\n    }\n\n    public async getDefaultGlobal(): Promise<Glue42.Layouts.Layout | undefined> {\n        const methodName = \"GetDefaultLayout\";\n        const result = await this.invokeMethodCore(methodName);\n        const layout = result.returned;\n        if (!layout) {\n            return undefined;\n        }\n        if (this.isSlimMode()) {\n            return layout;\n        }\n        return this.list().find((l) => l.name === layout.name && l.type === \"Global\");\n    }\n\n    public ready(): Promise<void> {\n        if (this.config.mode === \"fullWaitSnapshot\") {\n            return this.stream.gotSnapshot;\n        }\n        return this.stream.ready;\n    }\n\n    public save(layout: Glue42.Layouts.NewLayoutOptions): Promise<Glue42.Layouts.Layout> {\n        return new Promise<Glue42.Layouts.Layout>((resolve, reject) => {\n\n            this.verifyNotSlimMode();\n\n            if (isUndefinedOrNull(layout)) {\n                return reject(new Error(\"layout is required\"));\n            }\n\n            if (isNullOrWhiteSpace(layout.name)) {\n                return reject(new Error(\"layout.name argument is required\"));\n            }\n\n            if (isNullOrWhiteSpace(layout.type)) {\n                layout.type = \"Global\";\n            }\n\n            if (!isNullOrWhiteSpace(layout.activityId)) {\n                layout.type = \"Activity\";\n            }\n\n            const layoutObject: ACSSaveLayoutMessage = {\n                name: layout.name,\n                type: layout.type,\n                context: layout.context ?? {},\n                metadata: layout.metadata ?? {},\n                options: {},\n            };\n\n            if (layout.type === \"Activity\") {\n                let actId = layout.activityId;\n                if (!actId) {\n                    if (!this.appManager.myInstance.inActivity) {\n                        return reject(new Error(\"Current application is not in activity. Cannot save activity layout for it.\"));\n                    }\n                    actId = this.appManager.myInstance.activityId;\n                }\n                layoutObject.activityId = actId;\n            } else if (layout.type === \"Global\") {\n                if (Array.isArray(layout.ignoreInstances)) {\n                    layoutObject.options.ignoreInstances = layout.ignoreInstances;\n                }\n                if (Array.isArray(layout.instances)) {\n                    layoutObject.options.instances = layout.instances;\n                }\n            } else {\n                return reject(new Error(`layout type ${layout.type} is not supported`));\n            }\n\n            this.invokeMethodAndTrack(\"SaveLayout\", layoutObject, resolve, reject);\n        });\n    }\n\n    public restore(options: Glue42.Layouts.RestoreOptions): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n            // TODO add validations...\n            if (isUndefinedOrNull(options)) {\n                return reject(new Error(\"options argument is required\"));\n            }\n\n            if (isNullOrWhiteSpace(options.name)) {\n                return reject(new Error(\"options.name argument is required\"));\n            }\n\n            if (isNullOrWhiteSpace(options.type)) {\n                options.type = \"Global\";\n            }\n\n            if (!isNullOrWhiteSpace(options.activityIdToJoin)) {\n                options.type = \"Activity\";\n            }\n\n            if (options.type === \"Activity\") {\n                if (isUndefinedOrNull(options.setActivityContext)) {\n                    options.setActivityContext = true;\n                }\n                if (typeof options.setActivityContext !== \"boolean\") {\n                    return reject(new Error(\"`setActivityContext` must hold a boolean value.\"));\n                }\n                options.activityIdToJoin = options.activityIdToJoin ?? this.appManager.myInstance.activityId;\n            }\n\n            // backwards compatibility\n            if (!isUndefinedOrNull(options.closeRunningInstance)) {\n                options.closeRunningInstances = options.closeRunningInstance;\n            }\n\n            if (isUndefinedOrNull(options.closeRunningInstances)) {\n                options.closeRunningInstances = true;\n            }\n\n            if (!isBoolean(options.closeRunningInstances)) {\n                return reject(new Error(\"`closeRunningInstances` must hold a boolean value.\"));\n            }\n\n            if (isUndefinedOrNull(options.closeMe)) {\n                options.closeMe = options.closeRunningInstances;\n            }\n\n            if (!isBoolean(options.closeMe)) {\n                return reject(new Error(\"`closeMe` must hold a boolean value.\"));\n            }\n\n            if (!isUndefinedOrNull(options.context) && !isObject(options.context)) {\n                return reject(new Error(\"`context` must hold an object value.\"));\n            }\n\n            if (!isUndefinedOrNull(options.timeout) && typeof options.timeout !== \"number\") {\n                return reject(new Error(\"`timeout` must hold an number value.\"));\n            }\n\n            options.context = options.context ?? {};\n\n            const restoreOptions: ACSRestoreOptionsMessage = {\n                activityToJoin: options.activityIdToJoin,\n                setActivityContext: options.setActivityContext,\n                ignoreActivityWindowTypes: options.ignoreActivityWindowTypes,\n                // not used in GD3\n                // restoreActivityOwner: options.restoreActivityOwner,\n                // closeOldWindows: options.closeRunningInstance,\n                reuseExistingWindows: options.reuseWindows,\n\n                closeRunningInstances: options.closeRunningInstances, // new\n                excludeFromClosing: options.closeMe ? [] : [this.appManager.myInstance?.id]\n            };\n\n            const arg: ACSRestoreMessage = {\n                type: options.type,\n                name: options.name,\n                context: options.context,\n                options: restoreOptions\n            };\n            if (options.timeout) {\n                arg.timeout = options.timeout;\n            }\n\n            this.invokeMethodAndTrack(\"RestoreLayout\", arg, resolve, reject, true);\n        });\n    }\n\n    public remove(type: string, name: string): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!name) {\n                return reject(new Error(\"name argument is required\"));\n            }\n\n            if (!type) {\n                return reject(new Error(\"type argument is required\"));\n            }\n\n            const msg: ACSRemoveLayoutMessage = {\n                type,\n                name,\n            };\n\n            this.invokeMethodAndTrack(\"RemoveLayout\", msg, resolve, reject);\n        });\n    }\n\n    public list(): Glue42.Layouts.Layout[] {\n        this.verifyNotSlimMode();\n        return store.all;\n    }\n\n    public import(layouts: Glue42.Layouts.Layout[], mode?: Glue42.Layouts.ImportMode): Promise<Glue42.Layouts.ImportLayoutResult> {\n        return new Promise<Glue42.Layouts.ImportLayoutResult>((resolve, reject) => {\n            this.verifyNotSlimMode();\n            if (!isUndefinedOrNull(mode)) {\n                if (mode !== \"merge\" && mode !== \"replace\") {\n                    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                    return reject(new Error(`${mode} is not supported - only \"merge\" and \"replace\"`));\n                }\n            }\n            if (!Array.isArray(layouts)) {\n                return reject(new Error(\"layouts arguments is not an array\"));\n            }\n            const msg: ACSImportMessage = {\n                mode: mode || \"replace\",\n                layouts\n            };\n\n            this.invokeMethodAndTrack(\"ImportLayouts\", msg, resolve, reject, true);\n        });\n    }\n\n    public export(layoutType?: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.Layout[]> {\n        return new Promise<Glue42.Layouts.Layout[]>((resolve, reject) => {\n            const handleResult = (result: ExportResultMessage) => {\n                let layouts: Glue42.Layouts.Layout[] = this.getObjectValues(result.Layouts).map((t) => new LayoutImpl(transformACSLayout(t)));\n                if (layoutType) {\n                    layouts = layouts.filter((l) => l.type === layoutType);\n                }\n                resolve(layouts);\n            };\n\n            this.invokeMethodAndTrack(\"ExportLayouts\", {}, handleResult, reject, true);\n        });\n    }\n\n    public rename(layout: Glue42.Layouts.Layout, newName: string): Promise<Glue42.Layouts.LayoutResult> {\n        return new Promise<{ status: string }>((resolve, reject) => {\n            this.verifyNotSlimMode();\n\n            if (!layout) {\n                return reject(new Error(\"layout argument is required\"));\n            }\n\n            if (!layout.name) {\n                return reject(new Error(\"name argument is required\"));\n            }\n\n            if (!layout.type) {\n                return reject(new Error(\"type argument is required\"));\n            }\n\n            const msg: ACSRenameMessage = { type: layout.type, oldName: layout.name, newName };\n\n            this.invokeMethodAndTrack(\"RenameLayout\", msg, resolve, reject);\n        });\n    }\n\n    public updateMetadata(layout: Glue42.Layouts.Layout): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!layout) {\n                return reject(new Error(\"layout argument is required\"));\n            }\n\n            if (!layout.name) {\n                return reject(new Error(\"name argument is required\"));\n            }\n\n            if (!layout.type) {\n                return reject(new Error(\"type argument is required\"));\n            }\n\n            if (!layout.metadata) {\n                return reject(new Error(\"metadata argument is required\"));\n            }\n\n            const layoutObject: any = {\n                name: layout.name,\n                type: layout.type,\n                metadata: layout.metadata\n            };\n\n            this.invokeMethodAndTrack(\"UpdateMetadata\", layoutObject, resolve, reject, true);\n        });\n    }\n\n    public hibernate(name: string, options?: Glue42.Layouts.HibernationOptions): Promise<Glue42.Layouts.HibernateResult> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(new Error(\"name cannot be empty\"));\n            }\n            options = options || {};\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context: options.context || {},\n                metadata: options.metadata || {},\n            };\n            this.invokeMethodAndTrack(\"HibernateLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public resume(name: string, context?: any, options?: Glue42.Layouts.ResumeOptions): Promise<Glue42.Layouts.ResumeResult> {\n        return new Promise((resolve, reject) => {\n            if (!name) {\n                return reject(new Error(\"name cannot be empty\"));\n            }\n            const request: HibernationResumeMessage = {\n                name,\n                type: \"Global\",\n                context,\n                ...options\n            };\n            this.invokeMethodAndTrack(\"ResumeLayout\", request, resolve, reject, true);\n        });\n    }\n\n    public async getCurrentLayout(): Promise<Glue42.Layouts.Layout | undefined> {\n        const methodName = \"GetCurrentLayout\";\n        const result = await this.invokeMethodCore(methodName);\n        let layout = result.returned.layout;\n        if (!layout) {\n            return undefined;\n        }\n        if (!this.isSlimMode()) {\n            // we have internal if we track layouts (so not slim mode), if not return the object we received from GD\n            layout = this.list().find((l) => l.name === layout.name && l.type === layout.type);\n        }\n        return layout;\n    }\n\n    public onAdded(callback: (layout: Glue42.Layouts.Layout) => void): UnsubscribeFunction {\n        const result = this.callbacks.add(\"added\", callback);\n\n        if (store.all.length > 0) {\n            store.all.forEach((layout) => {\n                try {\n                    callback(layout);\n                } catch (err) { /** */ }\n            });\n        }\n\n        return result;\n    }\n\n    public onRemoved(callback: (layout: Glue42.Layouts.Layout) => void) {\n        return this.callbacks.add(\"removed\", callback);\n    }\n\n    public onChanged(callback: (layout: Glue42.Layouts.Layout) => void) {\n        return this.callbacks.add(\"changed\", callback);\n    }\n\n    public onRestored(callback: (layout: Glue42.Layouts.Layout) => void) {\n        return this.callbacks.add(\"restored\", callback);\n    }\n\n    public onRenamed(callback: (layout: Glue42.Layouts.Layout) => void) {\n        return this.callbacks.add(\"renamed\", callback);\n    }\n\n    public onEvent(callback: (event: any) => void) {\n        return this.stream.onEvent(callback);\n    }\n\n    public onSaveRequested(callback: (info?: Glue42.Layouts.SaveRequestContext) => Glue42.Layouts.SaveRequestResponse): UnsubscribeFunction {\n        return this.provider.onSaveRequested(callback);\n    }\n\n    public onLayoutModified(callback: (info: Glue42.Layouts.LayoutModifiedEvent) => void): UnsubscribeFunction {\n        if (this.isRegisterMethodForLayoutModified === false) {\n            this.isRegisterMethodForLayoutModified = true;\n            this.registerMethodForLayoutModified();\n        }\n        return this.callbacks.add(\"layout-modified\", callback);\n    }\n\n    public updateAppContextInCurrent(context: object): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (context && typeof context !== \"object\") {\n                return reject(new Error(\"context must be an object\"));\n            }\n            context = context ?? {};\n            const request: UpdateLayoutComponentContextMessage = {\n                context\n            };\n            this.invokeMethodAndTrack(\"UpdateLayoutComponentContext\", request, resolve, reject, true);\n        });\n    }\n\n    public updateDefaultContext(context: object): Promise<Glue42.Layouts.LayoutResult> {\n        return new Promise((resolve, reject) => {\n            if (context && typeof context !== \"object\") {\n                return reject(new Error(\"context must be an object\"));\n            }\n            context = context ?? {};\n            const request: UpdateLayoutComponentContextMessage = {\n                context\n            };\n            this.invokeMethodAndTrack(\"UpdateDefaultContext\", request, resolve, reject, true);\n        });\n    }\n\n    public async get(name: string, type: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.Layout> {\n        const matching = this.list().find((l) => l.name === name && l.type === type);\n        if (!matching) {\n            throw new Error(`cannot find layout with name=${name} and type=${type}`);\n        }\n        return matching;\n    }\n\n    public async getAll(type: Glue42.Layouts.LayoutType): Promise<Glue42.Layouts.LayoutSummary[]> {\n        const matching = this.list().filter((l) => type === l.type);\n        return matching;\n    }\n\n    public async forceRefresh(): Promise<void> {\n        const methodName = \"RefreshLayouts\";\n        await this.invokeMethodCore(methodName);\n    }\n\n    private isSlimMode() {\n        return this.config.mode === \"slim\";\n    }\n\n    private verifyNotSlimMode() {\n        if (this.isSlimMode()) {\n            throw Error(\"Operation not allowed in slim mode. Run in full mode.\");\n        }\n    }\n\n    private async registerMethodForLayoutModified() {\n        await this.config.agm.register(\"T42.ACS.LayoutModified\", (args: unknown, caller: Glue42.Interop.Instance) => {\n            this.callbacks.execute(\"layout-modified\", args);\n        });\n    }\n\n    private invokeMethodAndTrack(methodName: string, args: ACSMessage, resolve: (result: any) => void, reject: (err: any) => void, skipStreamEvent?: boolean) {\n        let streamEventReceived = skipStreamEvent;\n        let agmResult: any;\n\n        const token = generate();\n        args.token = token;\n\n        const handleResult = () => {\n            if (streamEventReceived && agmResult) {\n                resolve(agmResult);\n            }\n        };\n\n        const methodResponseTimeoutMs = 120 * 1000;\n\n        if (!skipStreamEvent) {\n            this.stream.waitFor(token, methodResponseTimeoutMs)\n                .then(() => {\n                    streamEventReceived = true;\n                    handleResult();\n                })\n                .catch((err: any) => {\n                    reject(err);\n                });\n        }\n\n        const responseHandler = (result: Glue42Core.AGM.InvocationResult<{ status?: string, failed?: string }>) => {\n            if (!result.returned) {\n                return reject(new Error(\"No result from method \" + methodName));\n            }\n\n            if (result.returned.status && (result.returned.status !== \"Success\" && result.returned.status !== \"PartialSuccess\")) {\n                if (typeof (result.returned) === \"string\") {\n                    return reject(new Error(result.returned));\n                } else if (typeof (result.returned) === \"object\") {\n                    if (result.returned.status && result.returned.failed) {\n                        return reject(new Error(`${result.returned.status}: ${JSON.stringify(result.returned.failed)}`));\n                    } else {\n                        return reject(new Error(result.returned as string));\n                    }\n                }\n            }\n\n            agmResult = result.returned;\n            handleResult();\n        };\n        this.invokeMethodCore(methodName, args, \"best\", { methodResponseTimeoutMs })\n            .then(responseHandler)\n            .catch((err: any) => reject(err));\n    }\n\n    private async invokeMethodCore(methodName: string, args?: object, target?: Glue42Core.Interop.InstanceTarget, options?: Glue42Core.Interop.InvokeOptions) {\n        if (this.isCommandMethodPresent) {\n            return await this.config.agm.invoke(LayoutsCommandMethod, { command: methodName, data: args }, target, options);\n        } else {\n            return await this.config.agm.invoke(`T42.ACS.${methodName}`, args, target, options);\n        }\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n\n    private isCommandMethodPresent(): boolean {\n        return this.config.agm.methods().some((method) => method.name === LayoutsCommandMethod);\n    }\n}\n","import { LayoutsStream } from \"../types\";\nimport store, { LayoutStore } from \"../store\";\nimport { ACSStreamData, ACSLayout } from \"./messages\";\nimport LayoutImpl from \"../layout\";\nimport { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport transformACSLayout from \"../transform\";\n\nimport { Glue42Core } from \"@glue42/core\";\n\n/**\n * ACS event stream related to layouts\n */\nexport default class ACSStream implements LayoutsStream {\n\n    public ready: Promise<void>;\n    public gotSnapshot: Promise<void>;\n\n    private resolveReady: () => void;\n    private rejectReady: (err: any) => void;\n\n    private resolveGotSnapshot: () => void;\n    private rejectGotSnapshot: (err: any) => void;\n\n    private readonly StreamName = \"T42.ACS.OnLayoutEvent\";\n\n    constructor(private agm: Glue42Core.AGM.API, private callbacks: CallbackRegistry) {\n\n        this.ready = new Promise<void>((resolve, reject) => {\n            this.resolveReady = resolve;\n            this.rejectReady = reject;\n        });\n\n        this.gotSnapshot = new Promise<void>((resolve, reject) => {\n            this.resolveGotSnapshot = resolve;\n            this.rejectGotSnapshot = reject;\n        });\n    }\n\n    public subscribe(noRetry?: boolean) {\n        const transform = (obj: object) => {\n            return this.getObjectValues(obj).map((t) => transformACSLayout(t));\n        };\n\n        // if we don't have OnLayoutEvent stream  we're running pre 2.1 GD version or outside GD,\n        if (!this.checkForLayoutEventMethod()) {\n            // if no retry resolve right away\n            if (noRetry) {\n                this.resolveReady();\n            }\n\n            // if we should retry, schedule  one more time\n            setTimeout(() => {\n                this.subscribe(true);\n            }, 500);\n        } else {\n            this.agm.subscribe(this.StreamName, { waitTimeoutMs: 10000 })\n                .then((subs) => {\n                    subs.onData((args) => {\n                        const data = args.data as ACSStreamData;\n                        if (data.IsSnapshot) {\n                            this.resolveGotSnapshot();\n                        }\n                        this.addLayouts(transform(data.OnLayoutAdded), data.IsSnapshot);\n                        this.removeLayouts(transform(data.OnLayoutRemoved));\n                        this.changeLayouts(transform(data.OnLayoutChanged));\n                        this.renameLayouts(transform(data.OnLayoutRenamed));\n                        this.restoredLayout(transform(data.OnLayoutRestored));\n                        this.callbacks.execute(\"streamEvent\", data);\n                    });\n\n                    subs.onFailed((err) => {\n                        const msg = `Can not subscribe to \"${this.StreamName}\" stream - ${JSON.stringify(err)}`;\n                        this.rejectReady(msg);\n                        this.rejectGotSnapshot(msg);\n                    });\n\n                    this.resolveReady();\n                })\n                .catch((err) => {\n                    const msg = `Error subscribing to \"${this.StreamName}\" stream - ${JSON.stringify(err)}`;\n                    this.rejectReady(msg);\n                    this.rejectGotSnapshot(msg);\n                });\n        }\n    }\n\n    public onEvent(callback: (streamEvent: ACSStreamData) => void): UnsubscribeFunction {\n        return this.callbacks.add(\"streamEvent\", callback);\n    }\n\n    public waitFor(token: string, timeout?: number): Promise<void> {\n        if (!timeout) {\n            timeout = 30000; // default timeout is 30 seconds\n        }\n        return new Promise<void>((resolve, reject) => {\n            let done = false;\n            const unsubscribe = this.onEvent((streamEvent) => {\n                if (streamEvent.Token === token) {\n                    done = true;\n                    unsubscribe();\n                    resolve();\n                }\n            });\n\n            setTimeout(() => {\n                if (!done) {\n                    reject(\"timed out\");\n                }\n            }, timeout);\n        });\n    }\n\n    private checkForLayoutEventMethod() {\n        try {\n            return this.agm\n                .methods()\n                .map((m) => m.name)\n                .indexOf(this.StreamName) !== -1;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    private addLayouts(layoutsData: any[], isSnapshot: boolean) {\n        if (!layoutsData) {\n            return;\n        }\n        const createAndNotifyLayout = (layoutData: any) => {\n            const layout = new LayoutImpl(layoutData);\n            store.add(layout);\n            this.callbacks.execute(\"added\", layout);\n        };\n\n        layoutsData.forEach((layoutData) => {\n            if (isSnapshot) {\n                const found = store.first((existingLayout) => this.compareLayouts(existingLayout, layoutData));\n                if (!found) {\n                    createAndNotifyLayout(layoutData);\n                }\n            } else {\n                createAndNotifyLayout(layoutData);\n            }\n        });\n    }\n\n    private removeLayouts(removedLayouts: any[]) {\n        if (!removedLayouts) {\n            return;\n        }\n        removedLayouts.forEach((removedLayout) => {\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, removedLayout));\n\n            this.callbacks.execute(\"removed\", removedLayout);\n        });\n    }\n\n    private changeLayouts(changedLayouts: any[]) {\n        if (!changedLayouts) {\n            return;\n        }\n\n        changedLayouts.forEach((changedLayout) => {\n            // removed the changed layout and push it again\n            store.removeWhere((existingLayout) => !this.compareLayouts(existingLayout, changedLayout));\n            store.add(new LayoutImpl(changedLayout));\n            // execute callback\n            this.callbacks.execute(\"changed\", changedLayout);\n        });\n\n    }\n\n    private renameLayouts(renamedLayouts: any[]) {\n        if (!renamedLayouts) {\n            return;\n        }\n\n        renamedLayouts.forEach((renamedLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: renamedLayout.type, name: renamedLayout.oldName }));\n\n            if (!existingLayout) {\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                throw Error(`received rename event for unknown layout with type ${renamedLayout.type} and name ${renamedLayout.oldName}`);\n            }\n\n            existingLayout.name = renamedLayout.newName;\n\n            this.callbacks.execute(\"renamed\", existingLayout);\n        });\n    }\n\n    private compareLayouts(layout1: { name: string, type: string }, layout2: { name: string, type: string }) {\n        return layout1.name === layout2.name && layout1.type === layout2.type;\n    }\n\n    private getObjectValues(obj: any) {\n        if (!obj) {\n            return [];\n        }\n\n        return Object.keys(obj).map((k) => obj[k]);\n    }\n\n    private restoredLayout(restoredLayouts: any[]) {\n\n        if (!restoredLayouts) {\n            return;\n        }\n\n        restoredLayouts.forEach((restoredLayout) => {\n            const existingLayout = store.first((current) => this.compareLayouts(current, { type: restoredLayout.type, name: restoredLayout.name }));\n            this.callbacks.execute(\"restored\", existingLayout);\n        });\n    }\n}\n","import { LayoutsStream } from \"../types\";\n\nexport default function(): LayoutsStream {\n    return {\n        ready: Promise.resolve(undefined),\n        subscribe: () => { /** */ },\n        onEvent: (callback: (streamEvent: any) => void) => () => {/** */ },\n        waitFor: (token: string, timeout: number) => Promise.resolve(undefined),\n        gotSnapshot: Promise.resolve(undefined),\n    };\n}\n","import Layouts from \"./layouts\";\nimport ACSStream from \"./stream/acsStream\";\nimport streamNull from \"./stream/nullStream\";\nimport {LayoutsLibConfiguration, LayoutsStream } from \"./types\";\nimport callbackRegistry, { CallbackRegistry } from \"callback-registry\";\n\nexport default function(config: LayoutsLibConfiguration): Layouts {\n\n    if (!config.agm) {\n        throw Error(\"config.agm is required\");\n    }\n\n    if (!config.logger) {\n        throw Error(\"config.logger is required\");\n    }\n\n    // default mode to slim\n    config.mode = config.mode || \"slim\";\n\n    const logger = config.logger;\n    const callbacks: CallbackRegistry = callbackRegistry();\n\n    let acsStream: LayoutsStream;\n\n    if (config.mode === \"full\" || \"fullWaitSnapshot\") {\n        acsStream = new ACSStream(config.agm, callbacks);\n    } else {\n        acsStream = streamNull();\n    }\n\n    return new Layouts(config, acsStream, callbacks, logger);\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Core } from \"@glue42/core\";\nimport CallbackFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport CaptureOptions = Glue42.Displays.CaptureOptions;\n\nconst T42DisplayCommand = \"T42.Displays.Command\";\nconst T42DisplayOnEvent = \"T42.Displays.OnEvent\";\n\nexport default class DisplayManager implements Glue42.Displays.API {\n    private _registry: CallbackRegistry = CallbackFactory();\n    private _registered = false;\n\n    constructor(\n        private _agm: Glue42Core.AGM.API,\n        private _logger: Glue42Core.Logger.API,\n    ) {\n        //\n    }\n\n    public all = async (): Promise<Glue42.Displays.Display[]> => {\n        const displays = await this.callGD<Glue42.Displays.Display[]>(DisplayCommand.GetAll, {});\n        return displays.map(this.decorateDisplay);\n    }\n\n    public get = async (id: number): Promise<Glue42.Displays.Display> => {\n        const display = await this.callGD<Glue42.Displays.Display>(DisplayCommand.Get, { id });\n        return this.decorateDisplay(display);\n    }\n\n    public getPrimary = async (): Promise<Glue42.Displays.Display> => {\n        const primary = (await this.all()).find((d) => d.isPrimary);\n        return primary;\n    }\n\n    public getByWindowId(id: string): Promise<Glue42.Displays.Display> {\n        const current = this.callGD<Glue42.Displays.Display>(DisplayCommand.GetByWindowId, { id });\n        return current;\n    }\n\n    public capture = async (options: CaptureOptions): Promise<string> => {\n        const screenshot = await this.callGD<string>(DisplayCommand.Capture, { ...options });\n        return screenshot;\n    }\n\n    public captureAll = async (options: Glue42.Displays.CaptureAllOptions): Promise<string | string[]> => {\n        const screenshots = await this.callGD<string | string[]>(DisplayCommand.CaptureAll, { ...options });\n        return screenshots;\n    }\n\n    public getMousePosition = async (): Promise<Glue42.Displays.Point> => {\n        const point = await this.callGD<Glue42.Displays.Point>(DisplayCommand.GetMousePosition);\n        return point;\n    }\n\n    public onDisplayChanged(cb: (displays: Glue42.Displays.Display[]) => void) {\n        this.register();\n        return this._registry.add(\"on-display-changed\", cb);\n    }\n\n    private callGD = async <T>(command: string, options?: object): Promise<T> => {\n        // Consider targeting only GD\n        const invocationResult = await this._agm.invoke(T42DisplayCommand, { options: { ...options }, command });\n        return invocationResult.returned.data;\n    }\n\n    private decorateDisplay = (original: Glue42.Displays.Display): Glue42.Displays.Display => {\n        const decoratedDisplay = {\n            ...original,\n            capture: (size: SizeOptions) => this.capture({ id: original.id, size })\n        };\n        const workAreaAsAny = decoratedDisplay.workArea as any;\n        workAreaAsAny.x = workAreaAsAny.left;\n        workAreaAsAny.y = decoratedDisplay.workArea.top;\n        return decoratedDisplay;\n    }\n\n    private register() {\n        if (this._registered) {\n            return;\n        }\n        this._registered = true;\n        this._agm.register<{ event: string, data: any }>(T42DisplayOnEvent, (args, caller) => {\n            const event = args.event;\n            const data = args.data;\n            switch (event) {\n                case \"display-changed\":\n                    this._registry.execute(\"on-display-changed\", data.displays.map(this.decorateDisplay));\n                    break;\n                default:\n                    this._logger.warn(`unknown event - ${event}`);\n                    break;\n            }\n        });\n    }\n}\n\ntype SizeOptions = Glue42.Displays.ScaleOptions | Glue42.Displays.AbsoluteSizeOptions;\n\nenum DisplayCommand {\n    Capture = \"capture\",\n    CaptureAll = \"captureAll\",\n    GetAll = \"getAll\",\n    Get = \"get\",\n    GetByWindowId = \"getByWindowId\",\n    GetMousePosition = \"getMousePosition\",\n}\n","import { Glue42 } from \"../../glue\";\nimport { ChannelsImpl } from \"./channels\";\n\nlet interop: Glue42.Interop.API;\nlet windowId: string;\nconst T42_ANNOUNCE_METHOD_NAME = \"T42.Channels.Announce\";\n\nexport interface WindowsWithChannels {\n    windows: { windowId: string, channel: string, application: string }[];\n}\n\nexport async function setupInterop(interopLib: Glue42.Interop.API, channels: ChannelsImpl) {\n    interop = interopLib;\n\n    if (typeof window !== \"undefined\") {\n        if (window.glue42gd) {\n            windowId = window.glue42gd.windowId;\n        }\n    }\n\n    if (!windowId) {\n        // not supported\n        return;\n    }\n\n    await interop.register<{ command: string, channel: string }>(\"T42.Channels.Command\", (args) => {\n        const command = args.command;\n        if (!command) {\n            throw new Error(\"missing command argument\");\n        }\n        if (command === \"join\") {\n            const id = args.channel;\n            if (!id) {\n                throw new Error(\"missing argument id\");\n            }\n            // this is coming from GD (which means from selector switch, join without triggering selection change again)\n            channels.joinNoSelectorSwitch(id);\n            return;\n        }\n        if (command === \"leave\") {\n            channels.leaveNoSelectorSwitch();\n            return;\n        }\n        if (command === \"get\") {\n            const id = channels.current();\n            return { id };\n        }\n        throw new Error(`unknown command ${command}`);\n    });\n\n    // agm interface is available for SW windows only\n    await interop.invoke(\"T42.Channels.Announce\", { swId: windowId, instance: interop.instance.instance });\n}\n\nexport async function switchChannel(channel?: string, id?: string) {\n    interop.invoke(\"T42.Channels.Announce\", {\n        swId: id ?? windowId,\n        command: \"switchChannel\",\n        data: { newChannel: channel }\n    });\n}\n\nexport async function getWindowsWithChannels(filter: Glue42.Channels.WindowWithChannelFilter): Promise<WindowsWithChannels> {\n    const result = await interop.invoke<WindowsWithChannels>(T42_ANNOUNCE_METHOD_NAME, { command: \"getChannelsInfo\", data: { filter } });\n    return result.returned;\n}\n\nexport async function addOrRemoveChannel(command: \"addChannel\" | \"removeChannel\", id: string, color?: string) {\n    await interop.invoke(T42_ANNOUNCE_METHOD_NAME, { command, data: { id, color } });\n}\n","import { Glue42 } from \"../../glue\";\n\nconst CONTEXT_PREFIX = \"___channel___\";\nconst LATEST_FDC3_TYPE = \"latest_fdc3_type\";\n\nexport class SharedContextSubscriber {\n    private unsubscribeFunc: () => void;\n    private callback: any;\n\n    constructor(private contexts: Glue42.Contexts.API) {\n    }\n\n    public subscribe(callback: any): void {\n        this.callback = callback;\n    }\n\n    public subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (!this.isChannel(name)) {\n            return Promise.reject(new Error(`Channel with name: ${name} doesn't exist!`));\n        }\n\n        const contextName = this.createContextName(name);\n\n        return this.contexts.subscribe(contextName, (data, _, __, ___, extraData) => {\n            callback(data.data, data, extraData?.updaterId);\n        });\n    }\n\n    /** Unsubscribes from the current shared context, and subscribe to the passed one */\n    public async switchChannel(name: string): Promise<void> {\n        this.unsubscribe();\n        const contextName = this.createContextName(name);\n        this.unsubscribeFunc = await this.contexts.subscribe(contextName, (data, _, __, ___, extraData) => {\n            if (this.callback) {\n                this.callback(data.data, data, extraData?.updaterId);\n            }\n        });\n    }\n\n    public leave() {\n        if (this.callback) {\n            this.callback({}, undefined);\n        }\n        this.unsubscribe();\n    }\n\n    public all(): string[] {\n        const contextNames = this.contexts.all();\n        const channelContextNames = contextNames.filter((contextName) => contextName.startsWith(CONTEXT_PREFIX));\n        const channelNames = channelContextNames.map((channelContextName) => channelContextName.substr(CONTEXT_PREFIX.length));\n        return channelNames;\n    }\n\n    public async getContextData(name: string): Promise<Glue42.Channels.ChannelContext> {\n        if (!this.isChannel(name)) {\n            throw new Error(`A channel with name: ${name} doesn't exist!`);\n        }\n\n        const contextName = this.createContextName(name);\n\n        const contextData = await this.contexts.get(contextName);\n\n        if (contextData[LATEST_FDC3_TYPE]) {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            const { latest_fdc3_type, ...data } = contextData;\n\n            return data;\n        }\n\n        return contextData;\n    }\n\n    public updateChannel(name: string, data: { name: string, meta: any, data: any }): Promise<void> {\n        const contextName = this.createContextName(name);\n        return this.contexts.update(contextName, data);\n    }\n\n    public updateData(name: string, data: any) {\n        const contextName = this.createContextName(name);\n        const fdc3Type = this.getFDC3Type(data);\n\n        if (this.contexts.setPathSupported) {\n            const pathValues: Glue42.Contexts.PathValue[] = Object.keys(data).map((key) => {\n                return {\n                    path: `data.` + key,\n                    value: data[key]\n                };\n            });\n\n            if (fdc3Type) {\n                pathValues.push({ path: LATEST_FDC3_TYPE, value: fdc3Type });\n            }\n\n            return this.contexts.setPaths(contextName, pathValues);\n        } else {\n            if (fdc3Type) {\n                data[LATEST_FDC3_TYPE] = fdc3Type;\n            }\n\n            // pre 3.10, note that we update the data property only\n            return this.contexts.update(contextName, { data });\n        }\n    }\n\n    public isChannel(name: string): boolean {\n        return this.all().some((channelName) => channelName === name);\n    }\n\n    public async remove(name: string) {\n        if (!this.isChannel(name)) {\n            throw new Error(`A channel with name: ${name} doesn't exist!`);\n        }\n\n        const contextName = this.createContextName(name);\n        await this.contexts.destroy(contextName);\n    }\n\n    private unsubscribe(): void {\n        if (this.unsubscribeFunc) {\n            this.unsubscribeFunc();\n        }\n    }\n\n    private createContextName(name: string): string {\n        return CONTEXT_PREFIX + name;\n    }\n\n    private getFDC3Type(data: any): string | undefined {\n        const fdc3PropsArr = Object.keys(data).filter((key: string) => key.indexOf(\"fdc3_\") === 0);\n\n        if (fdc3PropsArr.length === 0) {\n            return;\n        }\n\n        if (fdc3PropsArr.length > 1) {\n            throw new Error(\"FDC3 does not support updating of multiple context keys\");\n        }\n\n        return fdc3PropsArr[0].split(\"_\").slice(1).join(\"_\");\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { addOrRemoveChannel, getWindowsWithChannels, switchChannel } from \"./agm\";\nimport shortid from \"shortid\";\nexport class ChannelsImpl implements Glue42.Channels.API {\n    private subsKey = \"subs\";\n    private changedKey = \"changed\";\n    private isInitialJoin = true;\n\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n    private currentContext: string;\n    private lastUpdate: { context: Glue42.Channels.ChannelContext, updaterId?: string };\n    private pendingReplays: any = {};\n\n    constructor(private shared: SharedContextSubscriber, private interop: Glue42.Interop.API, private getWindows: () => Glue42.Windows.API, private logger: Glue42.Logger.API) {\n        this.shared.subscribe(this.handler.bind(this));\n\n        if (typeof window !== \"undefined\" && typeof window.glue42gd !== \"undefined\") {\n            this.currentContext = (window.glue42gd as any).initialChannel;\n            if (this.currentContext) {\n                this.joinNoSelectorSwitch(this.currentContext);\n            }\n        }\n    }\n\n    public subscribe(callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): () => void {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n\n        // We want to replay the current context for late joiners\n        // Some caveats:\n        // 1. We need to consider that unsub might be called before we replay the initial set - in which case we should not do the replay - we wrap unsubscribe\n        // and use pendingReplays to handle this well)\n        // 2. We need to prevent double context updated calls with the same value. This  might happen if you do subscirbe -> publish fast - we use pendingReplays to prevent double calls.\n        // 3. We don't use replay args of callback registry, as they might reorder updates in case of fast updates (e.g. subscribe -> leave might result in [undefined, context] updates,\n        // instead of [context, undefined]\n        const id = shortid();\n        this.pendingReplays[id] = true;\n        if (this.lastUpdate) {\n            let lastUpdate = Object.assign({}, this.lastUpdate);\n            setTimeout(() => {\n                if (this.pendingReplays[id]) {\n                    if (this.lastUpdate) {\n                        lastUpdate = this.lastUpdate;\n                    }\n                    callback(lastUpdate.context.data, lastUpdate.context, lastUpdate.updaterId);\n                }\n                delete this.pendingReplays[id];\n            }, 0);\n        }\n\n        const unsub = this.registry.add(this.subsKey, callback);\n        return () => {\n            this.pendingReplays[id] = false;\n            unsub();\n        };\n    }\n\n    public async subscribeFor(name: string, callback: (data: object, context: Glue42.Channels.ChannelContext, updaterId: string) => void): Promise<() => void> {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Please provide the name as a string!\");\n        }\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        const unsubscribeFunc = await this.shared.subscribeFor(name, callback);\n        return unsubscribeFunc;\n    }\n\n    public async publish(data: object, name?: string): Promise<void> {\n        if (typeof data !== \"object\") {\n            throw new Error(\"Please provide the data as an object!\");\n        }\n\n        if (name) {\n            if (typeof name !== \"string\") {\n                throw new Error(\"Please provide the name as a string!\");\n            }\n\n            if (!this.shared.isChannel(name)) {\n                return Promise.reject(new Error(`A channel with name: ${name} doesn't exist!`));\n            }\n\n            return this.shared.updateData(name, data);\n        }\n\n        if (!this.currentContext) {\n            throw new Error(\"Not joined to any channel!\");\n        }\n        return this.shared.updateData(this.currentContext, data);\n    }\n\n    public all(): Promise<string[]> {\n        const channelNames = this.shared.all();\n        return Promise.resolve(channelNames);\n    }\n\n    public async list(): Promise<Glue42.Channels.ChannelContext[]> {\n        const channelNames = await this.all();\n        const channelContexts = await Promise.all(channelNames.map((channelName) => this.get(channelName)));\n        return channelContexts;\n    }\n\n    public get(name: string): Promise<Glue42.Channels.ChannelContext> {\n        if (typeof name !== \"string\") {\n            return Promise.reject(new Error(\"Please provide the channel name as a string!\"));\n        }\n\n        return this.shared.getContextData(name);\n    }\n\n    /* Returns info about my channel */\n    public getMy(): Promise<Glue42.Channels.ChannelContext> {\n        if (!this.currentContext) {\n            return Promise.resolve(undefined);\n        }\n        return this.get(this.currentContext);\n    }\n\n    public async join(name: string, windowId?: string): Promise<void> {\n        if (windowId) {\n            return switchChannel(name, windowId);\n        }\n        return this.joinCore(name);\n    }\n\n    public async joinNoSelectorSwitch(name: string): Promise<void> {\n        return this.joinCore(name, false);\n    }\n\n    public leave(windowId?: string) {\n        if (windowId) {\n            return switchChannel(undefined, windowId);\n        }\n        return this.leaveCore();\n    }\n\n    public leaveNoSelectorSwitch() {\n        return this.leaveCore(false);\n    }\n\n    public current(): string {\n        return this.currentContext;\n    }\n\n    public my(): string {\n        return this.current();\n    }\n\n    public changed(callback: (channel: string) => void): () => void {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n\n        // don't use replay args as they might fail if changed->leave\n        const current = this.current();\n        if (current) {\n            setTimeout(() => {\n                callback(this.current());\n            }, 0);\n        }\n\n        return this.registry.add(this.changedKey, callback);\n    }\n\n    public onChanged(callback: (channel: string) => void): () => void {\n        return this.changed(callback);\n    }\n\n    public async add(info: Glue42.Channels.ChannelContext): Promise<Glue42.Channels.ChannelContext> {\n        if (typeof info !== \"object\") {\n            throw new Error(\"Please provide the info as an object!\");\n        }\n        if (typeof info.name === \"undefined\") {\n            throw new Error(\"info.name is missing!\");\n        }\n        if (typeof info.name !== \"string\") {\n            throw new Error(\"Please provide the info.name as a string!\");\n        }\n        if (typeof info.meta === \"undefined\") {\n            throw new Error(\"info.meta is missing!\");\n        }\n        if (typeof info.meta !== \"object\") {\n            throw new Error(\"Please provide the info.meta as an object!\");\n        }\n        if (typeof info.meta.color === \"undefined\") {\n            throw new Error(\"info.meta.color is missing!\");\n        }\n        if (typeof info.meta.color !== \"string\") {\n            throw new Error(\"Please provide the info.meta.color as a string!\");\n        }\n\n        const context: Glue42.Channels.ChannelContext = {\n            name: info.name,\n            meta: info.meta || {},\n            data: info.data || {}\n        };\n\n        // Note that we use `update` instead of `add` so that if the channel already exists we don't overwrite it.\n        await this.shared.updateChannel(info.name, context);\n\n        await addOrRemoveChannel(\"addChannel\", info.name, info.meta.color);\n\n        return context;\n    }\n\n    public async remove(channel: string): Promise<void> {\n        if (typeof channel !== \"string\") {\n            throw new Error(\"Please provide the channel name as a string!\");\n        }\n\n        await this.shared.remove(channel);\n\n        await addOrRemoveChannel(\"removeChannel\", channel);\n    }\n\n    public async getWindowsOnChannel(channel: string): Promise<Glue42.Windows.GDWindow[]> {\n        if (typeof channel !== \"string\") {\n            throw new Error(\"Please provide the channel name as a string!\");\n        }\n        const windowInfos = await this.getWindowsWithChannels({ channels: [channel] });\n        return windowInfos.map((w) => w.window);\n    }\n\n    public async getWindowsWithChannels(filter: Glue42.Channels.WindowWithChannelFilter): Promise<Glue42.Channels.WindowOnChannelInfo[]> {\n        try {\n            const info = await getWindowsWithChannels(filter);\n            const windows = this.getWindows();\n            if (info?.windows) {\n                return info.windows.map((windowInfo) => {\n                    const window = windows.findById(windowInfo.windowId);\n                    return {\n                        window,\n                        channel: windowInfo.channel,\n                        application: windowInfo.application\n                    };\n                });\n            }\n        } catch (er) {\n            this.logger.error(`Error getting all channel enabled windows. This method is available since Glue42 3.12`, er);\n        }\n        return [];\n    }\n\n    private handler(data: object, context: Glue42.Channels.ChannelContext, updaterId: string): any {\n        this.lastUpdate = { context, updaterId };\n        this.pendingReplays = {};\n        this.registry.execute(this.subsKey, data, context, updaterId);\n    }\n\n    private async joinCore(name: string, changeSelector = true) {\n        if (typeof name !== \"string\") {\n            throw new Error(\"Please provide the channel name as a string!\");\n        }\n\n        if (!this.isInitialJoin && name === this.currentContext) {\n            // ignore joining the channel that we're already on, except when this is the very first call\n            return;\n        }\n        this.isInitialJoin = false;\n\n        // Checks if a channel exists with the provided name.\n        const doesChannelExist = (channelName: string): boolean => {\n            const channelNames = this.shared.all();\n            return channelNames.includes(channelName);\n        };\n\n        // Wait for 3k ms for the channel to appear if it doesn't already exist.\n        if (!doesChannelExist(name)) {\n            const channelExistsPromise = new Promise<void>((resolve, reject) => {\n                // Check every 100 ms for a channel with the provided name.\n                const intervalId = setInterval(() => {\n                    if (doesChannelExist(name)) {\n                        clearTimeout(timeoutId);\n                        clearInterval(intervalId);\n                        resolve();\n                    }\n                }, 100);\n\n                const timeoutId = setTimeout(() => {\n                    clearInterval(intervalId);\n\n                    return reject(new Error(`A channel with name: ${name} doesn't exist!`));\n                }, 3000);\n            });\n\n            await channelExistsPromise;\n        }\n\n        this.currentContext = name;\n        this.lastUpdate = undefined;\n\n        await this.shared.switchChannel(name);\n        if (changeSelector) {\n            switchChannel(name);\n        }\n        this.registry.execute(this.changedKey, name);\n    }\n\n    private leaveCore(changeSelector = true): Promise<void> {\n        this.currentContext = undefined;\n        this.registry.execute(this.changedKey, undefined);\n        this.shared.leave();\n        if (changeSelector) {\n            switchChannel();\n        }\n        return Promise.resolve();\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { setupInterop } from \"./agm\";\nimport { SharedContextSubscriber } from \"./contexts\";\nimport { ChannelsImpl } from \"./channels\";\n\nexport function factory(contexts: Glue42.Contexts.API, agm: Glue42.AGM.API, getWindows: () => Glue42.Windows.API, logger: Glue42.Logger.API): Glue42.Channels.API & { ready: () => Promise<void>; } {\n    const sharedContexts = new SharedContextSubscriber(contexts);\n    const channels = new ChannelsImpl(sharedContexts, agm, getWindows, logger);\n\n    const setupInteropPromise = setupInterop(agm, channels);\n\n    return {\n        subscribe: channels.subscribe.bind(channels),\n        subscribeFor: channels.subscribeFor.bind(channels),\n        publish: channels.publish.bind(channels),\n        all: channels.all.bind(channels),\n        list: channels.list.bind(channels),\n        get: channels.get.bind(channels),\n        join: channels.join.bind(channels),\n        leave: channels.leave.bind(channels),\n        // @ignore-ed, but kept for backwards compatibility.\n        current: channels.current.bind(channels),\n        my: channels.my.bind(channels),\n        // @ignore-ed, but kept for backwards compatibility.\n        changed: channels.changed.bind(channels),\n        onChanged: channels.onChanged.bind(channels),\n        add: channels.add.bind(channels),\n        remove: channels.remove.bind(channels),\n        getWindowsOnChannel: channels.getWindowsOnChannel.bind(channels),\n        getWindowsWithChannels: channels.getWindowsWithChannels.bind(channels),\n        getMy: channels.getMy.bind(channels),\n        ready: async () => {\n            await Promise.all([(contexts as any).ready(), setupInteropPromise]);\n        }\n    };\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { default as CallbackRegistryFactory, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\n\r\nconst CommandMethod = \"T42.Hotkeys.Command\";\r\nconst InvokeMethod = \"T42.Hotkeys.Invoke\";\r\n\r\nconst RegisterCommand = \"register\";\r\nconst UnregisterCommand = \"unregister\";\r\nconst UnregisterAllCommand = \"unregisterAll\";\r\n\r\nexport class HotkeysImpl implements Glue42.Hotkeys.API {\r\n\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private firstHotkey = true;\r\n    private hotkeys = new Map<string, Glue42.Hotkeys.HotkeyInfo>();\r\n\r\n    constructor(private agm: Glue42.AGM.API) {\r\n    }\r\n\r\n    public async register(info: string | Glue42.Hotkeys.HotkeyInfo, callback: Glue42.Hotkeys.HotkeyCallback): Promise<void> {\r\n        if (typeof info === \"undefined\") {\r\n            throw new Error(\"Hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof info === \"string\") {\r\n            info = {\r\n                hotkey: info\r\n            };\r\n        } else {\r\n            if (!info.hotkey) {\r\n                throw new Error(\"Info's hotkey parameter missing\");\r\n            }\r\n\r\n            info = {\r\n                hotkey: info.hotkey,\r\n                description: info.description\r\n            };\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(info.hotkey);\r\n        if (this.hotkeys.has(hkToLower)) {\r\n            throw new Error(`Shortcut for ${hkToLower} already registered`);\r\n        }\r\n\r\n        // if very first a hotkey is registered by this application register invoke AGM method\r\n        if (this.firstHotkey) {\r\n            this.firstHotkey = false;\r\n            await this.registerInvokeAGMMethod();\r\n        }\r\n        // store the callback\r\n        this.registry.add(hkToLower, callback);\r\n\r\n        // invoke GD method\r\n        await this.agm.invoke(CommandMethod, { command: RegisterCommand, hotkey: hkToLower, description: info.description });\r\n\r\n        this.hotkeys.set(hkToLower, info);\r\n    }\r\n\r\n    public async unregister(hotkey: string): Promise<void> {\r\n        if (typeof hotkey === \"undefined\") {\r\n            throw new Error(\"hotkey parameter missing\");\r\n        }\r\n\r\n        if (typeof hotkey !== \"string\") {\r\n            throw new Error(\"hotkey parameter must be string\");\r\n        }\r\n\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterCommand, hotkey: hkToLower });\r\n        this.hotkeys.delete(hkToLower);\r\n        this.registry.clearKey(hkToLower);\r\n    }\r\n\r\n    public async unregisterAll(): Promise<void> {\r\n        await this.agm.invoke(CommandMethod, { command: UnregisterAllCommand });\r\n        this.hotkeys.clear();\r\n        this.registry.clear();\r\n    }\r\n\r\n    /**\r\n     * Whether this application has registered accelerator.\r\n     * @param hotkey\r\n     */\r\n    public isRegistered(hotkey: string): boolean {\r\n        const hkToLower = this.formatHotkey(hotkey);\r\n        return this.hotkeys.has(hkToLower);\r\n    }\r\n\r\n    private registerInvokeAGMMethod() {\r\n        return this.agm.register(InvokeMethod, (args: {\r\n            key: string;\r\n        }) => {\r\n            const hkToLower = args.key.toLowerCase();\r\n            const info = this.hotkeys.get(hkToLower);\r\n            this.registry.execute(hkToLower, info);\r\n        });\r\n    }\r\n\r\n    private formatHotkey(hotkey: string): string {\r\n        if (hotkey) {\r\n            return hotkey.replace(/\\s/g, \"\").toLowerCase();\r\n        }\r\n    }\r\n}\r\n","import { Glue42 } from \"../../glue\";\nimport { HotkeysImpl } from \"./hotkeys\";\n\nexport function factory(agm: Glue42.AGM.API): Glue42.Hotkeys.API & { ready: () => Promise<void>; } {\n    const hotkeys = new HotkeysImpl(agm);\n\n    return {\n        register: hotkeys.register.bind(hotkeys),\n        unregister: hotkeys.unregister.bind(hotkeys),\n        unregisterAll: hotkeys.unregisterAll.bind(hotkeys),\n        isRegistered: hotkeys.isRegistered.bind(hotkeys),\n\n        ready: () => Promise.resolve()\n    };\n}\n","import { Glue42 } from \"../glue\";\nimport { ActivitiesLibConfigObject, LibConfigObject, InternalConfig, LayoutsLibConfigObject, AppManagerLibConfigObject } from \"./types\";\nimport Utils from \"./utils\";\n\ninterface InputModeObject {\n    mode?: boolean | string;\n    logger?: Glue42.LoggerConfig;\n}\n\nexport default (options: Glue42.Config): InternalConfig => {\n\n    // Possible options per lib (this is InputLibConfig type)\n    // * false - library is disabled (e.g. config.appManager = false)\n    // * true - library is enabled in running in default mode (e.g config.appManager = true).\n    //          Exception is if default mode is false - in that case it runs default true mode.\n    // * string - start in some mode (e.g. config.appManager = \"full\")\n    // * object - allows further customization (e.g config.appManager = {mode: \"full\", someSetting: 42})\n    //\n    // Some libs support different running modes, some do not.\n    //\n    // Currently defaults are:\n    // appManager: disabled\n    // layouts: enabled in 'slim' mode\n    // activities: enabled in 'trackMyTypeAndInitiatedFromMe' mode\n    // windows: enabled (does not support modes)\n    //\n    // InputLibConfig is transformed to LibConfigObject\n\n    type InputLibConfig = boolean | string | InputModeObject;\n\n    /**\n     * Transforms InputLibConfig (the config as specified from the user)\n     * to LibConfigObject(internal library configuration)\n     */\n    function getLibConfig<T extends LibConfigObject<boolean | string>>(value: InputLibConfig, defaultMode: boolean | string, trueMode: boolean | string): T {\n\n        // if value is false return undefined\n        if (typeof value === \"boolean\" && !value) {\n            return undefined;\n        }\n\n        // find the mode of the library\n        const mode = getModeAsString(value, defaultMode, trueMode);\n\n        if (typeof mode === \"undefined\") {\n            return undefined;\n        }\n\n        // if object we will replace the mode because appManager = {mode: true, setting: 42}\n        // should be turned into appManager = {mode: 'slim', setting: 42}\n        if (typeof value === \"object\") {\n            value.mode = mode;\n            return value as T;\n        }\n\n        return {\n            mode,\n        } as T;\n    }\n\n    /**\n     * Finds the mode based for a given library\n     * 1. If object we call recursively using object.mode for value\n     * 1. If the user hasn't specified anything we use the hard coded defaults\n     * 3. If the value is false or it got defaulted to false, we return undefined\n     * 4. If the value is true we return trueMode or defaultMode (if trueMode is undefined)\n     */\n    function getModeAsString(value: InputLibConfig, defaultMode: boolean | string, trueMode?: boolean | string): boolean | string {\n\n        if (typeof value === \"object\") {\n            // 1. if object\n            return getModeAsString(value.mode, defaultMode, trueMode).toString();\n        } else if (typeof value === \"undefined\") {\n            // 2. if the user does not pass anything\n            if (typeof defaultMode === \"boolean\" && !defaultMode) {\n                // 3. if gets defaulted to false, the library should be off\n                return undefined;\n            } else if (typeof defaultMode === \"boolean\" && defaultMode) {\n                // if the user passed in 'trueMode', then supposedly they expect\n                // a default of 'true' to also be converted to 'trueMode'\n                return typeof trueMode === \"undefined\" ? defaultMode : trueMode;\n            } else if (typeof defaultMode === \"undefined\") {\n                return undefined;\n            } else {\n                return defaultMode;\n            }\n        } else if (typeof value === \"boolean\") {\n            // 4. if the user passes true, use trueMode or defaultMode\n            if (value) {\n                // if the user passes true, use trueMode or defaultMode\n                return (typeof trueMode === \"undefined\") ? defaultMode : trueMode;\n            } else {\n                // 3. if the user passes false, the library should be off\n                return undefined;\n            }\n        }\n\n        return value;\n    }\n\n    const appDefaultMode = true;\n    const appDefaultTrueMode = \"startOnly\";\n\n    const activitiesDefaultMode = Utils.isNode() ? false : \"trackMyTypeAndInitiatedFromMe\";\n    const activitiesTrueMode = \"trackMyTypeAndInitiatedFromMe\";\n\n    const layoutsDefaultMode = \"slim\";\n    const layoutsTrueMode = layoutsDefaultMode;\n\n    const exposeGlue = typeof options.exposeGlue === \"boolean\" ? options.exposeGlue : true;\n\n    return {\n        layouts: getLibConfig<LayoutsLibConfigObject>(options.layouts, layoutsDefaultMode, layoutsTrueMode),\n        activities: getLibConfig<ActivitiesLibConfigObject>(options.activities, activitiesDefaultMode, activitiesTrueMode),\n        appManager: getLibConfig<AppManagerLibConfigObject>(options.appManager, appDefaultMode, appDefaultTrueMode),\n        windows: getLibConfig<LibConfigObject<boolean>>(options.windows, true, true),\n        channels: getLibConfig<LibConfigObject<boolean>>(options.channels, false, true),\n        displays: getLibConfig<LibConfigObject<boolean>>(options.displays, true, true),\n        exposeGlue\n    };\n};\n","import { Glue42 } from \"../../glue\";\nimport callbackRegistry, { CallbackRegistry } from \"callback-registry\";\n\nexport class Glue42Notification implements Glue42.Notifications.Glue42Notification {\n    public readonly actions: Glue42.Notifications.Glue42NotificationAction[];\n    public id: string;\n    public instanceId: string;\n    public panelExpiry: number;\n    public toastExpiry: number;\n    public badge: string;\n    public body: string;\n    public data: any;\n    public dir: NotificationDirection;\n    public icon: string;\n    public image: string;\n    public lang: string;\n    public renotify: boolean;\n    public requireInteraction: boolean;\n    public silent: boolean;\n    public tag: string;\n    public timestamp: number;\n    public title: string;\n    public readonly vibrate: number[];\n\n    [k: string]: any;\n\n    public onclick: ((ev: Event) => any);\n    public onclose: ((ev: Event) => any);\n    public onerror: ((ev: Event) => any);\n    public onshow: ((ev: Event) => any);\n    public onaction: ((ev: Glue42.Notifications.ActionEvent) => any) | null;\n\n    private callbacks: CallbackRegistry = callbackRegistry();\n\n    public constructor(public options: Glue42.Notifications.Glue42NotificationOptions) {\n        this.actions = options.actions;\n        this.body = options.body;\n        this.badge = options.badge;\n        this.data = options.data;\n        this.dir = options.dir;\n        this.icon = options.icon;\n        this.image = options.image;\n        this.lang = options.lang;\n        this.renotify = options.renotify;\n        this.requireInteraction = options.requireInteraction;\n        this.silent = options.silent;\n        this.tag = options.tag;\n        this.timestamp = options.timestamp;\n        this.title = options.title;\n    }\n\n    public close(): void {\n        throw new Error(\"Method not implemented.\");\n    }\n    public addEventListener<K extends \"click\" | \"close\" | \"error\" | \"show\">(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    public addEventListener(type: any, listener: any, options?: any) {\n        this.callbacks.add(type, listener);\n    }\n    public removeEventListener<K extends \"click\" | \"close\" | \"error\" | \"show\">(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    public removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    public removeEventListener(type: any, listener: any, options?: any) {\n        // DO NOTHING FOR NOW\n    }\n    public dispatchEvent(event: Event): boolean {\n        this.callbacks.execute(event.type, event);\n        return true;\n    }\n}\n","import { UnsubscribeFunction } from \"callback-registry\";\nimport { Glue42 } from \"../../glue\";\n\nexport class PanelAPI implements Glue42.Notifications.NotificationPanelAPI {\n\n    constructor(private interop: Glue42.Interop.API, private onStreamEvent: <T>(key: string, callback: T) => UnsubscribeFunction) {\n    }\n\n    public onVisibilityChanged(callback: (isVisible: boolean) => void): UnsubscribeFunction {\n        return this.onStreamEvent(\"on-panel-visibility-changed\", callback);\n    }\n\n    public toggle(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Show\");\n    }\n\n    public show(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Show\", { show: true });\n    }\n\n    public hide(): Promise<any> {\n        return this.interop.invoke(\"T42.Notifications.Hide\");\n    }\n\n    public async isVisible(): Promise<boolean> {\n        const interopResult = await this.interop.invoke<{ panelVisible: boolean }>(\"T42.Notifications.Execute\", { command: \"isPanelVisible\" });\n        return interopResult.returned.panelVisible;\n    }\n\n    public toAPI(): Glue42.Notifications.NotificationPanelAPI {\n        return {\n            onVisibilityChanged: this.onVisibilityChanged.bind(this),\n            toggle: this.toggle.bind(this),\n            show: this.show.bind(this),\n            hide: this.hide.bind(this),\n            isVisible: this.isVisible.bind(this)\n        };\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { Glue42Notification } from \"./notification\";\nimport { GnsNotificationSettings, GnsNotificationActionSettings, GnsNotificationActionPayload, NotificationsConfiguration, StreamMessage, StreamNotification, StreamNotificationDeltas } from \"./types\";\nimport callbackRegistry, { Callback, CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\nimport generate from \"shortid\";\nimport { PanelAPI } from \"./panel\";\n\nconst STARTING_INDEX = 0;\n\ninterface NotificationEventMapExt extends NotificationEventMap {\n    \"action\": Event;\n    \"unknown\": Event;\n}\n\ninterface GnsNotificationEventArgs {\n    event: keyof NotificationEventMapExt;\n    notificationId?: string;\n    notificationActionPayload?: GnsNotificationActionPayload;\n    error?: Error;\n}\n\nexport class Notifications {\n    private _panel: PanelAPI;\n\n    private readonly NotificationsSubscribeStream = \"T42.GNS.Subscribe.Notifications\";\n    private readonly NotificationsCounterStream = \"T42.Notifications.Counter\";\n    private readonly RaiseNotificationMethodName = \"T42.GNS.Publish.RaiseNotification\";\n    private readonly NotificationsExecuteMethod = \"T42.Notifications.Execute\";\n\n    private methodsRegistered = false;\n    private NOTIFICATIONS_CONFIGURE_METHOD_NAME = \"T42.Notifications.Configure\";\n    private readonly methodNameRoot = \"T42.Notifications.Handler-\" + generate();\n    private nextId = 0;\n    private notifications: { [id: string]: Glue42Notification } = {};\n    private registry: CallbackRegistry = callbackRegistry();\n    private subscriptionForNotifications: Glue42.Interop.Subscription;\n    private subscriptionForCounter: Glue42.Interop.Subscription;\n    private subscribedForNotifications = false;\n    private subscribedCounterStream = false;\n    private subscriptionsCountForNotifications = 0;\n    private subscriptionsCountForCounter = 0;\n\n    constructor(private interop: Glue42.Interop.API, private logger: Glue42.Logger.API) {\n        this._panel = new PanelAPI(interop, this.onStreamEventCore.bind(this));\n        this.subscribeInternalEvents();\n    }\n\n    public get maxActions(): number {\n        return 2;\n    }\n\n    public get panel() {\n        return this._panel.toAPI();\n    }\n\n    public async raise(options: Glue42.Notifications.Glue42NotificationOptions): Promise<Glue42.Notifications.Glue42Notification> {\n        this.validate(options);\n\n        if (!this.methodsRegistered) {\n            const bunchOfPromises = [];\n            for (let index = STARTING_INDEX; index < this.maxActions; index++) {\n                bunchOfPromises.push(\n                    this.interop.register(`${this.methodNameRoot}_${index}`, this.handleNotificationEvent.bind(this))\n                );\n            }\n\n            this.methodsRegistered = true;\n            await Promise.all(bunchOfPromises);\n        }\n\n        // transform actions\n        const id = String(this.nextId++);\n        const type = options.type ?? \"Notification\";\n        const notification: GnsNotificationSettings = {\n            title: options.title,\n            type,\n            severity: options.severity ?? \"None\",\n            description: options.body,\n            glueRoutingDetailMethodName: `${this.methodNameRoot}_${STARTING_INDEX}`,\n            actions: [],\n            sourceId: id,\n            source: options.source,\n            publishExtraEvents: true, // such as onerror, onshow and onclose\n        };\n\n        if (options.actions) {\n            this.handleActions(options, id, notification);\n        }\n\n        this.handleOptions(options, notification);\n\n        const g42notification = new Glue42Notification(options);\n        this.notifications[id] = g42notification;\n\n        try {\n            const invocationResult = await this.interop.invoke(this.RaiseNotificationMethodName, { notification });\n            g42notification.id = invocationResult.returned?.id;\n        } catch (err) {\n            // let user code to subscribe for the onerror event\n            const errorMessage = err.message;\n            setTimeout(() => {\n                this.handleNotificationErrorEvent(g42notification, errorMessage);\n            }, 1);\n        }\n        return g42notification;\n    }\n\n    public async setFilter(filter: Glue42.Notifications.NotificationFilter): Promise<Glue42.Notifications.NotificationFilter> {\n        const result = await this.interop.invoke(\"T42.Notifications.Filter\", filter);\n        return result.returned;\n    }\n\n    public async getFilter(): Promise<Glue42.Notifications.NotificationFilter> {\n        const result = await this.interop.invoke(\"T42.Notifications.Filter\");\n        return result.returned;\n    }\n\n    public async configure(options: Glue42.Notifications.Configuration): Promise<void> {\n        if (!options || Array.isArray(options)) {\n            throw new Error(\"Invalid options - should be an object.\");\n        }\n\n        if (Object.values(options).length === 0) {\n            throw new Error(\"The argument must be a non-empty object.\");\n        }\n\n        if (typeof options.enable !== \"undefined\" && typeof options.enable !== \"boolean\") {\n            throw new Error(\"Expected type of enabled - boolean.\");\n        }\n\n        if (typeof options.enableToasts !== \"undefined\" && typeof options.enableToasts !== \"boolean\") {\n            throw new Error(\"Expected type of enableToasts - boolean.\");\n        }\n\n        if (typeof options.toastExpiry !== \"undefined\" && typeof options.toastExpiry !== \"number\") {\n            throw new Error(\"Expected type of toastExpiry - number.\");\n        }\n\n        if (options.sourceFilter && typeof options.sourceFilter !== \"object\") {\n            throw new Error(\"Expected type of sourceFilter - object.\");\n        }\n\n        if (options.sourceFilter?.allowed && !Array.isArray(options.sourceFilter?.allowed)) {\n            throw new Error(\"Expected type of sourceFilter.allowed - array.\");\n        }\n\n        if (options.sourceFilter?.blocked && !Array.isArray(options.sourceFilter?.blocked)) {\n            throw new Error(\"Expected type of sourceFilter.blocked - array.\");\n        }\n\n        const result = await this.interop.invoke(this.NOTIFICATIONS_CONFIGURE_METHOD_NAME, options);\n        return result.returned;\n    }\n\n    public async getConfiguration(): Promise<Glue42.Notifications.Configuration> {\n        const result = await this.interop.invoke(this.NotificationsExecuteMethod, { command: \"getConfiguration\" });\n        return result.returned;\n    }\n\n    public async list(): Promise<Glue42.Notifications.NotificationData[]> {\n        const interopResult = await this.interop.invoke<{ notifications: Glue42.Notifications.NotificationData[] }>(this.NotificationsExecuteMethod, { command: \"list\" });\n        return interopResult.returned.notifications;\n    }\n\n    public onRaised(callback: (notification: Glue42.Notifications.NotificationData) => void): UnsubscribeFunction {\n        return this.onStreamEventCore(\"on-notification-raised\", callback);\n    }\n\n    public onStateChanged(callback: (id: string, state: Glue42.Notifications.State) => any): UnsubscribeFunction {\n        return this.onStreamEventCore(\"on-state-changed\", callback);\n    }\n\n    public onClosed(callback: (notification: { id: string }) => void): UnsubscribeFunction {\n        return this.onStreamEventCore(\"on-notification-closed\", callback);\n    }\n\n    public onConfigurationChanged(callback: (config: NotificationsConfiguration) => void): UnsubscribeFunction {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        this.subscribe();\n        const un = this.registry.add(\"on-configuration-changed\", callback);\n        return () => {\n            un();\n            this.closeStreamSubscriptionIfNoNeeded();\n        };\n    }\n\n    public onCounterChanged(callback: (info: { count: number }) => void): UnsubscribeFunction {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        this.subscribeForCounterStream();\n        const un = this.registry.add(\"on-counter-changed\", callback);\n        return () => {\n            un();\n            this.closeStreamCounterSubscriptionIfNoNeeded();\n        };\n    }\n\n    public async clearAll(): Promise<void> {\n        await this.interop.invoke(this.NotificationsExecuteMethod, { command: \"clearAll\" });\n    }\n\n    public async clearOld(): Promise<void> {\n        await this.interop.invoke(this.NotificationsExecuteMethod, { command: \"clearAllOld\" });\n    }\n\n    public async clear(id: string): Promise<void> {\n        if (!id) {\n            throw new Error(\"The 'id' argument cannot be null or undefined\");\n        }\n        if (typeof (id) !== \"string\") {\n            throw new Error(\"The 'id' argument must be a string\");\n        }\n        await this.interop.invoke(this.NotificationsExecuteMethod, { command: \"clear\", data: { id } });\n    }\n\n    public async click(id: string, action?: string): Promise<void> {\n        await this.interop.invoke(this.NotificationsExecuteMethod, { command: \"click\", data: { id, action } });\n    }\n\n    public async setState(id: string, state: \"Active\" | \"Acknowledged\" | \"Stale\"): Promise<void> {\n        if (!id) {\n            throw new Error(\"The 'id' argument cannot be null or undefined\");\n        }\n        if (typeof (id) !== \"string\") {\n            throw new Error(\"The 'id' argument must be a string\");\n        }\n\n        if (!state) {\n            throw new Error(\"The 'state' argument cannot be null or undefined\");\n        }\n        if (typeof (state) !== \"string\") {\n            throw new Error(\"The 'state' argument must be a string\");\n        }\n\n        const validStates = [\n            \"Active\",\n            \"Acknowledged\",\n            \"Stale\"\n        ];\n\n        if (!validStates.includes(state)) {\n            throw new Error(`The state argument: ${state} is not valid!`);\n        }\n\n        await this.interop.invoke(this.NotificationsExecuteMethod, { command: \"updateState\", data: { id, state } });\n    }\n\n    public toAPI(): Glue42.Notifications.API {\n        return {\n            maxActions: this.maxActions,\n            panel: this._panel.toAPI(),\n            raise: this.raise.bind(this),\n            setFilter: this.setFilter.bind(this),\n            getFilter: this.getFilter.bind(this),\n            configure: this.configure.bind(this),\n            getConfiguration: this.getConfiguration.bind(this),\n            list: this.list.bind(this),\n            onRaised: this.onRaised.bind(this),\n            onStateChanged: this.onStateChanged.bind(this),\n            onClosed: this.onClosed.bind(this),\n            onConfigurationChanged: this.onConfigurationChanged.bind(this),\n            onCounterChanged: this.onCounterChanged.bind(this),\n            clearAll: this.clearAll.bind(this),\n            clearOld: this.clearOld.bind(this),\n            clear: this.clear.bind(this),\n            click: this.click.bind(this),\n            setState: this.setState.bind(this)\n        };\n    }\n\n    private onStreamEventCore<T extends Callback>(key: string, callback: T) {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Please provide the callback as a function!\");\n        }\n        this.subscribe();\n        const un = this.registry.add(key, callback);\n        return () => {\n            un();\n            this.closeStreamSubscriptionIfNoNeeded();\n        };\n    }\n\n    private handleOptions(options: Glue42.Notifications.Glue42NotificationOptions, notification: GnsNotificationSettings) {\n        if (options.icon) {\n            notification.attributes = notification.attributes || [];\n            notification.attributes.push(\n                { key: \"icon\", value: { stringValue: options.icon } }\n            );\n        }\n\n        if (options.data) {\n            notification.attributes = notification.attributes || [];\n            const dataAsString = JSON.stringify(options.data);\n            notification.attributes.push(\n                { key: \"data\", value: { stringValue: dataAsString } }\n            );\n        }\n\n        if (typeof options.panelExpiry === \"number\") {\n            notification.attributes = notification.attributes || [];\n            notification.attributes.push(\n                { key: \"panelExpiry\", value: { stringValue: options.panelExpiry.toString() } }\n            );\n        }\n\n        if (typeof options.toastExpiry === \"number\") {\n            notification.attributes = notification.attributes || [];\n            notification.attributes.push(\n                { key: \"toastExpiry\", value: { stringValue: options.toastExpiry.toString() } }\n            );\n        }\n    }\n\n    private handleActions(options: Glue42.Notifications.Glue42NotificationOptions, id: string, notification: GnsNotificationSettings) {\n        const validActions = options.actions.slice(0, this.maxActions);\n\n        let index = STARTING_INDEX;\n        for (const action of validActions) {\n            const args: GnsNotificationActionPayload & { [key: string]: string; } = {\n                g42notificationId: id,\n                g42action: action.action,\n                g42interopMethod: action.interop?.method,\n                g42interopTarget: action.interop?.target,\n            };\n            // properly convert between args and GNS value\n            const parameters = Object.keys(args).map((key) => {\n                const value = args[key];\n                return {\n                    name: key,\n                    value: {\n                        stringValue: value\n                    }\n                };\n            });\n\n            const glueAction: GnsNotificationActionSettings = {\n                name: `${this.methodNameRoot}_${index}`,\n                description: action.title,\n                displayName: action.title,\n                parameters\n            };\n\n            notification.actions.push(glueAction);\n            index++;\n        }\n    }\n\n    private validate(options: Glue42.Notifications.Glue42NotificationOptions) {\n        if (!options) {\n            throw new Error(\"invalid options - should be an object\");\n        }\n        if (typeof options !== \"object\") {\n            throw new Error(\"invalid options - should be an object\");\n        }\n        if (!options.title) {\n            throw new Error(\"invalid options - should have title\");\n        }\n        if (typeof options.title !== \"string\") {\n            throw new Error(\"invalid options - title should be a string\");\n        }\n        if (options.severity && typeof options.severity !== \"string\") {\n            throw new Error(\"invalid options - severity should be a string\")\n        }\n        if (options.panelExpiry && typeof options.panelExpiry !== \"number\") {\n            throw new Error(\"invalid options - panelExpiry should be a number\")\n        }\n        if (options.toastExpiry && typeof options.toastExpiry !== \"number\") {\n            throw new Error(\"invalid options - toastExpiry should be a number\")\n        }\n    }\n\n    private subscribe() {\n        this.subscriptionsCountForNotifications++;\n        if (!this.subscribedForNotifications) {\n            this.subscribedForNotifications = true;\n\n            this.logger.info(`Attempting to subscribe to \"${this.NotificationsSubscribeStream}\".`);\n            this.interop\n                .subscribe(this.NotificationsSubscribeStream, {\n                    arguments: {\n                        sendDeltaOnly: true\n                    }\n                })\n                .then((sub) => {\n                    this.subscriptionForNotifications = sub;\n                    this.logger.info(`Successfully subscribed to \"${this.NotificationsSubscribeStream}\".`);\n                    sub.onData(({ data }) => {\n                        this.handleData(data);\n                    });\n                    sub.onClosed((...args) => {\n                        this.subscribedForNotifications = false;\n                        this.logger.info(\n                            `Stream subscription Closed - ${JSON.stringify(args)}`\n                        );\n                    });\n                    sub.onFailed((...args) => {\n                        this.subscribedForNotifications = false;\n                        this.logger.warn(\n                            `Stream subscription Failed - ${JSON.stringify(args)}`\n                        );\n                    });\n                })\n                .catch((e) => {\n                    this.subscribedForNotifications = false;\n                    this.logger.error(`Unable to subscribe to \"${this.NotificationsSubscribeStream}\"`, e);\n                });\n        }\n    }\n\n    private subscribeForCounterStream() {\n        this.subscriptionsCountForCounter++;\n        if (!this.subscribedCounterStream) {\n            this.subscribedCounterStream = true;\n            this.logger.info(`Attempting to subscribe to \"${this.NotificationsCounterStream}\".`);\n            this.interop\n                .subscribe(this.NotificationsCounterStream, {\n                    arguments: {\n                        sendDeltaOnly: true\n                    }\n                })\n                .then((sub) => {\n                    this.subscriptionForCounter = sub;\n                    this.logger.info(`Successfully subscribed to \"${this.NotificationsCounterStream}\".`);\n                    sub.onData(({ data }) => {\n                        this.registry.execute(\"on-counter-changed\", { count: data.count });\n                    });\n                    sub.onClosed((...args) => {\n                        this.subscribedCounterStream = false;\n                        this.logger.info(\n                            `Stream subscription Closed - ${JSON.stringify(args)}`\n                        );\n                    });\n                    sub.onFailed((...args) => {\n                        this.subscribedCounterStream = false;\n                        this.logger.warn(\n                            `Stream subscription Failed - ${JSON.stringify(args)}`\n                        );\n                    });\n                })\n                .catch((e) => {\n                    this.subscribedCounterStream = false;\n                    this.logger.error(`Unable to subscribe to \"${this.NotificationsCounterStream}\"`, e);\n                });\n        }\n    }\n\n    private subscribeInternalEvents() {\n        this.registry.add(\"on-notification-closed\", (id) => {\n            this.handleOnClosed(id);\n        });\n        this.registry.add(\"on-notification-raised\", (notification) => {\n            this.handleOnShow(notification.id);\n        });\n    }\n\n    private handleData(message: StreamMessage) {\n        try {\n            if (\"items\" in message && Array.isArray(message.items)) {\n                this.handleItemsData(message);\n            } else if (\"deltas\" in message && Array.isArray(message.deltas)) {\n                this.handleDeltas(message);\n            }\n            if (\"configuration\" in message && typeof message.configuration === \"object\") {\n                this.logger.info(`Received configuration ${JSON.stringify(message.configuration)} from the stream`);\n                this.registry.execute(\"on-configuration-changed\", message.configuration, message.configuration.allApplications);\n            }\n            if (\"command\" in message && typeof message.command === \"string\") {\n                this.logger.info(`Received command \"${message.command ?? JSON.stringify(message)}\" from the stream`);\n                if (message.command === \"showPanel\" || message.command === \"hidePanel\") {\n                    this.registry.execute(\"on-panel-visibility-changed\", message.command === \"showPanel\");\n                }\n            }\n        } catch (e) {\n            this.logger.error(`Failed to parse data from the stream`, e);\n        }\n    }\n\n    private handleItemsData(message: StreamNotification) {\n        const items = message.items;\n        this.logger.info(\n            `Received ${items.length} notifications from the stream`\n        );\n        const notifications: Glue42.Notifications.NotificationData[] = items;\n\n        // will handle the notifications in case of snapshot\n        if (message.isSnapshot) {\n            notifications.forEach((n) => {\n                this.registry.execute(\"on-notification-raised\", n);\n            });\n        } else {\n            const notification = notifications[0];\n            if (notification.state === \"Closed\") {\n                this.registry.execute(\"on-notification-closed\", { id: notification.id });\n            } else if (notification.state === \"Active\") {\n                this.registry.execute(\"on-notification-raised\", notification);\n            }\n        }\n    }\n\n    private handleDeltas(message: StreamNotificationDeltas) {\n        const deltas = message.deltas;\n        deltas.forEach((info) => {\n            const id = info.id;\n            const delta = info.delta;\n            if (delta.state === \"Closed\") {\n                this.registry.execute(\"on-notification-closed\", { id });\n            } else {\n                this.registry.execute(\"on-state-changed\", { id }, delta.state);\n            }\n        });\n    }\n\n    private handleOnClosed(id: string) {\n        const { notification, key }: { notification: Glue42Notification; key: string; } = this.getNotification(id);\n        if (notification) {\n            this.handleEvent(notification, \"close\");\n            delete this.notifications[key];\n        }\n    }\n\n    private handleOnShow(id: string) {\n        const { notification }: { notification: Glue42Notification; key: string; } = this.getNotification(id);\n        if (notification) {\n            this.handleEvent(notification, \"show\");\n        }\n    }\n\n    private getNotification(id: string) {\n        let notification: Glue42Notification | undefined;\n        let key: string;\n        for (const k in this.notifications) {\n            if (this.notifications[k].id === id) {\n                notification = this.notifications[k];\n                key = k;\n                break;\n            }\n        }\n        return { notification, key };\n    }\n\n    private handleNotificationEvent(args: Readonly<any>): void {\n        const gnsNotificationArgs = this.getGnsNotificationArgs(args);\n        if (gnsNotificationArgs.event === \"unknown\") {\n            // we cannot handle this event since we do not understand it\n            return;\n        }\n        const notification = this.notifications[gnsNotificationArgs.notificationId];\n        if (!notification) {\n            // we cannot handle this event since notification is missing\n            return;\n        }\n        this.handleNotificationEventCore(notification, gnsNotificationArgs);\n    }\n\n    private handleNotificationEventCore(notification: Readonly<Glue42Notification>, args: Readonly<GnsNotificationEventArgs>): void {\n        switch (args.event) {\n            case \"action\": {\n                return this.handleNotificationActionEvent(notification, args.notificationActionPayload);\n            }\n            case \"click\": {\n                return this.handleNotificationClickEvent(notification);\n            }\n            case \"close\": {\n                return this.handleEvent(notification, \"close\");\n            }\n            case \"error\": {\n                return this.handleNotificationErrorEvent(notification, args.error);\n            }\n            case \"show\": {\n                return this.handleEvent(notification, \"show\");\n            }\n            default: {\n                // unexpected event, do nothing\n            }\n        }\n    }\n\n    private handleNotificationActionEvent(notification: Readonly<Glue42Notification>, payload: Readonly<GnsNotificationActionPayload>): void {\n        // user event\n        const event: { type: string, action?: string } = {\n            type: \"onaction\",\n            action: payload.g42action\n        };\n\n        if (notification.onaction) {\n            notification.onaction(event as Glue42.Notifications.ActionEvent);\n        }\n\n        // interop\n        const actionDefinition = (notification.actions || []).find((item) => item.action === payload.g42action);\n        const actionInterop = actionDefinition.interop;\n        if (actionInterop) {\n            this.interop.invoke(actionInterop.method, actionInterop.arguments || {}, actionInterop.target || \"best\");\n        }\n\n        // dispatch\n        notification.dispatchEvent(event as Event);\n    }\n\n    private handleNotificationClickEvent(notification: Readonly<Glue42Notification>): void {\n        // user event\n        const event = { type: \"onclick\" } as Event;\n        if (notification.onclick) {\n            notification.onclick(event);\n        }\n\n        // interop call\n        const clickInterop = notification.options.clickInterop;\n        if (clickInterop) {\n            this.interop.invoke(clickInterop.method, clickInterop.arguments || {}, clickInterop.target || \"best\");\n        }\n\n        // dispatch\n        notification.dispatchEvent(event);\n    }\n\n    private handleEvent(notification: Readonly<Glue42Notification>, eventType: keyof NotificationEventMap): void {\n        // user event\n        const event = { type: eventType } as Event;\n        const eventName = `on${eventType}`;\n        notification[eventName]?.(event);\n\n        // dispatch\n        notification.dispatchEvent(event);\n    }\n\n    private handleNotificationErrorEvent(notification: Readonly<Glue42Notification>, error: Readonly<Error>): void {\n        // user event\n        const event = { type: \"onerror\", error } as unknown as Event;\n        if (notification.onerror) {\n            notification.onerror(event);\n        }\n\n        // dispatch\n        notification.dispatchEvent(event);\n    }\n\n    private getGnsNotificationArgs(args: Readonly<any>): GnsNotificationEventArgs {\n        let result: GnsNotificationEventArgs;\n        const event = args.notification?.event;\n        if (!event) {\n            result = this.getBackwardGnsNotificationArgs(args);\n        } else {\n            result = {\n                event,\n                notificationId: args.notification.sourceNotificationId,\n                notificationActionPayload: args as GnsNotificationActionPayload\n            };\n        }\n        return result;\n    }\n\n    private getBackwardGnsNotificationArgs(args: Readonly<any>): GnsNotificationEventArgs {\n        let result: GnsNotificationEventArgs;\n        if (args.g42notificationId) {\n            result = {\n                event: \"action\",\n                notificationId: args.g42notificationId,\n                notificationActionPayload: args as GnsNotificationActionPayload\n            };\n        } else if (args.notification?.sourceNotificationId) {\n            result = {\n                event: \"click\",\n                notificationId: args.notification.sourceNotificationId,\n                notificationActionPayload: args as GnsNotificationActionPayload\n            };\n        } else {\n            result = {\n                event: \"unknown\",\n                notificationId: undefined,\n                notificationActionPayload: args as GnsNotificationActionPayload\n            };\n        }\n\n        return result;\n    }\n\n    private closeStreamSubscriptionIfNoNeeded(): void {\n        this.subscriptionsCountForNotifications--;\n\n        if (this.subscriptionForNotifications && this.subscriptionsCountForNotifications === 0) {\n            this.subscriptionForNotifications.close();\n            this.subscriptionForNotifications = undefined;\n        }\n    }\n\n    private closeStreamCounterSubscriptionIfNoNeeded(): void {\n        this.subscriptionsCountForCounter--;\n\n        if (this.subscriptionForCounter && this.subscriptionsCountForCounter === 0) {\n            this.subscriptionForCounter.close();\n            this.subscriptionForCounter = undefined;\n        }\n    }\n}\n","import CallbackRegistryFactory, { CallbackRegistry, UnsubscribeFunction } from \"callback-registry\";\r\nimport { Glue42 } from \"../../glue\";\r\nimport { Glue42Core } from \"@glue42/core\";\r\n\r\nconst ThemesConfigurationMethodName = \"T42.Themes.Configuration\";\r\ninterface ThemesConfiguration {\r\n    setThemesMethodName: string;\r\n    getThemesMethodName: string;\r\n    sharedContextName: string;\r\n    getThemesConfigurationMethodName: string;\r\n}\r\ninterface GetResult {\r\n    all: Glue42.Themes.Theme[];\r\n    selected: string;\r\n}\r\nexport class ThemesImpl implements Glue42.Themes.API {\r\n    private registry: CallbackRegistry = CallbackRegistryFactory();\r\n    private sharedContextName: string;\r\n    private getMethodName: string;\r\n    private setMethodName: string;\r\n    private isSubscribed = false;\r\n\r\n    constructor(private core: Glue42Core.GlueCore) {\r\n        this.getConfiguration();\r\n    }\r\n\r\n    public async list(): Promise<Glue42.Themes.Theme[]> {\r\n        await this.getConfiguration();\r\n        if (!this.getMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n        return (await this.getAll()).returned.all;\r\n    }\r\n\r\n    public async getCurrent(): Promise<Glue42.Themes.Theme> {\r\n        await this.getConfiguration();\r\n        if (!this.getMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n        const all = await this.getAll();\r\n        return all.returned.all.find((t) => t.name === all.returned.selected);\r\n    }\r\n\r\n    public async select(theme: string): Promise<void> {\r\n        await this.getConfiguration();\r\n        if (!this.setMethodName) {\r\n            throw new Error(\"not supported\");\r\n        }\r\n\r\n        await this.core.interop.invoke(this.setMethodName, { theme });\r\n    }\r\n\r\n    public onChanged(callback: (theme: Glue42.Themes.Theme) => any): UnsubscribeFunction {\r\n        this.subscribe();\r\n        return this.registry.add(\"changed\", callback);\r\n    }\r\n\r\n    private async getConfiguration() {\r\n        try {\r\n            if (this.sharedContextName) {\r\n                return;\r\n            }\r\n            const config = await this.core.interop.invoke<ThemesConfiguration>(ThemesConfigurationMethodName);\r\n            this.sharedContextName = config.returned.sharedContextName;\r\n            this.getMethodName = config.returned.getThemesMethodName;\r\n            this.setMethodName = config.returned.setThemesMethodName;\r\n        } catch (error) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    private async getAll() {\r\n        await this.getConfiguration();\r\n        return await this.core.interop.invoke<GetResult>(this.getMethodName);\r\n    }\r\n\r\n    private async subscribe() {\r\n        await this.getConfiguration();\r\n        if (this.isSubscribed) {\r\n            return;\r\n        }\r\n        this.isSubscribed = true;\r\n        this.core.contexts.subscribe(this.sharedContextName, (data: { all: Glue42.Themes.Theme[], selected: string }) => {\r\n            if (data && data.all && data.selected) {\r\n                this.registry.execute(\"changed\", data.all.find((t) => t.name === data.selected));\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Glue42 } from \"../../glue\";\r\nimport { ThemesImpl } from \"./themes\";\r\nimport { Glue42Core } from \"@glue42/core\";\r\n\r\nexport function factory(core: Glue42Core.GlueCore): Glue42.Themes.API & { ready: () => Promise<void>; } {\r\n    const themes = new ThemesImpl(core);\r\n\r\n    return {\r\n        list: themes.list.bind(themes),\r\n        getCurrent: themes.getCurrent.bind(themes),\r\n        select: themes.select.bind(themes),\r\n        onChanged: themes.onChanged.bind(themes),\r\n        ready: () => Promise.resolve(),\r\n    };\r\n}\r\n","\nexport const GLUE42_FDC3_INTENTS_METHOD_PREFIX = \"Tick42.FDC3.Intents.\";\nexport const INTENTS_RESOLVER_INTEROP_PREFIX = \"T42.Intents.Resolver.Control\";\n\nexport const INTENTS_RESOLVER_WIDTH = 400;\nexport const INTENTS_RESOLVER_HEIGHT = 440;\nexport const DEFAULT_RESOLVER_RESPONSE_TIMEOUT = 60000;\n\nexport const INTENT_HANDLER_DEFAULT_PROPS = [\"applicationName\", \"type\"];\nexport const INTENTS_RESOLVER_APP_NAME = \"intentsResolver\";\n\n// JS setTimeout max value - When delay is larger than 2147483647 or less than 1, the delay will be set to 1\nexport const MAX_SET_TIMEOUT_DELAY = 2147483647;\n\nexport const DEFAULT_METHOD_RESPONSE_TIMEOUT_MS = 60000;\n\nexport const DEFAULT_RAISE_TIMEOUT_MS = 90000;\n","export const PromisePlus = <T>(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void, timeoutMilliseconds: number, timeoutMessage?: string): Promise<T> => {\n\n    return new Promise<T>((resolve, reject) => {\n        const timeout = setTimeout(() => {\n\n            const message = timeoutMessage || `Promise timeout hit: ${timeoutMilliseconds}`;\n\n            reject(message);\n        }, timeoutMilliseconds);\n\n        const providedPromise = new Promise<T>(executor);\n\n        providedPromise\n            .then((result) => {\n                clearTimeout(timeout);\n                resolve(result);\n            })\n            .catch((error) => {\n                clearTimeout(timeout);\n                reject(error);\n            });\n    });\n};\n\nexport const PromiseWrap = <T>(promise: () => Promise<T>, timeoutMilliseconds: number, timeoutMessage?: string): Promise<T> => {\n    return new Promise<T>((resolve, reject) => {\n\n        let promiseActive = true;\n\n        const timeout = setTimeout(() => {\n            if (!promiseActive) {\n                return;\n            }\n            promiseActive = false;\n            const message = timeoutMessage || `Promise timeout hit: ${timeoutMilliseconds}`;\n\n            reject(message);\n        }, timeoutMilliseconds);\n\n        promise()\n            .then((result) => {\n                if (!promiseActive) {\n                    return;\n                }\n                promiseActive = false;\n                clearTimeout(timeout);\n                resolve(result);\n            })\n            .catch((error) => {\n                if (!promiseActive) {\n                    return;\n                }\n                promiseActive = false;\n                clearTimeout(timeout);\n\n                reject(error);\n            });\n    });\n};\n","import shortid from \"shortid\";\r\nimport { Glue42 } from \"../../glue\";\r\nimport { AppDefinition, CoreRaiseIntentArgs, GetWindowsInfoResult, GetWindowsInfoResultItem, IntentInfo, IntentsResolverResponse, IntentsResolverResponsePromise, IntentsResolverResponseValidator, IntentsResolverStartContext, ResolverInstance, ShouldResolverOpen } from \"./types\";\r\nimport { INTENTS_RESOLVER_INTEROP_PREFIX, GLUE42_FDC3_INTENTS_METHOD_PREFIX, INTENTS_RESOLVER_HEIGHT, INTENTS_RESOLVER_WIDTH, INTENT_HANDLER_DEFAULT_PROPS, INTENTS_RESOLVER_APP_NAME, DEFAULT_RESOLVER_RESPONSE_TIMEOUT, DEFAULT_RAISE_TIMEOUT_MS, DEFAULT_METHOD_RESPONSE_TIMEOUT_MS, MAX_SET_TIMEOUT_DELAY } from \"./constants\";\r\nimport { PromisePlus, PromiseWrap } from \"./common\";\r\n\r\nexport class Intents implements Glue42.Intents.API {\r\n    private myIntents = new Set<string>();\r\n\r\n    private intentsResolverAppName: string;\r\n    private readonly intentsResolverResponsePromises: { [instanceId: string]: IntentsResolverResponsePromise } = {};\r\n\r\n    private useIntentsResolverUI = true;\r\n    private intentsResolverResponseTimeout: number;\r\n\r\n    private unregisterIntentPromises: Promise<void>[] = [];\r\n\r\n    constructor(private interop: Glue42.Interop.API, private windows: Glue42.Windows.API, private logger: Glue42.Logger.API, options: Glue42.Config, private appManager?: Glue42.AppManager.API) {\r\n        this.checkIfIntentsResolverIsEnabled(options, appManager);\r\n    }\r\n\r\n    public async find(intentFilter?: string | Glue42.Intents.IntentFilter): Promise<Glue42.Intents.Intent[]> {\r\n        await Promise.all(this.unregisterIntentPromises);\r\n\r\n        let intents = await this.all();\r\n        if (typeof intentFilter === \"undefined\") {\r\n            return intents;\r\n        }\r\n\r\n        if (typeof intentFilter === \"string\") {\r\n            return intents.filter((intent) => intent.name === intentFilter);\r\n        }\r\n\r\n        if (typeof intentFilter !== \"object\") {\r\n            throw new Error(\"Please provide the intentFilter as a string or an object!\");\r\n        }\r\n\r\n        if (intentFilter.contextType) {\r\n            const ctToLower = intentFilter.contextType.toLowerCase();\r\n            intents = intents.filter((intent) => intent.handlers.some((handler) => handler.contextTypes?.some((ct) => ct.toLowerCase() === ctToLower)));\r\n        }\r\n\r\n        if (intentFilter.resultType) {\r\n            const resultTypeToLower = intentFilter.resultType.toLowerCase();\r\n            intents = intents.filter((intent) => intent.handlers.some((handler) => handler.resultType?.toLowerCase() === resultTypeToLower));\r\n        }\r\n\r\n        if (intentFilter.name) {\r\n            intents = intents.filter((intent) => intent.name === intentFilter.name);\r\n        }\r\n\r\n        return intents;\r\n    }\r\n\r\n    public async raise(intentRequest: string | Glue42.Intents.IntentRequest): Promise<Glue42.Intents.IntentResult> {\r\n        if ((typeof intentRequest !== \"string\" && typeof intentRequest !== \"object\") || (typeof intentRequest === \"object\" && typeof intentRequest.intent !== \"string\")) {\r\n            throw new Error(\"Please provide the intent as a string or an object with an intent property!\");\r\n        }\r\n\r\n        if (typeof intentRequest === \"string\") {\r\n            intentRequest = { intent: intentRequest };\r\n        }\r\n\r\n        this.validateIntentRequest(intentRequest);\r\n\r\n        await Promise.all(this.unregisterIntentPromises);\r\n\r\n        const timeout = intentRequest.timeout || DEFAULT_RAISE_TIMEOUT_MS;\r\n\r\n        const resolverInstance: ResolverInstance = {};\r\n\r\n        const coreRaiseIntentFn = this.coreRaiseIntent.bind(this, { request: intentRequest, resolverInstance, timeout });\r\n\r\n        if (intentRequest.waitUserResponseIndefinitely) {\r\n            return coreRaiseIntentFn();\r\n        }\r\n\r\n        // start timeout here -> default (waitUserResponseIndefinitely: false)\r\n        const resultPromise = PromiseWrap<Glue42.Intents.IntentResult>(coreRaiseIntentFn,\r\n            timeout, `Timeout of ${timeout}ms hit for intent request ${JSON.stringify(intentRequest)}`\r\n        );\r\n\r\n        resultPromise.catch(() => this.handleRaiseOnError(resolverInstance.instanceId));\r\n\r\n        return resultPromise;\r\n    }\r\n\r\n    public async all(): Promise<Glue42.Intents.Intent[]> {\r\n        await Promise.all(this.unregisterIntentPromises);\r\n\r\n        // Gathers all intents from:\r\n        // 1. Application definitions\r\n        // 2. Running instances (application can register dynamic intents by calling `addIntentListener()` that aren't predefined inside of their application definitions)\r\n        // It also populates intent handlers (actual entities that can handle the intent).\r\n        let apps: AppDefinition[];\r\n        try {\r\n            const result = await this.interop.invoke<{ applications: AppDefinition[] }>(\"T42.ACS.GetApplications\", { withIntentsInfo: true });\r\n            apps = result.returned.applications;\r\n        } catch (e) {\r\n            this.logger.error(`Failed to get the applications!`, e);\r\n            return [];\r\n        }\r\n        const intents: { [key: string]: Glue42.Intents.Intent } = {};\r\n        const appsWithIntents = apps.filter((app) => app.intents && app.intents.length > 0);\r\n        //  Gather app handlers from application definitions.\r\n        for (const app of appsWithIntents) {\r\n            for (const intentDef of app.intents) {\r\n                let intent = intents[intentDef.name];\r\n                if (!intent) {\r\n                    intent = {\r\n                        name: intentDef.name,\r\n                        handlers: [],\r\n                    };\r\n                    intents[intentDef.name] = intent;\r\n                }\r\n\r\n                const handler: Glue42.Intents.IntentHandler = {\r\n                    applicationName: app.name,\r\n                    applicationTitle: app.title || \"\",\r\n                    applicationDescription: app.caption,\r\n                    displayName: intentDef.displayName,\r\n                    contextTypes: intentDef.contexts,\r\n                    applicationIcon: app.icon,\r\n                    type: \"app\",\r\n                    resultType: intentDef.resultType\r\n                };\r\n\r\n                intent.handlers.push(handler);\r\n            }\r\n        }\r\n\r\n        const servers = this.interop.servers();\r\n        const serverWindowIds = servers.map((server) => server.windowId).filter((serverWindowId) => typeof serverWindowId !== \"undefined\");\r\n\r\n        const T42WndGetInfo = \"T42.Wnd.GetInfo\";\r\n        const isT42WndGetInfoMethodRegistered = this.interop.methods().some((method) => method.name === T42WndGetInfo);\r\n\r\n        let windowsInfos: GetWindowsInfoResultItem[];\r\n        // For backwards compatibility with previous versions of Glue Desktop, the windows' titles will be attempted to be obtained using the Windows API.\r\n        if (isT42WndGetInfoMethodRegistered) {\r\n            try {\r\n                const result = await this.interop.invoke<GetWindowsInfoResult>(T42WndGetInfo, { ids: serverWindowIds });\r\n                windowsInfos = result.returned.windows;\r\n            } catch (e) {\r\n                // Swallow the error. The windows' titles will be attempted to be obtained using the Windows API.\r\n            }\r\n        }\r\n\r\n        // Discover all running instances that provide intents, and add them to the corresponding intent.\r\n        for (const server of servers) {\r\n            await Promise.all(server.getMethods()\r\n                .filter((method) => method.name.startsWith(GLUE42_FDC3_INTENTS_METHOD_PREFIX))\r\n                .map(async (method) => {\r\n                    const intentName = method.name.replace(GLUE42_FDC3_INTENTS_METHOD_PREFIX, \"\");\r\n                    let intent = intents[intentName];\r\n                    if (!intent) {\r\n                        intent = {\r\n                            name: intentName,\r\n                            handlers: [],\r\n                        };\r\n                        intents[intentName] = intent;\r\n                    }\r\n                    const info = method.flags.intent as Omit<Glue42.Intents.AddIntentListenerRequest, \"intent\">;\r\n\r\n                    const app = apps.find((appWithIntents) => appWithIntents.name === server.application);\r\n                    let appIntent: IntentInfo | undefined;\r\n                    if (app && app.intents) {\r\n                        appIntent = app.intents.find((appDefIntent) => appDefIntent.name === intentName);\r\n                    }\r\n\r\n                    const title = await this.windowsIdToTitle(server.windowId, windowsInfos);\r\n                    const handler: Glue42.Intents.IntentHandler = {\r\n                        instanceId: server.instance,\r\n                        applicationName: server.application,\r\n                        applicationIcon: info.icon || app?.icon,\r\n                        applicationTitle: app?.title || \"\",\r\n                        applicationDescription: info.description || app?.caption,\r\n                        displayName: info.displayName || appIntent?.displayName,\r\n                        contextTypes: info.contextTypes || appIntent?.contexts,\r\n                        instanceTitle: title,\r\n                        type: \"instance\",\r\n                        resultType: appIntent?.resultType || info.resultType\r\n                    };\r\n                    intent.handlers.push(handler);\r\n                }));\r\n        }\r\n\r\n        return Object.values(intents);\r\n    }\r\n\r\n    public addIntentListener(intent: string | Glue42.Intents.AddIntentListenerRequest, handler: (context: Glue42.Intents.IntentContext) => any): { unsubscribe: () => void } {\r\n        if ((typeof intent !== \"string\" && typeof intent !== \"object\") || (typeof intent === \"object\" && typeof intent.intent !== \"string\")) {\r\n            throw new Error(\"Please provide the intent as a string or an object with an intent property!\");\r\n        }\r\n        if (typeof handler !== \"function\") {\r\n            throw new Error(\"Please provide the handler as a function!\");\r\n        }\r\n\r\n        // `addIntentListener()` is sync.\r\n        // tslint:disable-next-line:no-console\r\n        const intentName = typeof intent === \"string\" ? intent : intent.intent;\r\n        const methodName = `${GLUE42_FDC3_INTENTS_METHOD_PREFIX}${intentName}`;\r\n        let intentFlag: Omit<Glue42.Intents.AddIntentListenerRequest, \"intent\"> = {};\r\n        // eslint-disable-next-line prefer-const\r\n        let registerPromise: Promise<void>;\r\n\r\n        const alreadyRegistered = this.myIntents.has(intentName);\r\n\r\n        if (alreadyRegistered) {\r\n            throw new Error(`Intent listener for intent ${intentName} already registered!`);\r\n        }\r\n\r\n        this.myIntents.add(intentName);\r\n\r\n        const result = {\r\n            unsubscribe: (): void => {\r\n                this.myIntents.delete(intentName);\r\n\r\n                registerPromise\r\n                    .then(() => this.interop.unregister(methodName))\r\n                    .catch((err) => this.logger.trace(`Unregistration of a method with name ${methodName} failed with reason: ${JSON.stringify(err)}`));\r\n            }\r\n        };\r\n\r\n        if (typeof intent === \"object\") {\r\n            const { intent: removed, ...rest } = intent;\r\n            intentFlag = rest;\r\n        }\r\n\r\n        registerPromise = this.interop.register({ name: methodName, flags: { intent: intentFlag } }, (args: Glue42.Intents.IntentContext) => {\r\n            if (this.myIntents.has(intentName)) {\r\n                return handler(args);\r\n            }\r\n        });\r\n\r\n        registerPromise.catch((err) => {\r\n            this.myIntents.delete(intentName);\r\n\r\n            this.logger.warn(`Registration of a method with name ${methodName} failed with reason: ${JSON.stringify(err)}`);\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    public async register(intent: string | Glue42.Intents.AddIntentListenerRequest, handler: (context: Glue42.Intents.IntentContext) => any): Promise<{ unsubscribe: () => void }> {\r\n        if ((typeof intent !== \"string\" && typeof intent !== \"object\") || (typeof intent === \"object\" && typeof intent.intent !== \"string\")) {\r\n            throw new Error(\"Please provide the intent as a string or an object with an intent property!\");\r\n        }\r\n\r\n        if (typeof handler !== \"function\") {\r\n            throw new Error(\"Please provide the handler as a function!\");\r\n        }\r\n\r\n        await Promise.all(this.unregisterIntentPromises);\r\n\r\n        // tslint:disable-next-line:no-console\r\n        const intentName = typeof intent === \"string\" ? intent : intent.intent;\r\n        const methodName = this.buildInteropMethodName(intentName);\r\n\r\n        let intentFlag: Omit<Glue42.Intents.AddIntentListenerRequest, \"intent\"> = {};\r\n\r\n        const alreadyRegistered = this.myIntents.has(intentName);\r\n\r\n        if (alreadyRegistered) {\r\n            throw new Error(`Intent listener for intent ${intentName} already registered!`);\r\n        }\r\n\r\n        this.myIntents.add(intentName);\r\n\r\n        if (typeof intent === \"object\") {\r\n            const { intent: removed, ...rest } = intent;\r\n            intentFlag = rest;\r\n        }\r\n\r\n        try {\r\n            await this.interop.register({ name: methodName, flags: { intent: intentFlag } }, (args: Glue42.Intents.IntentContext) => {\r\n                if (this.myIntents.has(intentName)) {\r\n                    return handler(args);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            this.myIntents.delete(intentName);\r\n\r\n            throw new Error(`Registration of a method with name ${methodName} failed with reason: ${JSON.stringify(err)}`);\r\n        }\r\n\r\n        return {\r\n            unsubscribe: () => this.unsubscribeIntent(intentName)\r\n        };\r\n    }\r\n\r\n    private async coreRaiseIntent({ request, resolverInstance, timeout }: CoreRaiseIntentArgs): Promise<Glue42.Intents.IntentResult> {\r\n        const intentDef = await this.get(request.intent);\r\n\r\n        if (typeof intentDef === \"undefined\") {\r\n            throw new Error(`Intent ${request.intent} not found.`);\r\n        }\r\n\r\n        const { open, reason } = this.checkIfResolverShouldBeOpened(intentDef, request);\r\n\r\n        if (!open) {\r\n            this.logger.trace(`Intent Resolver UI won't be used. Reason: ${reason}`);\r\n\r\n            // start timeout here -> waitUserResponseIndefinitely: true, but resolver will not be opened\r\n            return request.waitUserResponseIndefinitely\r\n                ? PromiseWrap<Glue42.Intents.IntentResult>(() => this.raiseIntent(request, timeout), timeout, `Timeout of ${timeout}ms hit for raise to resolve`)\r\n                : this.raiseIntent(request, timeout);\r\n        }\r\n\r\n        const resolverHandler = await this.startResolverApp(request, resolverInstance);\r\n\r\n        this.logger?.trace(`Raising intent to target handler: ${JSON.stringify(resolverHandler)} with timeout of ${timeout}`);\r\n\r\n        if (request.waitUserResponseIndefinitely) {\r\n            return PromiseWrap(() => this.raiseIntentToTargetHandler(request, resolverHandler, timeout), timeout, `Timeout of ${timeout}ms hit for raise to resolve`);\r\n        }\r\n\r\n        const result = await this.raiseIntentToTargetHandler(request, resolverHandler, timeout);\r\n\r\n        this.logger?.trace(`Result from raise() method for intent ${JSON.stringify(request.intent)}: ${JSON.stringify(result)}`);\r\n\r\n        return result;\r\n    }\r\n\r\n    private async get(intent: string): Promise<Glue42.Intents.Intent> {\r\n        return (await this.all()).find((registeredIntent) => registeredIntent.name === intent);\r\n    }\r\n\r\n    private async raiseIntent(intentRequest: Glue42.Intents.IntentRequest, timeout?: number): Promise<Glue42.Intents.IntentResult> {\r\n        const intentName = intentRequest.intent;\r\n        const intentDef = await this.get(intentName);\r\n\r\n        if (typeof intentDef === \"undefined\") {\r\n            throw new Error(`Intent ${intentName} not found.`);\r\n        }\r\n\r\n        const firstFoundAppHandler = intentRequest.handlers ? this.findHandlerByFilter(intentRequest.handlers, { type: \"app\" }) : this.findHandlerByFilter(intentDef.handlers, { type: \"app\" });\r\n\r\n        const firstFoundInstanceHandler = intentRequest.handlers ? this.findHandlerByFilter(intentRequest.handlers, { type: \"instance\" }) : this.findHandlerByFilter(intentDef.handlers, { type: \"instance\" });\r\n\r\n        let handler: Glue42.Intents.IntentHandler | undefined;\r\n\r\n        // target the first found instance or start a new one if there isn't\r\n        if (!intentRequest.target || intentRequest.target === \"reuse\") {\r\n            handler = firstFoundInstanceHandler || firstFoundAppHandler;\r\n        }\r\n\r\n        // start new instance of the first handler in handlers / intentDef.handlers\r\n        if (intentRequest.target === \"startNew\") {\r\n            handler = firstFoundAppHandler;\r\n        }\r\n\r\n        // open a new app from the list of intentRequest.handlers (if passed) or intentDef.handlers\r\n        if (typeof intentRequest.target === \"object\" && intentRequest.target.app) {\r\n            handler = this.findHandlerByFilter(intentDef.handlers, { app: intentRequest.target.app });\r\n        }\r\n\r\n        // target the instance in the list of intentRequest.handlers (if passed) or intentDef.handlers\r\n        if (typeof intentRequest.target === \"object\" && intentRequest.target.instance) {\r\n            handler = this.findHandlerByFilter(intentDef.handlers, { instance: intentRequest.target.instance, app: intentRequest.target.app });\r\n        }\r\n\r\n        if (!handler) {\r\n            throw new Error(`Can not raise intent for request ${JSON.stringify(intentRequest)} - can not find intent handler!`);\r\n        }\r\n\r\n        const result = await this.raiseIntentToTargetHandler(intentRequest, handler, timeout);\r\n\r\n        return result;\r\n    }\r\n\r\n    private async raiseIntentToTargetHandler(intentRequest: Glue42.Intents.IntentRequest, handler: Glue42.Intents.IntentHandler, timeout?: number): Promise<Glue42.Intents.IntentResult> {\r\n        this.logger?.trace(`Raising intent to target handler:${JSON.stringify(handler)}`);\r\n\r\n        if (!handler.instanceId) {\r\n            handler.instanceId = await this.invokeStartApp(handler.applicationName, intentRequest.context, intentRequest.options);\r\n        }\r\n\r\n        const methodName = `${GLUE42_FDC3_INTENTS_METHOD_PREFIX}${intentRequest.intent}`;\r\n\r\n        const invokeOptions = {\r\n            methodResponseTimeoutMs: timeout ? timeout + 1000 : DEFAULT_METHOD_RESPONSE_TIMEOUT_MS,\r\n            waitTimeoutMs: timeout ? timeout + 1000 : DEFAULT_METHOD_RESPONSE_TIMEOUT_MS\r\n        };\r\n\r\n        const result = await this.interop.invoke(methodName, intentRequest.context, { instance: handler.instanceId }, invokeOptions);\r\n\r\n        this.logger?.trace(`raiseIntent command completed. Returning result: ${JSON.stringify(result)}`);\r\n\r\n        return {\r\n            request: intentRequest,\r\n            handler: { ...handler, type: \"instance\" },\r\n            result: result.returned\r\n        };\r\n    }\r\n\r\n    private async startResolverApp(intentRequest: Glue42.Intents.IntentRequest, resolverInstance?: ResolverInstance): Promise<Glue42.Intents.IntentHandler> {\r\n        this.logger?.trace(`Intents Resolver UI with app name ${this.intentsResolverAppName} will be used`);\r\n\r\n        const responseMethodName = await this.registerIntentResolverMethod();\r\n\r\n        this.logger?.trace(`Registered interop method ${responseMethodName}`);\r\n\r\n        const startContext = this.buildStartContext(intentRequest, responseMethodName);\r\n\r\n        const startOptions = await this.buildStartOptions();\r\n\r\n        this.logger?.trace(`Starting Intents Resolver UI with context: ${JSON.stringify(startContext)} and options: ${JSON.stringify(startOptions)}`);\r\n\r\n        const instance = await this.appManager.application(this.intentsResolverAppName).start(startContext, startOptions);\r\n\r\n        if (resolverInstance) {\r\n            resolverInstance.instanceId = instance.id;\r\n        }\r\n\r\n        this.logger?.trace(`Intents Resolver instance with id ${instance.id} opened`);\r\n\r\n        this.subscribeOnInstanceStopped(instance);\r\n\r\n        this.createResponsePromise(intentRequest, instance.id, responseMethodName);\r\n\r\n        const handler = await this.handleInstanceResponse(instance.id);\r\n\r\n        return handler;\r\n    }\r\n\r\n    private async windowsIdToTitle(id: string, windowsInfos?: GetWindowsInfoResultItem[]): Promise<string> {\r\n        if (typeof windowsInfos !== \"undefined\") {\r\n            return windowsInfos.find((windowsInfo) => windowsInfo.id === id)?.title;\r\n        }\r\n\r\n        // The Windows API could be undefined e.g. when running inside of a node environment.\r\n        const window = this.windows?.findById(id);\r\n        const title = await window?.getTitle();\r\n        return title;\r\n    }\r\n\r\n    private async handleInstanceResponse(instanceId: string): Promise<Glue42.Intents.IntentHandler> {\r\n        try {\r\n            const { handler, intent } = await this.intentsResolverResponsePromises[instanceId].promise;\r\n\r\n            this.logger?.trace(`Intent handler chosen for intent ${intent}: ${JSON.stringify(handler)}`);\r\n\r\n            this.stopResolverInstance(instanceId);\r\n\r\n            return handler;\r\n\r\n        } catch (error) {\r\n            this.stopResolverInstance(instanceId);\r\n\r\n            throw new Error(error as string);\r\n        }\r\n    }\r\n\r\n    private async registerIntentResolverMethod(): Promise<string> {\r\n        const methodName = INTENTS_RESOLVER_INTEROP_PREFIX + shortid();\r\n\r\n        await this.interop.register(methodName, this.resolverResponseHandler.bind(this));\r\n\r\n        return methodName;\r\n    }\r\n\r\n    private resolverResponseHandler(args: any, callerId: Glue42.Interop.Instance): void {\r\n        const { instance } = callerId;\r\n\r\n        const isValid = this.validateIntentsResolverResponse(args);\r\n\r\n        if (!isValid) {\r\n            this.logger.trace(`Intent Resolver sent invalid response. Error: ${isValid.error}`);\r\n\r\n            this.intentsResolverResponsePromises[instance].reject(isValid.error);\r\n\r\n            this.stopResolverInstance(instance);\r\n        }\r\n\r\n        const validResponse = isValid.ok;\r\n\r\n        this.intentsResolverResponsePromises[instance].resolve(validResponse);\r\n\r\n        this.cleanUpIntentResolverPromise(instance);\r\n    }\r\n\r\n    private buildStartContext(request: Glue42.Intents.IntentRequest, methodName: string): IntentsResolverStartContext {\r\n        const startContext: IntentsResolverStartContext = {\r\n            intent: request,\r\n            callerId: this.interop.instance.instance,\r\n            methodName\r\n        };\r\n\r\n        return startContext;\r\n    }\r\n\r\n    private async buildStartOptions(): Promise<Glue42.AppManager.ApplicationStartOptions | undefined> {\r\n        const win = this.windows.my();\r\n\r\n        if (!win) {\r\n            return;\r\n        }\r\n\r\n        const bounds = await win.getBounds();\r\n\r\n        return {\r\n            top: (bounds.height - INTENTS_RESOLVER_HEIGHT) / 2 + bounds.top,\r\n            left: (bounds.width - INTENTS_RESOLVER_WIDTH) / 2 + bounds.left,\r\n        };\r\n    }\r\n\r\n    private createResponsePromise(intentRequest: Glue42.Intents.IntentRequest, instanceId: string, methodName: string): void {\r\n        let resolve;\r\n        let reject;\r\n\r\n        const waitResponseTimeout = intentRequest.waitUserResponseIndefinitely ? MAX_SET_TIMEOUT_DELAY : this.intentsResolverResponseTimeout;\r\n\r\n        const promise = PromisePlus<IntentsResolverResponse>((res, rej) => {\r\n            resolve = res;\r\n            reject = rej;\r\n        },\r\n            waitResponseTimeout,\r\n            `Timeout of ${waitResponseTimeout}ms hit waiting for the user to choose a handler for intent ${intentRequest.intent}`);\r\n\r\n        this.intentsResolverResponsePromises[instanceId] = { intent: intentRequest.intent, resolve, reject, promise, methodName };\r\n    }\r\n\r\n    private async invokeStartApp(application: string, context: any, options?: Glue42.AppManager.ApplicationStartOptions) {\r\n        const result = await this.interop.invoke<{ Name: string, Id: string }>(\"T42.ACS.StartApplication\", { Name: application, options });\r\n        return result.returned.Id;\r\n    }\r\n\r\n    private subscribeOnInstanceStopped(instance: Glue42.AppManager.Instance): void {\r\n        const unsub = instance.onStopped((inst: Glue42.AppManager.Instance) => {\r\n            const intentPromise = this.intentsResolverResponsePromises[inst.id];\r\n\r\n            if (!intentPromise) {\r\n                return unsub();\r\n            }\r\n\r\n            intentPromise.reject(`Cannot resolve raise intent ${intentPromise.intent} - User closed ${this.intentsResolverAppName} app without choosing an intent handler`);\r\n\r\n            this.cleanUpIntentResolverPromise(inst.id);\r\n\r\n            unsub();\r\n        });\r\n    }\r\n\r\n    private async cleanUpIntentResolverPromise(instanceId: string) {\r\n        const intentPromise = this.intentsResolverResponsePromises[instanceId];\r\n\r\n        if (!intentPromise) {\r\n            return;\r\n        }\r\n\r\n        // typings are wrong and mark unregister as a sync method\r\n        const unregisterPromise = this.interop.unregister(intentPromise.methodName) as unknown as Promise<void>;\r\n\r\n        unregisterPromise.catch((error) => this.logger.warn(error));\r\n\r\n        delete this.intentsResolverResponsePromises[instanceId];\r\n    }\r\n\r\n    private validateIntentsResolverResponse(responseObj: any): IntentsResolverResponseValidator {\r\n        const invalidKey = Object.keys(responseObj).some((key) => key !== \"intent\" && key !== \"handler\");\r\n\r\n        if (invalidKey) {\r\n            return { isValid: false, error: \"Response is not a valid object. Expected { intent: string, handler: IntentHandler }\" };\r\n        }\r\n\r\n        if (typeof responseObj.intent !== \"string\") {\r\n            return { isValid: false, error: `Response object has invalid 'intent' key. Expected a string, got ${typeof responseObj.intent}` };\r\n        }\r\n\r\n        if (typeof responseObj.handler !== \"object\") {\r\n            return { isValid: false, error: `Response object has invalid 'handler' key. Expected an object, got ${typeof responseObj.handler}` };\r\n        }\r\n\r\n        const compulsoryKeysExist = INTENT_HANDLER_DEFAULT_PROPS.filter((key) => !(key in responseObj.handler));\r\n\r\n        if (compulsoryKeysExist.length) {\r\n            return { isValid: false, error: `Handler in Response object does not provide compulsory keys: ${compulsoryKeysExist.join(\", \")}` };\r\n        }\r\n\r\n        return { isValid: true, ok: { intent: responseObj.intent, handler: { ...responseObj.handler } } };\r\n    }\r\n\r\n    private handleRaiseOnError(instanceId?: string) {\r\n        if (!instanceId) {\r\n            return;\r\n        }\r\n\r\n        this.stopResolverInstance(instanceId);\r\n    }\r\n\r\n    private stopResolverInstance(instanceId: string): void {\r\n        const gdWin = this.windows.findById(instanceId);\r\n\r\n        gdWin?.close().catch((err) => this.logger.error(err));\r\n    }\r\n\r\n    private checkIfIntentsResolverIsEnabled(options: Glue42.Config, appManager: Glue42.AppManager.API): void {\r\n        /* if Glue is initialized with { appManager: false }, fallback to previous implementation and do not use Intents Resolver UI */\r\n        if (!appManager) {\r\n            this.useIntentsResolverUI = false;\r\n            return;\r\n        }\r\n\r\n        this.useIntentsResolverUI = typeof options.intents?.enableIntentsResolverUI === \"boolean\"\r\n            ? options.intents.enableIntentsResolverUI\r\n            : true;\r\n\r\n        this.intentsResolverAppName = options.intents?.intentsResolverAppName ?? INTENTS_RESOLVER_APP_NAME;\r\n\r\n        this.intentsResolverResponseTimeout = options.intents?.methodResponseTimeoutMs ?? DEFAULT_RESOLVER_RESPONSE_TIMEOUT;\r\n    }\r\n\r\n    private checkIfResolverShouldBeOpened(intent: Glue42.Intents.Intent, request: Glue42.Intents.IntentRequest): ShouldResolverOpen {\r\n        if (!this.useIntentsResolverUI) {\r\n            return { open: false, reason: `Intent Resolver is disabled. Raising intent to first found handler` };\r\n        }\r\n\r\n        const intentsResolverApp = this.appManager.application(this.intentsResolverAppName);\r\n\r\n        if (!intentsResolverApp) {\r\n            return { open: false, reason: `Intent Resolver Application with name ${this.intentsResolverAppName} not found.` };\r\n        }\r\n\r\n        const hasMoreThanOneHandler = this.checkIfIntentHasMoreThanOneHandler(intent, request);\r\n\r\n        if (!hasMoreThanOneHandler) {\r\n            return { open: false, reason: `Raised intent ${intent.name} has only one handler` };\r\n        }\r\n\r\n        return { open: true };\r\n    }\r\n\r\n    private checkIfIntentHasMoreThanOneHandler(intent: Glue42.Intents.Intent, request: Glue42.Intents.IntentRequest): boolean {\r\n        // no target => show resolver if request.handlers > 1 || intent.handlers.length > 1\r\n        // reuse => show resolver if 2+ instances in request.handlers || show resolver if intent.handlers.length > 1\r\n        // startNew => show resolver if 2+ apps in request.handler || intent.handlers as apps > 1\r\n        // app => do not show resolver\r\n\r\n        if (!request.target) {\r\n            return request.handlers\r\n                ? request.handlers.length > 1\r\n                : intent.handlers.length > 1;\r\n        }\r\n\r\n        if (request.target === \"reuse\") {\r\n            return request.handlers\r\n                ? request.handlers.filter((handler) => handler.type === \"instance\" && handler.instanceId).length > 1 || request.handlers.filter((handler) => handler.type === \"app\").length > 1\r\n                : intent.handlers.filter((handler) => handler.type === \"instance\" && handler.instanceId).length > 1 || intent.handlers.filter((handler) => handler.type === \"app\").length > 1;\r\n        }\r\n\r\n        if (request.target === \"startNew\") {\r\n            return request.handlers\r\n                ? request.handlers.filter((handler) => handler.type === \"app\").length > 1\r\n                : intent.handlers.filter((handler) => handler.type === \"app\").length > 1;\r\n        }\r\n\r\n        if (typeof request.target === \"object\") {\r\n            return false;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private buildInteropMethodName(intentName: string): string {\r\n        return `${GLUE42_FDC3_INTENTS_METHOD_PREFIX}${intentName}`;\r\n    }\r\n\r\n    private clearUnregistrationPromise(promiseToRemove: Promise<void>): void {\r\n        this.unregisterIntentPromises = this.unregisterIntentPromises.filter((promise) => promise !== promiseToRemove);\r\n    }\r\n\r\n    private unsubscribeIntent(intentName: string): void {\r\n        this.myIntents.delete(intentName);\r\n\r\n        const methodName = this.buildInteropMethodName(intentName);\r\n\r\n        // typings are wrong and mark unregister as a sync method\r\n        const unregisterPromise = this.interop.unregister(methodName) as unknown as Promise<void>;\r\n\r\n        this.unregisterIntentPromises.push(unregisterPromise);\r\n\r\n        unregisterPromise\r\n            .then(() => {\r\n                this.clearUnregistrationPromise(unregisterPromise);\r\n            })\r\n            .catch((err) => {\r\n                this.logger.error(`Unregistration of a method with name ${methodName} failed with reason: `, err);\r\n\r\n                this.clearUnregistrationPromise(unregisterPromise);\r\n            });\r\n    }\r\n\r\n    private validateIntentRequest(request: Glue42.Intents.IntentRequest): void {\r\n        this.validateIntentRequestContext(request.context);\r\n\r\n        this.validateIntentRequestTarget(request.target);\r\n\r\n        this.validateIntentRequestTimeout(request.timeout);\r\n\r\n        this.validateWaitUserResponseIndefinitely(request.waitUserResponseIndefinitely);\r\n\r\n        if (request.handlers) {\r\n            request.handlers.forEach((handler) => this.validateIntentRequestHandler(handler));\r\n        }\r\n    }\r\n\r\n    private validateIntentRequestTarget(target?: \"startNew\" | \"reuse\" | { app?: string; instance?: string }): void {\r\n        if (!target) {\r\n            return;\r\n        }\r\n\r\n        if (typeof target !== \"string\" && typeof target !== \"object\") {\r\n            throw new Error(`Please provide the intent target as one of the valid values: \"reuse\", \"startNew\", { app: string }, { instance: string } `);\r\n        }\r\n    }\r\n\r\n    private validateIntentRequestContext(context?: any): void {\r\n        if (!context) {\r\n            return;\r\n        }\r\n\r\n        if (typeof context !== \"object\") {\r\n            throw new Error(`Please provide the intent context as an object`);\r\n        }\r\n\r\n        if (context.type && typeof context.type !== \"string\") {\r\n            throw new Error(`Please provide the intent context as an object with 'type' property as string`);\r\n        }\r\n\r\n        if (context.data && typeof context.data !== \"object\") {\r\n            throw new Error(`Please provide the intent context as an object with 'data' property as object`);\r\n        }\r\n    }\r\n\r\n    private validateIntentRequestHandler(handler: Glue42.Intents.IntentHandler): void {\r\n        if (!handler.applicationName) {\r\n            throw new Error(`Please provide applicationName for handler ${JSON.stringify(handler)}`);\r\n        }\r\n\r\n        if (!handler.type) {\r\n            throw new Error(`Please provide type for handler ${JSON.stringify(handler)}`);\r\n        }\r\n\r\n        if (handler.type === \"instance\" && !handler.instanceId) {\r\n            throw new Error(`Please provide instanceId for handler ${JSON.stringify(handler)}`);\r\n        }\r\n    }\r\n\r\n    private validateIntentRequestTimeout(timeout?: number) {\r\n        if (!timeout) {\r\n            return;\r\n        }\r\n\r\n        if (typeof timeout !== \"number\") {\r\n            throw new Error(`Please provide the timeout as a number`);\r\n        }\r\n\r\n        if (timeout <= 0) {\r\n            throw new Error(`Please provide the timeout as a positive number`);\r\n        }\r\n    }\r\n\r\n    private validateWaitUserResponseIndefinitely(waitUserResponseIndefinitely?: boolean) {\r\n        if (!waitUserResponseIndefinitely) {\r\n            return;\r\n        }\r\n\r\n        if (typeof waitUserResponseIndefinitely !== \"boolean\") {\r\n            throw new Error(\"Please provide waitUserResponseIndefinitely as a boolean\");\r\n        }\r\n    }\r\n\r\n    private findHandlerByFilter(handlers: Glue42.Intents.IntentHandler[], filter: { app?: string, instance?: string, type?: \"app\" | \"instance\" }) {\r\n        if (filter.type) {\r\n            return handlers.find((handler) => handler.type === filter.type);\r\n        }\r\n\r\n        if (filter.instance) {\r\n            return handlers.find((handler) => filter.app\r\n                ? handler.applicationName === filter.app && handler.instanceId === filter.instance\r\n                : handler.instanceId === filter.instance\r\n            );\r\n        }\r\n\r\n        if (filter.app) {\r\n            return handlers.find((handler) => handler.applicationName === filter.app);\r\n        }\r\n    }\r\n}\r\n","import { Glue42 } from \"../glue\";\n\ninterface CallDetails {\n    date: Date;\n    config: Glue42.Config;\n}\n\nexport class FactoryCallInfo {\n\n    public promise: Promise<Glue42.Glue>;\n    public initialized = false;\n    public details: CallDetails[] = [];\n    public reject: (reason?: any) => void = () => { /** Do nothing - default impl. - will be replaced */};\n    public resolve: (value: Glue42.Glue | PromiseLike<Glue42.Glue>) => void = () => { /** Do nothing - default impl. - will be replaced */};\n\n    public init(config: Glue42.Config) {\n        this.initialized = true;\n        this.addCall(config);\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n\n    public addCall(config: Glue42.Config) {\n        this.details.push({ date: new Date(), config });\n    }\n\n    public done(g: Glue42.Glue) {\n        this.resolve(g);\n    }\n\n    public error(e: Error) {\n        this.reject(e);\n    }\n}\n","import { Glue42 } from \"../../glue\";\nimport { default as CallbackRegistryFactory, CallbackRegistry } from \"callback-registry\";\nimport { isFunction, isObject, isString } from \"../activity/helpers/util\";\n\nexport interface AppPreferences {\n    app: string;\n    data: any;\n    lastUpdate: Date;\n}\n\nexport class Prefs {\n\n    private registry: CallbackRegistry = CallbackRegistryFactory();\n    private interopMethodRegistered = false;\n\n    constructor(private appName: string, private interop: Glue42.Interop.API) {\n    }\n\n    public async get(app?: string): Promise<AppPreferences | undefined> {\n        const data = (await this.interop.invoke(\"T42.Prefs.Get\", { app: app ?? this.appName }));\n        return data.returned;\n    }\n\n    public async set(data: any, options?: { app: string }): Promise<void> {\n        this.verifyDataObject(data);\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: options?.app ?? this.appName, data, merge: false });\n    }\n\n    public async setFor(app: string, data: any): Promise<void> {\n        this.verifyApp(app);\n        this.verifyDataObject(data);\n        return this.set(data, { app });\n    }\n\n    public async update(data: any, options?: { app: string }) {\n        this.verifyDataObject(data);\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: options?.app ?? this.appName, data, merge: true });\n    }\n\n    public async updateFor(app: string, data: any) {\n        this.verifyApp(app);\n        this.verifyDataObject(data);\n        return this.update(data, { app });\n    }\n\n    public async clear(app?: string) {\n        await this.interop.invoke(\"T42.Prefs.Set\", { app: app ?? this.appName, clear: true });\n    }\n\n    public async clearFor(app: string) {\n        this.verifyApp(app);\n        await this.interop.invoke(\"T42.Prefs.Set\", { app, clear: true });\n    }\n\n    public async getAll(): Promise<AppPreferences[]> {\n        const data = (await this.interop.invoke(\"T42.Prefs.Get\"));\n        return data.returned;\n    }\n\n    public async clearAll() {\n        await this.interop.invoke(\"T42.Prefs.Set\", { clear: true });\n    }\n\n    public subscribe(callback: (prefs: AppPreferences) => void): () => void {\n        this.verifyCallback(callback);\n        return this.subscribeFor(this.appName, callback);\n    }\n\n    public subscribeFor(app: string, callback: (prefs: AppPreferences) => void): () => void {\n        this.verifyApp(app);\n        this.verifyCallback(callback);\n        const unsubscribeFn = this.registry.add(app, callback);\n\n        // register the method if needed and then send the subscription request\n        this.registerInteropIfNeeded()\n            .then(() => {\n                this.interop.invoke(\"T42.Prefs.Get\", { app, subscribe: true });\n            });\n\n        return () => {\n            unsubscribeFn();\n        };\n    }\n\n    private async registerInteropIfNeeded() {\n        if (this.interopMethodRegistered) {\n            return;\n        }\n        this.interopMethodRegistered = true;\n\n        await this.interop.register(\"T42.Prefs.Update\", (args) => {\n            this.registry.execute(args.app, args);\n        });\n    }\n\n    private verifyApp(app: string) {\n        if (!app) {\n            throw new Error(`app should be defined`);\n        }\n        if (!isString(app)) {\n            throw new Error(`app should be a string`);\n        }\n    }\n    private verifyDataObject(data: any) {\n        if (!data) {\n            throw new Error(`data should be defined`);\n        }\n        if (!isObject(data)) {\n            throw new Error(`data should be an object`);\n        }\n    }\n\n    private verifyCallback(callback: any) {\n        if (!isFunction(callback)) {\n            throw new Error(`callback should be defined`);\n        }\n    }\n}\n","import { Glue42 } from \"../../glue\";\r\nimport { isObject, isString } from \"../activity/helpers/util\";\r\n\r\nconst enum Commands {\r\n    GetCookies = \"get-cookies\",\r\n    SetCookie = \"set-cookie\",\r\n    RemoveCookie = \"remove-cookie\"\r\n}\r\n\r\nexport class Cookies implements Glue42.Cookies.API {\r\n\r\n    constructor(private methodName: string, private interop: Glue42.Interop.API) {\r\n    }\r\n\r\n    public async get(filter?: Glue42.Cookies.CookiesGetFilter): Promise<Glue42.Cookies.Cookie[]> {\r\n        const result = await this.invoke<{ cookies: Glue42.Cookies.Cookie[] }>(Commands.GetCookies, { filter });\r\n        return result.returned.cookies;\r\n    }\r\n\r\n    public async set(cookie: Glue42.Cookies.CookiesSetDetails): Promise<void> {\r\n        this.verifyCookieObject(cookie);\r\n        await this.invoke<Glue42.Cookies.Cookie[]>(Commands.SetCookie, cookie);\r\n    }\r\n\r\n    public async remove(url: string, name: string): Promise<void> {\r\n        if (!isString(url)) {\r\n            throw new Error(`url should be a string`);\r\n        }\r\n        if (!isString(name)) {\r\n            throw new Error(`name should be a string`);\r\n        }\r\n        await this.invoke<Glue42.Cookies.Cookie[]>(Commands.RemoveCookie, { url, name });\r\n    }\r\n\r\n    private invoke<T>(command: Commands, data: any) {\r\n        return this.interop.invoke<T>(this.methodName, { command, args: data });\r\n    }\r\n\r\n    private verifyCookieObject(cookie: Glue42.Cookies.CookiesSetDetails) {\r\n        if (!cookie) {\r\n            throw new Error(`cookie should be defined`);\r\n        }\r\n        if (!isObject(cookie)) {\r\n            throw new Error(`cookie should be an object`);\r\n        }\r\n    }\r\n}\r\n","import { Glue42 } from \"../../glue\";\r\nimport { Cookies } from \"./index\";\r\n\r\nexport function factory(agm: Glue42.AGM.API, methodName: string): Glue42.Cookies.API & { ready: () => Promise<void>; } {\r\n    const cookies = new Cookies(methodName, agm);\r\n\r\n    return {\r\n        get: cookies.get.bind(cookies),\r\n        remove: cookies.remove.bind(cookies),\r\n        set: cookies.set.bind(cookies),\r\n        ready: () => Promise.resolve()\r\n    };\r\n}\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Glue42 } from \"../glue\";\nimport { InternalConfig } from \"./types\";\nimport Utils from \"./utils\";\n\nexport class EventsDispatcher {\n    private glue!: Glue42.Glue;\n    private readonly glue42EventName = \"Glue42\";\n\n    private readonly events: { [key in string]: { name: string; handle: (glue42Data: any) => void | Promise<void> } } = {\n        notifyStarted: { name: \"notifyStarted\", handle: this.handleNotifyStarted.bind(this) },\n        requestGlue: { name: \"requestGlue\", handle: this.handleRequestGlue.bind(this) }\n    };\n\n    constructor(private readonly config: InternalConfig) { }\n\n    public start(glue: Glue42.Glue): void {\n\n        if (Utils.isNode()) {\n            // raising custom events is not supported in Node, because we can't raise global events and we do not at this\n            // point expose an EventEmitter instance via the API\n            return;\n        }\n\n        this.glue = glue;\n\n        this.wireCustomEventListener();\n\n        this.announceStarted();\n    }\n\n    private wireCustomEventListener(): void {\n        window.addEventListener(this.glue42EventName, (event) => {\n            const data = (event as CustomEvent).detail;\n\n            if (!data || !data.glue42) {\n                return;\n            }\n\n            const glue42Event: string = data.glue42.event;\n\n            const foundHandler = this.events[glue42Event];\n\n            if (!foundHandler) {\n                return;\n            }\n\n            foundHandler.handle(data.glue42.message);\n\n        });\n    }\n\n    private announceStarted(): void {\n        this.send(\"start\");\n    }\n\n    private handleRequestGlue(): void {\n        if (!this.config.exposeGlue) {\n            this.send(\"requestGlueResponse\", { error: \"Will not give access to the underlying Glue API, because it was explicitly denied upon initialization.\" });\n            return;\n        }\n\n        this.send(\"requestGlueResponse\", { glue: this.glue });\n    }\n\n    private handleNotifyStarted(): void {\n        this.announceStarted();\n    }\n\n    private send(eventName: string, message?: any): void {\n        const payload = { glue42: { event: eventName, message } };\n\n        const event = new CustomEvent(this.glue42EventName, { detail: payload });\n\n        window.dispatchEvent(event);\n    }\n}\n","import CoreFactory, { Glue42Core } from \"@glue42/core\";\nimport { ActivityModule } from \"./activity/main\";\nimport AppManagerFactory from \"./app-manager/main\";\nimport WindowsFactory from \"./windows/main\";\nimport LayoutsFactory from \"./layouts/main\";\nimport DisplayManager from \"./displays/displayManager\";\nimport { factory as channels } from \"./channels/main\";\nimport { factory as hotkeys } from \"./hotkeys/main\";\n\nimport { Glue42 } from \"../glue\";\nimport { version } from \"../package.json\";\nimport prepareConfig from \"./config\";\nimport { LibConfigObject } from \"./types\";\nimport { ActivityMode } from \"./activity/activityConfig\";\nimport Utils from \"./utils\";\nimport { Notifications } from \"./notifications/main\";\nimport { factory as themes } from \"./themes/main\";\nimport { Intents } from \"./intents/intents\";\nimport { FactoryCallInfo } from \"./factoryCallInfo\";\nimport { Prefs } from \"./prefs/index\";\nimport { factory as cookies } from \"./cookies/main\";\nimport { EventsDispatcher } from \"./eventsDispatcher\";\n\nconst callInfo: FactoryCallInfo = new FactoryCallInfo();\n\nconst factory = async (options: Glue42.Config): Promise<Glue42.Glue> => {\n    let firstRun = false;\n    if (!callInfo.initialized) {\n        firstRun = true;\n        callInfo.init(options);\n    }\n\n    // if running in GD, do not allow creating multiple instance of this API in the same page\n    const glue42gd: Glue42.GDObject = typeof window !== \"undefined\" && window.glue42gd;\n    if (glue42gd) {\n        if (!firstRun) {\n            callInfo.addCall(options);\n            return callInfo.promise;\n        }\n    }\n    const g = await factoryCore(options, glue42gd);\n    callInfo.resolve(g);\n    return g;\n};\n\nconst factoryCore = async (options: Glue42.Config, glue42gd: Glue42.GDObject): Promise<Glue42.Glue> => {\n    const T42GDExecuteMethod = \"T42.GD.Execute\";\n    const gdMajorVersion = Utils.getGDMajorVersion();\n    // get config object\n    // basically selecting some properties (and defaulting them)\n    // it's used to extract things like layouts, appManager, activities etc things\n    // that glueCore itself doesn't know about\n    options = options || {};\n    const glueConfig = prepareConfig(options);\n    options.gateway = options.gateway || {};\n\n    let _appManager: any;\n    let _activity: any;\n    let _windows: any;\n    let _displays: any;\n    let _channels: Glue42.Channels;\n    const _browserEventsDispatcher = new EventsDispatcher(glueConfig);\n\n    // dependency graph:\n    //   windows: agm, appManager (via getter)\n    //   activities: contexts, agm, logger, windows, appManager (via getter)\n    //   appManager: agm, windows, logger, activities\n    //   layouts: agm, appManager, logger\n    function createWindows(core: Glue42Core.GlueCore) {\n        if (glueConfig.windows) {\n\n            const windowsLogger = getLibLogger(\"windows\", core.logger, glueConfig.windows);\n\n            _windows = WindowsFactory(\n                core.agm,\n                windowsLogger,\n                () => {\n                    return _appManager;\n                },\n                () => {\n                    return _displays;\n                },\n                () => {\n                    return _channels;\n                },\n                gdMajorVersion);\n            debugLog(_windows);\n            return _windows;\n        }\n    }\n\n    function createActivities(core: Glue42Core.GlueCore) {\n        if (glueConfig.activities) {\n            if (ActivityModule.checkIsUsingGW3Implementation && ActivityModule.checkIsUsingGW3Implementation(core.connection)) {\n\n                const activityLogger = getLibLogger(\"activity\", core.logger, glueConfig.activities);\n\n                _activity = new ActivityModule({\n                    connection: core.connection,\n                    contexts: core.contexts,\n                    agm: core.agm,\n                    logger: activityLogger,\n                    logLevel: \"info\",\n                    disableAutoAnnounce: false,\n                    disposeRequestHandling: \"exit\",\n                    announcementInfo: null,\n                    windows: _windows,\n                    appManagerGetter: () => {\n                        return _appManager;\n                    },\n                    mode: glueConfig.activities.mode as ActivityMode,\n                    typesToTrack: glueConfig.activities.typesToTrack,\n                    activityId: glue42gd?.activityInfo?.activityId,\n                    gdMajorVersion\n                }).api;\n                debugLog(_activity);\n                return _activity;\n            }\n        }\n    }\n\n    function createAppManager(core: Glue42Core.GlueCore) {\n        if (!glueConfig.appManager) {\n            return;\n        }\n\n        const logger = getLibLogger(\"appManager\", core.logger, glueConfig.appManager);\n\n        // AppManager v3\n        _appManager = AppManagerFactory({\n            agm: core.agm,\n            windows: _windows,\n            logger,\n            activities: _activity,\n            mode: glueConfig.appManager.mode,\n            gdMajorVersion\n        });\n        debugLog(_appManager);\n        return _appManager;\n    }\n\n    function createLayouts(core: Glue42Core.GlueCore) {\n        if (!glueConfig.layouts) {\n            return;\n        }\n\n        const logger = getLibLogger(\"layouts\", core.logger, glueConfig.layouts);\n        const layoutsConfig = glueConfig.layouts;\n        const lay = LayoutsFactory({\n            agm: core.agm,\n            appManager: _appManager,\n            activityGetter: () => _activity,\n            logger,\n            mode: layoutsConfig.mode,\n            autoSaveWindowContext: layoutsConfig.autoSaveWindowContext ?? false,\n            gdMajorVersion\n        });\n        debugLog(lay);\n        return lay;\n    }\n\n    function createChannels(core: Glue42Core.GlueCore) {\n        if (!glueConfig.channels) {\n            return;\n        }\n\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use channels without context\n            return;\n        }\n\n        // Logger\n        const logger = getLibLogger(\"channels\", core.logger, glueConfig.channels);\n\n        _channels = channels(core.contexts, core.agm, () => _windows, logger);\n\n        debugLog(_channels);\n        return _channels;\n    }\n\n    function createHotkeys(core: Glue42Core.GlueCore) {\n        const hotkeysAPI = hotkeys(core.agm);\n\n        debugLog(hotkeysAPI);\n        return hotkeysAPI;\n    }\n\n    function createIntents(core: Glue42Core.GlueCore) {\n        const intentsAPI = new Intents(core.agm, _windows, core.logger.subLogger(\"intents\"), options, _appManager);\n\n        debugLog(intentsAPI);\n        return intentsAPI;\n    }\n\n    function createNotifications(core: Glue42Core.GlueCore) {\n        const notificationsAPI = new Notifications(core.interop, core.logger).toAPI();\n\n        debugLog(notificationsAPI);\n        return notificationsAPI;\n    }\n\n    function createDisplaysApi(core: Glue42Core.GlueCore) {\n        if (glueConfig.displays) {\n            const displaysLogger = getLibLogger(\"displays\", core.logger, glueConfig.displays);\n\n            _displays = new DisplayManager(core.agm, displaysLogger);\n            debugLog(_displays);\n            return _displays;\n        }\n    }\n\n    function createThemes(core: Glue42Core.GlueCore) {\n        if (!core.contexts) {\n            // TODO log - notify the user that he can not use themes without context\n            return;\n        }\n        const themesAPI = themes(core);\n\n        debugLog(themesAPI);\n        return themesAPI;\n    }\n\n    function createPrefs(core: Glue42Core.GlueCore) {\n        const appName = options.application ?? glue42gd?.application ?? core.interop.instance.application;\n        const prefs = new Prefs(appName, core.interop);\n\n        debugLog(prefs);\n        return prefs;\n    }\n\n    function createCookies(core: Glue42Core.GlueCore) {\n        const api = cookies(core.interop, T42GDExecuteMethod);\n\n        debugLog(api);\n        return api;\n    }\n\n    function getLibLogger(loggerName: string, logger: Glue42Core.Logger.API, config: LibConfigObject<string | boolean>) {\n        const newLogger = logger.subLogger(loggerName);\n\n        if (config && config.logger) {\n            const loggerConfig = config.logger;\n            if (loggerConfig.console) {\n                newLogger.consoleLevel(loggerConfig.console);\n            }\n            if (loggerConfig.publish) {\n                newLogger.publishLevel(loggerConfig.publish);\n            }\n            // not supported in GD3\n            // if (loggerConfig.metrics) {\n            //  newLogger.metricsLevel(loggerConfig.metrics);\n            // }\n        }\n\n        return newLogger;\n    }\n\n    const ext: Glue42Core.Extension = {\n        // define extra libraries for glue-core to raise\n        libs: [\n            { name: \"windows\", create: createWindows },\n            { name: \"activities\", create: createActivities },\n            { name: \"appManager\", create: createAppManager },\n            { name: \"layouts\", create: createLayouts },\n            { name: \"channels\", create: createChannels },\n            { name: \"hotkeys\", create: createHotkeys },\n            { name: \"displays\", create: createDisplaysApi },\n            { name: \"intents\", create: createIntents },\n            { name: \"notifications\", create: createNotifications },\n            { name: \"themes\", create: createThemes },\n            { name: \"prefs\", create: createPrefs },\n            { name: \"cookies\", create: createCookies }\n        ],\n\n        version,\n\n        enrichGlue: (glue: Glue42Core.GlueCore) => {\n            // put some data to config\n            glue.config.activities = glueConfig.activities;\n            glue.config.windows = glueConfig.windows;\n            glue.config.appManager = glueConfig.appManager;\n            glue.config.layouts = glueConfig.layouts;\n            glue.config.channels = glueConfig.channels;\n            glue.config.displays = glueConfig.displays;\n        },\n    };\n\n    const currentLog: any[] = [];\n    if (typeof window !== \"undefined\") {\n        if (!(window as any).glueFactoryLog) {\n            (window as any).glueFactoryLog = [];\n        }\n        (window as any).glueFactoryLog.push(currentLog);\n    }\n\n    function debugLog(entry: any) {\n        currentLog.push(entry);\n    }\n\n    const glueApi = (await CoreFactory(options, ext)) as Glue42.Glue;\n\n    // Decorate the ready glue object with extra functionalities coming from the user-defined libraries.\n    if (Array.isArray(options?.libraries) && options.libraries.length) {\n        await Promise.all(options.libraries.map((lib) => lib(glueApi, options)));\n    }\n\n    _browserEventsDispatcher.start(glueApi);\n\n    return glueApi;\n};\n\nfactory.coreVersion = (CoreFactory as any).version;\nfactory.version = version;\nfactory.calls = callInfo;\n\nexport default factory;\n","import CreateGlue from \"./glue\";\n\nlet whatToExpose = CreateGlue;\nlet shouldSetToWindow = true;\n\nif (typeof window !== \"undefined\") {\n    // if glue42gd (running in GD3) and autoInjected\n    const glue42gd = (window as any).glue42gd;\n    if (glue42gd && glue42gd.autoInjected) {\n        whatToExpose = (window as any).Glue;\n        // no need to set to window, it's already there\n        shouldSetToWindow = false;\n    }\n\n    if (shouldSetToWindow) {\n        (window as any).Glue = whatToExpose;\n    }\n\n    // remove GlueCore from the window object (injected by Glue-core)\n    delete (window as any).GlueCore;\n}\n// add default library for ES6 modules\n(whatToExpose as any).default = whatToExpose;\n\nexport default whatToExpose;\n"],"names":["metricTypes","createRegistry","lib","CallbackRegistryFactory","Utils","seed","getNextValue","setSeed","randomFromSeed","require$$0","ORIGINAL","alphabet","previousSeed","shuffled","reset","setCharacters","characters","shuffle","getShuffled","lookup","alphabet_1","crypto","randomByte","randomByteBrowser","require$$1","require$$2","generate","REDUCE_TIME","version","counter","previousSeconds","build","build_1","isShortId","isValid","PromisePlus","CallbackFactory","Logger","msg.GW_MESSAGE_CREATE_CONTEXT","msg.GW_MESSAGE_ACTIVITY_CREATED","msg.GW_MESSAGE_ACTIVITY_DESTROYED","msg.GW_MESSAGE_CONTEXT_CREATED","msg.GW_MESSAGE_CONTEXT_ADDED","msg.GW_MESSAGE_SUBSCRIBE_CONTEXT","msg.GW_MESSAGE_SUBSCRIBED_CONTEXT","msg.GW_MESSAGE_UNSUBSCRIBE_CONTEXT","msg.GW_MESSAGE_DESTROY_CONTEXT","msg.GW_MESSAGE_CONTEXT_DESTROYED","msg.GW_MESSAGE_UPDATE_CONTEXT","msg.GW_MESSAGE_CONTEXT_UPDATED","msg.GW_MESSAGE_JOINED_ACTIVITY","prepareConfig","pjsonVersion","global","GW3Bridge","ContextData","promisify","random","ServerStreaming","shortid","util.isUndefinedOrNull","util.isString","util.isArray","util.isFunction","util.isUndefined","util.isObject","util.some","My","AgmNames.GetApplicationsMethodName","AgmNames.StartApplicationMethodName","AgmNames.StopApplicationMethodName","AgmNames.ActivateApplicationMethodName","AgmNames.GetConfigurationRegionMethodName","AgmNames.GetBranchesMethodName","AgmNames.GetCurrentBranchMethodName","AgmNames.SetConfigurationRegionMethodName","AgmNames.SetCurrentBranchMethodName","AgmNames.GetUserMethodName","AgmNames.GetFunctionalEntitlementMethodName","AgmNames.CanIMethodName","AgmNames.ShutdownMethodName","AgmNames.RestartMethodName","AgmNames.OnEventMethodName","EventNames.OnApplicationAddedEvent","EventNames.OnApplicationChangedEvent","EventNames.OnApplicationRemovedEvent","EventNames.OnApplicationReadyEvent","EventNames.OnApplicationStartedEvent","EventNames.OnApplicationStartFailedEvent","EventNames.OnApplicationStoppedEvent","EventNames.OnApplicationUpdatedEvent","EventNames.OnApplicationAgmServerReadyEvent","EventNames.OnBranchChangedEvent","EventNames.OnBranchesModifiedEvent","subscriptionFactory","encode","decode","utils","util.isNullOrWhiteSpace","util.isNumber","GD","callbackRegistry","Layouts","factory","channels","hotkeys","themes","cookies","CoreFactory","CreateGlue"],"mappings":"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,KAAK,CAAC,CAAC;EAChE,EAAA;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;GACA,SAAS,WAAW,CAAC,KAAK,EAAE;EAC5B;EACA,GAAE,OAAO,iBAAiB,CAAC,KAAK,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC;EACzE,MAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC;EAC1F,EAAA;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,CAAA,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAC5B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;GACA,SAAS,WAAW,CAAC,KAAK,EAAE;EAC5B,GAAE,OAAO,KAAK,IAAI,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;EACtE,EAAA;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;GACA,SAAS,iBAAiB,CAAC,KAAK,EAAE;KAChC,OAAO,YAAY,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;EAClD,EAAA;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,CAAA,IAAI,QAAQ,GAAG,cAAc,IAAI,SAAS,CAAC;AAC3C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;GACA,SAAS,UAAU,CAAC,KAAK,EAAE;EAC3B;EACA;EACA,GAAE,IAAI,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;EAC5D,GAAA,OAAO,GAAG,IAAI,OAAO,IAAI,GAAG,IAAI,MAAM,CAAC;EACxC,EAAA;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;GACA,SAAS,QAAQ,CAAC,KAAK,EAAE;EACzB,GAAE,OAAO,OAAO,KAAK,IAAI,QAAQ;EACjC,KAAI,KAAK,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,gBAAgB,CAAC;EAC7D,EAAA;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;GACA,SAAS,QAAQ,CAAC,KAAK,EAAE;EACzB,GAAE,IAAI,IAAI,GAAG,OAAO,KAAK,CAAC;EAC1B,GAAE,OAAO,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,UAAU,CAAC,CAAC;EAC5D,EAAA;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;GACA,SAAS,YAAY,CAAC,KAAK,EAAE;KAC3B,OAAO,CAAC,CAAC,KAAK,IAAI,OAAO,KAAK,IAAI,QAAQ,CAAC;EAC5C,EAAA;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;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"}